{"id":"56a1585647a933b21fba4c0972783b1b","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC4906.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @title ERC-721 Burnable Token\n * @dev ERC-721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the ERC that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive},\n * interfere with enumerability and should not be used together with {ERC721Enumerable}.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721Enumerable\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /// @inheritdoc IERC721Enumerable\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /// @inheritdoc IERC721Enumerable\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /// @inheritdoc ERC721\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        mapping(uint256 index => uint256) storage _ownedTokensByOwner = _ownedTokens[from];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokensByOwner[lastTokenIndex];\n\n            _ownedTokensByOwner[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokensByOwner[lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-721 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC721Pausable is ERC721, Pausable {\n    /**\n     * @dev See {ERC721-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(\n        address to,\n        uint256 tokenId,\n        address auth\n    ) internal virtual override whenNotPaused returns (address) {\n        return super._update(to, tokenId, auth);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Metadata} from \"./IERC721Metadata.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {IERC4906-MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/SeiNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n \nimport {ERC721} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport {ERC721Burnable} from \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport {ERC721Enumerable} from \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport {ERC721Pausable} from \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\";\nimport {ERC721URIStorage} from \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n \ncontract SeiNFT is ERC721, ERC721Enumerable, ERC721URIStorage, ERC721Pausable, Ownable, ERC721Burnable {\n    uint256 private _nextTokenId;\n \n     // Base URI for metadata\n    string private _baseTokenURI;\n \n    constructor(address initialOwner, string memory baseTokenURI)\n        ERC721(\"Sei NFT Collection\", \"SEINFT\")\n        Ownable(initialOwner)\n    {\n        _baseTokenURI = baseTokenURI;\n    }\n \n    // Function to update the base URI (only owner)\n    function setBaseURI(string memory baseTokenURI) public onlyOwner {\n        _baseTokenURI = baseTokenURI;\n    }\n \n    // Override the baseURI function\n    function _baseURI() internal view override returns (string memory) {\n        return _baseTokenURI;\n    }\n \n    function pause() public onlyOwner {\n        _pause();\n    }\n \n    function unpause() public onlyOwner {\n        _unpause();\n    }\n \n    function safeMint(address to, string memory uri)\n        public\n        onlyOwner\n        returns (uint256)\n    {\n        uint256 tokenId = _nextTokenId++;\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, uri);\n        return tokenId;\n    }\n \n    // The following functions are overrides required by Solidity.\n \n    function _update(address to, uint256 tokenId, address auth)\n        internal\n        override(ERC721, ERC721Enumerable, ERC721Pausable)\n        returns (address)\n    {\n        return super._update(to, tokenId, auth);\n    }\n \n    function _increaseBalance(address account, uint128 value)\n        internal\n        override(ERC721, ERC721Enumerable)\n    {\n        super._increaseBalance(account, value);\n    }\n \n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n \n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721Enumerable, ERC721URIStorage)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2153],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2154,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2153],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3751]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":152,"sourceUnit":3752,"src":"133:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"141:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[3751],"IERC4906":[175],"IERC721":[1390]},"id":176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":152,"src":"133:38:2","symbolAliases":[{"foreign":{"id":154,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":180,"src":"172:38:2","symbolAliases":[{"foreign":{"id":156,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"180:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":159,"name":"IERC165","nameLocations":["279:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3751,"src":"279:7:2"},"id":160,"nodeType":"InheritanceSpecifier","src":"279:7:2"},{"baseName":{"id":161,"name":"IERC721","nameLocations":["288:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"288:7:2"},"id":162,"nodeType":"InheritanceSpecifier","src":"288:7:2"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"212:45:2","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":175,"linearizedBaseContracts":[175,1390,3751],"name":"IERC4906","nameLocation":"267:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"302:201:2","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":167,"name":"MetadataUpdate","nameLocation":"514:14:2","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:2","nodeType":"VariableDeclaration","scope":167,"src":"529:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:2"},"src":"508:39:2"},{"anonymous":false,"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"553:212:2","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":174,"name":"BatchMetadataUpdate","nameLocation":"776:19:2","nodeType":"EventDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:2","nodeType":"VariableDeclaration","scope":174,"src":"796:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:2","nodeType":"VariableDeclaration","scope":174,"src":"818:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:2"},"src":"770:68:2"}],"scope":176,"src":"257:583:2","usedErrors":[],"usedEvents":[167,174,1289,1298,1307]}],"src":"107:734:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1390]},"id":180,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":177,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"106:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":180,"sourceUnit":1391,"src":"132:52:3","symbolAliases":[{"foreign":{"id":178,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"140:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[316],"IERC20Errors":[221],"IERC721Errors":[269]},"id":317,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":181,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":221,"linearizedBaseContracts":[221],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":191,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":191,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":191,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":191,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":196,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":196,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":201,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":201,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":210,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":210,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":210,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":210,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":215,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":215,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":220,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":220,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":317,"src":"280:1764:4","usedErrors":[191,196,201,210,215,220],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":269,"linearizedBaseContracts":[269],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":227,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":227,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":232,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":232,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":241,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":241,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":241,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":241,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":246,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":246,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":251,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":251,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":258,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":258,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":258,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":263,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":263,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":268,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":268,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":317,"src":"2190:2092:4","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":316,"linearizedBaseContracts":[316],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":281,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":281,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":281,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":281,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":281,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":286,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":286,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":291,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":291,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":298,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":298,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":298,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":303,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":303,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":308,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":308,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":315,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":315,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":315,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":317,"src":"4430:2107:4","usedErrors":[281,286,291,298,303,308,315],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2153],"ERC165":[3739],"ERC721":[1273],"ERC721Utils":[2123],"IERC165":[3751],"IERC721":[1390],"IERC721Errors":[269],"IERC721Metadata":[2046],"Strings":[3715]},"id":1274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":318,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":1391,"src":"133:38:5","symbolAliases":[{"foreign":{"id":319,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"141:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":2047,"src":"172:65:5","symbolAliases":[{"foreign":{"id":321,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"180:15:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":2124,"src":"238:52:5","symbolAliases":[{"foreign":{"id":323,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"246:11:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":2154,"src":"291:48:5","symbolAliases":[{"foreign":{"id":325,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"299:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":3716,"src":"340:48:5","symbolAliases":[{"foreign":{"id":327,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"348:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":331,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":3740,"src":"389:69:5","symbolAliases":[{"foreign":{"id":329,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"397:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":330,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"406:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":317,"src":"459:66:5","symbolAliases":[{"foreign":{"id":332,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"467:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":335,"name":"Context","nameLocations":["803:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"803:7:5"},"id":336,"nodeType":"InheritanceSpecifier","src":"803:7:5"},{"baseName":{"id":337,"name":"ERC165","nameLocations":["812:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3739,"src":"812:6:5"},"id":338,"nodeType":"InheritanceSpecifier","src":"812:6:5"},{"baseName":{"id":339,"name":"IERC721","nameLocations":["820:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"820:7:5"},"id":340,"nodeType":"InheritanceSpecifier","src":"820:7:5"},{"baseName":{"id":341,"name":"IERC721Metadata","nameLocations":["829:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":2046,"src":"829:15:5"},"id":342,"nodeType":"InheritanceSpecifier","src":"829:15:5"},{"baseName":{"id":343,"name":"IERC721Errors","nameLocations":["846:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"846:13:5"},"id":344,"nodeType":"InheritanceSpecifier","src":"846:13:5"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"527:247:5","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1273,"linearizedBaseContracts":[1273,269,2046,1390,3739,3751,2153],"name":"ERC721","nameLocation":"793:6:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":347,"libraryName":{"id":345,"name":"Strings","nameLocations":["872:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"872:7:5"},"nodeType":"UsingForDirective","src":"866:26:5","typeName":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":349,"mutability":"mutable","name":"_name","nameLocation":"931:5:5","nodeType":"VariableDeclaration","scope":1273,"src":"916:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":351,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:5","nodeType":"VariableDeclaration","scope":1273,"src":"963:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":350,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":355,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:5","nodeType":"VariableDeclaration","scope":1273,"src":"992:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":354,"keyName":"tokenId","keyNameLocation":"1008:7:5","keyType":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":359,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:5","nodeType":"VariableDeclaration","scope":1273,"src":"1050:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":358,"keyName":"owner","keyNameLocation":"1066:5:5","keyType":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":363,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:5","nodeType":"VariableDeclaration","scope":1273,"src":"1108:59:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":362,"keyName":"tokenId","keyNameLocation":"1124:7:5","keyType":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":369,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:5","nodeType":"VariableDeclaration","scope":1273,"src":"1174:86:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":368,"keyName":"owner","keyNameLocation":"1190:5:5","keyType":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":367,"keyName":"operator","keyNameLocation":"1215:8:5","keyType":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":366,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":385,"nodeType":"Block","src":"1436:57:5","statements":[{"expression":{"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":377,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1446:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":378,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1454:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":380,"nodeType":"ExpressionStatement","src":"1446:13:5"},{"expression":{"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":381,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1469:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":382,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1479:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":384,"nodeType":"ExpressionStatement","src":"1469:17:5"}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"1267:108:5","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":386,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"name_","nameLocation":"1406:5:5","nodeType":"VariableDeclaration","scope":386,"src":"1392:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":371,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:5","nodeType":"VariableDeclaration","scope":386,"src":"1413:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:5"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"1436:0:5"},"scope":1273,"src":"1380:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3738,3750],"body":{"id":416,"nodeType":"Block","src":"1635:192:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":397,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"1664:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":399,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1684:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1390_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1390_$","typeString":"type(contract IERC721)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1390","typeString":"type(contract IERC721)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"1720:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":405,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"1740:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2046_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2046_$","typeString":"type(contract IERC721Metadata)"}],"id":404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2046","typeString":"type(contract IERC721Metadata)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":412,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"1808:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":410,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1273_$","typeString":"type(contract super ERC721)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3738,"src":"1784:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":396,"id":415,"nodeType":"Return","src":"1645:175:5"}]},"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"1499:23:5","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":417,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:5","nodeType":"FunctionDefinition","overrides":{"id":393,"nodeType":"OverrideSpecifier","overrides":[{"id":391,"name":"ERC165","nameLocations":["1603:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3739,"src":"1603:6:5"},{"id":392,"name":"IERC165","nameLocations":["1611:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3751,"src":"1611:7:5"}],"src":"1594:25:5"},"parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:5","nodeType":"VariableDeclaration","scope":417,"src":"1554:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":388,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:5"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":417,"src":"1629:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":394,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:5"},"scope":1273,"src":"1527:300:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1315],"body":{"id":444,"nodeType":"Block","src":"1933:136:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"1947:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:5","typeDescriptions":{}}},"id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"nodeType":"IfStatement","src":"1943:87:5","trueBody":{"id":438,"nodeType":"Block","src":"1968:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:5","typeDescriptions":{}}},"id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":431,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"1989:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":437,"nodeType":"RevertStatement","src":"1982:37:5"}]}},{"expression":{"baseExpression":{"id":440,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"2046:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":442,"indexExpression":{"id":441,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2056:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":424,"id":443,"nodeType":"Return","src":"2039:23:5"}]},"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"1833:23:5","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":445,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:5","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"owner","nameLocation":"1888:5:5","nodeType":"VariableDeclaration","scope":445,"src":"1880:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:5"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"1924:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:5"},"scope":1273,"src":"1861:208:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":457,"nodeType":"Block","src":"2175:46:5","statements":[{"expression":{"arguments":[{"id":454,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"2206:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":453,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2192:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":452,"id":456,"nodeType":"Return","src":"2185:29:5"}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"2075:23:5","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":458,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:5","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:5","nodeType":"VariableDeclaration","scope":458,"src":"2120:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:5"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":458,"src":"2166:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:5"},"scope":1273,"src":"2103:118:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2031],"body":{"id":466,"nodeType":"Block","src":"2323:29:5","statements":[{"expression":{"id":464,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"2340:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":463,"id":465,"nodeType":"Return","src":"2333:12:5"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"2227:31:5","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":467,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:5","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"2276:2:5"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":467,"src":"2308:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":461,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:5"},"scope":1273,"src":"2263:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2037],"body":{"id":475,"nodeType":"Block","src":"2456:31:5","statements":[{"expression":{"id":473,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"2473:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":472,"id":474,"nodeType":"Return","src":"2466:14:5"}]},"documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"2358:31:5","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":476,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:5","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"2409:2:5"},"returnParameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":476,"src":"2441:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:5"},"scope":1273,"src":"2394:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2045],"body":{"id":511,"nodeType":"Block","src":"2608:176:5","statements":[{"expression":{"arguments":[{"id":485,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2632:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":484,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2618:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":487,"nodeType":"ExpressionStatement","src":"2618:22:5"},{"assignments":[489],"declarations":[{"constant":false,"id":489,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:5","nodeType":"VariableDeclaration","scope":511,"src":"2651:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":488,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":492,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"2675:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":495,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2708:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":493,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:5","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:5","memberName":"length","nodeType":"MemberAccess","src":"2702:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:5","trueExpression":{"arguments":[{"id":503,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2744:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":504,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2753:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"2753:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":500,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:5","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:5","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":483,"id":510,"nodeType":"Return","src":"2695:82:5"}]},"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"2493:31:5","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":512,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:5","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:5","nodeType":"VariableDeclaration","scope":512,"src":"2547:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:5"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":512,"src":"2593:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":481,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:5"},"scope":1273,"src":"2529:255:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":520,"nodeType":"Block","src":"3092:26:5","statements":[{"expression":{"hexValue":"","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":517,"id":519,"nodeType":"Return","src":"3102:9:5"}]},"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"2790:231:5","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":521,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:5","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"3043:2:5"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":521,"src":"3077:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":515,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:5"},"scope":1273,"src":"3026:92:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1363],"body":{"id":536,"nodeType":"Block","src":"3213:52:5","statements":[{"expression":{"arguments":[{"id":530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"3232:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"3236:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":532,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"3245:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1140,1206],"referencedDeclaration":1140,"src":"3223:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":535,"nodeType":"ExpressionStatement","src":"3223:35:5"}]},"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"3124:23:5","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":537,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:5","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"to","nameLocation":"3177:2:5","nodeType":"VariableDeclaration","scope":537,"src":"3169:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:5","nodeType":"VariableDeclaration","scope":537,"src":"3181:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:5"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"3213:0:5"},"scope":1273,"src":"3152:113:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1379],"body":{"id":553,"nodeType":"Block","src":"3375:78:5","statements":[{"expression":{"arguments":[{"id":546,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"3399:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":545,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"3385:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":548,"nodeType":"ExpressionStatement","src":"3385:22:5"},{"expression":{"arguments":[{"id":550,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"3438:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":549,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"3425:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":544,"id":552,"nodeType":"Return","src":"3418:28:5"}]},"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"3271:23:5","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":554,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:5","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:5","nodeType":"VariableDeclaration","scope":554,"src":"3320:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:5"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":554,"src":"3366:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:5"},"scope":1273,"src":"3299:154:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1371],"body":{"id":569,"nodeType":"Block","src":"3562:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":563,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"3591:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"3605:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"3615:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":562,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"3572:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"ExpressionStatement","src":"3572:52:5"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"3459:23:5","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":570,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:5","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"operator","nameLocation":"3522:8:5","nodeType":"VariableDeclaration","scope":570,"src":"3514:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"approved","nameLocation":"3537:8:5","nodeType":"VariableDeclaration","scope":570,"src":"3532:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":558,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:5"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"3562:0:5"},"scope":1273,"src":"3487:144:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1389],"body":{"id":586,"nodeType":"Block","src":"3759:59:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":580,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"3776:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":582,"indexExpression":{"id":581,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3795:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":584,"indexExpression":{"id":583,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"3802:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":579,"id":585,"nodeType":"Return","src":"3769:42:5"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"3637:23:5","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":587,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:5","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"owner","nameLocation":"3699:5:5","nodeType":"VariableDeclaration","scope":587,"src":"3691:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"operator","nameLocation":"3714:8:5","nodeType":"VariableDeclaration","scope":587,"src":"3706:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:5"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":587,"src":"3753:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":577,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:5"},"scope":1273,"src":"3665:153:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1355],"body":{"id":632,"nodeType":"Block","src":"3932:498:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"3946:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:5","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":611,"nodeType":"IfStatement","src":"3942:87:5","trueBody":{"id":610,"nodeType":"Block","src":"3964:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:5","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":603,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"3985:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":609,"nodeType":"RevertStatement","src":"3978:40:5"}]}},{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:5","nodeType":"VariableDeclaration","scope":632,"src":"4247:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":620,"initialValue":{"arguments":[{"id":615,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"4279:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4283:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":617,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"4292:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"4271:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4319:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":622,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"4336:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":631,"nodeType":"IfStatement","src":"4315:109:5","trueBody":{"id":630,"nodeType":"Block","src":"4342:82:5","statements":[{"errorCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"4384:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4390:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":627,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4399:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":624,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4363:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":629,"nodeType":"RevertStatement","src":"4356:57:5"}]}}]},"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"3824:23:5","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":633,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:5","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"from","nameLocation":"3882:4:5","nodeType":"VariableDeclaration","scope":633,"src":"3874:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"to","nameLocation":"3896:2:5","nodeType":"VariableDeclaration","scope":633,"src":"3888:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:5","nodeType":"VariableDeclaration","scope":633,"src":"3900:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:5"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"3932:0:5"},"scope":1273,"src":"3852:578:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1345],"body":{"id":650,"nodeType":"Block","src":"4540:56:5","statements":[{"expression":{"arguments":[{"id":644,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4567:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":645,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"4573:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":646,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4577:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":643,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[651,681],"referencedDeclaration":681,"src":"4550:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"ExpressionStatement","src":"4550:39:5"}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"4436:23:5","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":651,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:5","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"from","nameLocation":"4498:4:5","nodeType":"VariableDeclaration","scope":651,"src":"4490:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"to","nameLocation":"4512:2:5","nodeType":"VariableDeclaration","scope":651,"src":"4504:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:5","nodeType":"VariableDeclaration","scope":651,"src":"4516:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:5"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"4540:0:5"},"scope":1273,"src":"4464:132:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1335],"body":{"id":680,"nodeType":"Block","src":"4733:130:5","statements":[{"expression":{"arguments":[{"id":664,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4756:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":665,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"4762:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4766:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":663,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4743:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"ExpressionStatement","src":"4743:31:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":672,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"4818:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4832:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"4838:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4842:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":677,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4851:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":669,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"4784:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2123_$","typeString":"type(library ERC721Utils)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:5","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"4784:33:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"4784:72:5"}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"4602:23:5","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":681,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:5","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"from","nameLocation":"4664:4:5","nodeType":"VariableDeclaration","scope":681,"src":"4656:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"to","nameLocation":"4678:2:5","nodeType":"VariableDeclaration","scope":681,"src":"4670:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:5","nodeType":"VariableDeclaration","scope":681,"src":"4682:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"data","nameLocation":"4712:4:5","nodeType":"VariableDeclaration","scope":681,"src":"4699:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":659,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:5"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"4733:0:5"},"scope":1273,"src":"4630:233:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":693,"nodeType":"Block","src":"5453:40:5","statements":[{"expression":{"baseExpression":{"id":689,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"5470:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":691,"indexExpression":{"id":690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"5478:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":688,"id":692,"nodeType":"Return","src":"5463:23:5"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"4869:504:5","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:5","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:5","nodeType":"VariableDeclaration","scope":694,"src":"5396:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:5"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":694,"src":"5444:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:5"},"scope":1273,"src":"5378:115:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"5688:48:5","statements":[{"expression":{"baseExpression":{"id":702,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"5705:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":704,"indexExpression":{"id":703,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5721:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":701,"id":705,"nodeType":"Return","src":"5698:31:5"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"5499:105:5","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:5","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:5","nodeType":"VariableDeclaration","scope":707,"src":"5631:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:5"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"5679:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:5"},"scope":1273,"src":"5609:127:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":742,"nodeType":"Block","src":"6156:163:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":719,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6185:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:5","typeDescriptions":{}}},"id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":725,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6223:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":726,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6232:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":729,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6260:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":730,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6267:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":728,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6243:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":734,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6292:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":733,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"6279:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":736,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6304:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":718,"id":741,"nodeType":"Return","src":"6166:146:5"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"5742:300:5","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":743,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:5","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"owner","nameLocation":"6078:5:5","nodeType":"VariableDeclaration","scope":743,"src":"6070:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"spender","nameLocation":"6093:7:5","nodeType":"VariableDeclaration","scope":743,"src":"6085:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:5","nodeType":"VariableDeclaration","scope":743,"src":"6102:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:5"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":743,"src":"6150:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":716,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:5"},"scope":1273,"src":"6047:272:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":779,"nodeType":"Block","src":"6848:271:5","statements":[{"condition":{"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:5","subExpression":{"arguments":[{"id":754,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6877:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"6884:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"6893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"6863:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":778,"nodeType":"IfStatement","src":"6858:255:5","trueBody":{"id":777,"nodeType":"Block","src":"6903:210:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6921:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:5","typeDescriptions":{}}},"id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":775,"nodeType":"Block","src":"7019:84:5","statements":[{"errorCall":{"arguments":[{"id":771,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"7071:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7080:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":770,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7044:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":774,"nodeType":"RevertStatement","src":"7037:51:5"}]},"id":776,"nodeType":"IfStatement","src":"6917:186:5","trueBody":{"id":769,"nodeType":"Block","src":"6942:71:5","statements":[{"errorCall":{"arguments":[{"id":766,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"6990:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":765,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"6967:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":768,"nodeType":"RevertStatement","src":"6960:38:5"}]}}]}}]},"documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"6325:421:5","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":780,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:5","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"owner","nameLocation":"6785:5:5","nodeType":"VariableDeclaration","scope":780,"src":"6777:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"spender","nameLocation":"6800:7:5","nodeType":"VariableDeclaration","scope":780,"src":"6792:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:5","nodeType":"VariableDeclaration","scope":780,"src":"6809:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:5"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"6848:0:5"},"scope":1273,"src":"6751:368:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"7836:78:5","statements":[{"id":794,"nodeType":"UncheckedBlock","src":"7846:62:5","statements":[{"expression":{"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":788,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"7870:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":790,"indexExpression":{"id":789,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7880:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"7892:5:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":793,"nodeType":"ExpressionStatement","src":"7870:27:5"}]}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"7125:631:5","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":796,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:5","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"account","nameLocation":"7795:7:5","nodeType":"VariableDeclaration","scope":796,"src":"7787:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"value","nameLocation":"7812:5:5","nodeType":"VariableDeclaration","scope":796,"src":"7804:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":784,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:5"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[],"src":"7836:0:5"},"scope":1273,"src":"7761:153:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":885,"nodeType":"Block","src":"8602:700:5","statements":[{"assignments":[809],"declarations":[{"constant":false,"id":809,"mutability":"mutable","name":"from","nameLocation":"8620:4:5","nodeType":"VariableDeclaration","scope":885,"src":"8612:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":813,"initialValue":{"arguments":[{"id":811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"8636:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"8627:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8704:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:5","typeDescriptions":{}}},"id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":827,"nodeType":"IfStatement","src":"8700:86:5","trueBody":{"id":826,"nodeType":"Block","src":"8724:62:5","statements":[{"expression":{"arguments":[{"id":821,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"8755:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":822,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8761:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":823,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"8767:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":820,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"8738:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"8738:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":828,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"8830:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:5","typeDescriptions":{}}},"id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":855,"nodeType":"IfStatement","src":"8826:256:5","trueBody":{"id":854,"nodeType":"Block","src":"8850:232:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:5","typeDescriptions":{}}},"id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"8967:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:5","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":834,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1140,1206],"referencedDeclaration":1206,"src":"8946:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"8946:48:5"},{"id":853,"nodeType":"UncheckedBlock","src":"9009:63:5","statements":[{"expression":{"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":847,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"9037:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":849,"indexExpression":{"id":848,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9047:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":852,"nodeType":"ExpressionStatement","src":"9037:20:5"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":856,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"9096:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:5","typeDescriptions":{}}},"id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":870,"nodeType":"IfStatement","src":"9092:107:5","trueBody":{"id":869,"nodeType":"Block","src":"9114:85:5","statements":[{"id":868,"nodeType":"UncheckedBlock","src":"9128:61:5","statements":[{"expression":{"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":862,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"9156:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":864,"indexExpression":{"id":863,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"9166:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":867,"nodeType":"ExpressionStatement","src":"9156:18:5"}]}]}},{"expression":{"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":871,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"9209:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":873,"indexExpression":{"id":872,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9217:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":874,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"9228:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":876,"nodeType":"ExpressionStatement","src":"9209:21:5"},{"eventCall":{"arguments":[{"id":878,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9255:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"9261:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9265:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":877,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"9246:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":882,"nodeType":"EmitStatement","src":"9241:32:5"},{"expression":{"id":883,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9291:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":807,"id":884,"nodeType":"Return","src":"9284:11:5"}]},"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"7920:582:5","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:5","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"to","nameLocation":"8532:2:5","nodeType":"VariableDeclaration","scope":886,"src":"8524:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:5","nodeType":"VariableDeclaration","scope":886,"src":"8536:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":800,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"auth","nameLocation":"8561:4:5","nodeType":"VariableDeclaration","scope":886,"src":"8553:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:5"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"8593:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:5"},"scope":1273,"src":"8507:795:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":935,"nodeType":"Block","src":"9677:274:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"9691:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:5","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":908,"nodeType":"IfStatement","src":"9687:87:5","trueBody":{"id":907,"nodeType":"Block","src":"9709:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:5","typeDescriptions":{}}},"id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":900,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"9730:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":906,"nodeType":"RevertStatement","src":"9723:40:5"}]}},{"assignments":[910],"declarations":[{"constant":false,"id":910,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:5","nodeType":"VariableDeclaration","scope":935,"src":"9783:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":919,"initialValue":{"arguments":[{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"9815:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"9819:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:5","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":911,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"9807:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":920,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9853:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:5","typeDescriptions":{}}},"id":924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":934,"nodeType":"IfStatement","src":"9849:96:5","trueBody":{"id":933,"nodeType":"Block","src":"9882:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:5","typeDescriptions":{}}},"id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":926,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"9903:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":932,"nodeType":"RevertStatement","src":"9896:38:5"}]}}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"9308:311:5","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":936,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:5","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"to","nameLocation":"9647:2:5","nodeType":"VariableDeclaration","scope":936,"src":"9639:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:5","nodeType":"VariableDeclaration","scope":936,"src":"9651:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:5"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"9677:0:5"},"scope":1273,"src":"9624:327:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"10359:43:5","statements":[{"expression":{"arguments":[{"id":945,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"10379:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":946,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"10383:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":944,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[951,981],"referencedDeclaration":981,"src":"10369:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"10369:26:5"}]},"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"9957:340:5","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:5","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"to","nameLocation":"10329:2:5","nodeType":"VariableDeclaration","scope":951,"src":"10321:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:5","nodeType":"VariableDeclaration","scope":951,"src":"10333:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:5"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[],"src":"10359:0:5"},"scope":1273,"src":"10302:100:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"10707:123:5","statements":[{"expression":{"arguments":[{"id":962,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10723:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"10727:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":961,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"10717:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"ExpressionStatement","src":"10717:18:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":969,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"10779:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:5","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":975,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10805:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"10809:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":977,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"10818:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":966,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"10745:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2123_$","typeString":"type(library ERC721Utils)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:5","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"10745:33:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":979,"nodeType":"ExpressionStatement","src":"10745:78:5"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"10408:210:5","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:5","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"to","nameLocation":"10650:2:5","nodeType":"VariableDeclaration","scope":981,"src":"10642:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:5","nodeType":"VariableDeclaration","scope":981,"src":"10654:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"data","nameLocation":"10684:4:5","nodeType":"VariableDeclaration","scope":981,"src":"10671:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":957,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:5"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"10707:0:5"},"scope":1273,"src":"10623:207:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"11197:186:5","statements":[{"assignments":[988],"declarations":[{"constant":false,"id":988,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:5","nodeType":"VariableDeclaration","scope":1013,"src":"11207:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1000,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:5","typeDescriptions":{}}},"id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":994,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"11251:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:5","typeDescriptions":{}}},"id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":989,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"11231:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"11285:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:5","typeDescriptions":{}}},"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1012,"nodeType":"IfStatement","src":"11281:96:5","trueBody":{"id":1011,"nodeType":"Block","src":"11314:63:5","statements":[{"errorCall":{"arguments":[{"id":1008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"11358:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1007,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"11335:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1010,"nodeType":"RevertStatement","src":"11328:38:5"}]}}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"10836:315:5","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:5","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:5","nodeType":"VariableDeclaration","scope":1014,"src":"11171:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:5"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"11197:0:5"},"scope":1273,"src":"11156:227:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1073,"nodeType":"Block","src":"11778:389:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"11792:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:5","typeDescriptions":{}}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1038,"nodeType":"IfStatement","src":"11788:87:5","trueBody":{"id":1037,"nodeType":"Block","src":"11810:65:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:5","typeDescriptions":{}}},"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1030,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"11831:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1036,"nodeType":"RevertStatement","src":"11824:40:5"}]}},{"assignments":[1040],"declarations":[{"constant":false,"id":1040,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:5","nodeType":"VariableDeclaration","scope":1073,"src":"11884:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1049,"initialValue":{"arguments":[{"id":1042,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"11916:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"11920:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:5","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1041,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"11908:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1050,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"11954:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:5","typeDescriptions":{}}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"12056:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1062,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12073:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"12052:109:5","trueBody":{"id":1070,"nodeType":"Block","src":"12079:82:5","statements":[{"errorCall":{"arguments":[{"id":1065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"12121:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1066,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"12127:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1067,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"12136:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1064,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"12100:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1069,"nodeType":"RevertStatement","src":"12093:57:5"}]}},"id":1072,"nodeType":"IfStatement","src":"11950:211:5","trueBody":{"id":1060,"nodeType":"Block","src":"11983:63:5","statements":[{"errorCall":{"arguments":[{"id":1057,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"12027:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1056,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"12004:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1059,"nodeType":"RevertStatement","src":"11997:38:5"}]}}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"11389:313:5","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1074,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:5","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"from","nameLocation":"11734:4:5","nodeType":"VariableDeclaration","scope":1074,"src":"11726:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"to","nameLocation":"11748:2:5","nodeType":"VariableDeclaration","scope":1074,"src":"11740:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:5","nodeType":"VariableDeclaration","scope":1074,"src":"11752:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:5"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"11778:0:5"},"scope":1273,"src":"11707:460:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1091,"nodeType":"Block","src":"13176:53:5","statements":[{"expression":{"arguments":[{"id":1085,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"13200:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1086,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"13206:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1087,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"13210:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1084,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1092,1122],"referencedDeclaration":1122,"src":"13186:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1090,"nodeType":"ExpressionStatement","src":"13186:36:5"}]},"documentation":{"id":1075,"nodeType":"StructuredDocumentation","src":"12173:923:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1092,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:5","nodeType":"FunctionDefinition","parameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"from","nameLocation":"13132:4:5","nodeType":"VariableDeclaration","scope":1092,"src":"13124:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"to","nameLocation":"13146:2:5","nodeType":"VariableDeclaration","scope":1092,"src":"13138:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:5","nodeType":"VariableDeclaration","scope":1092,"src":"13150:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:5"},"returnParameters":{"id":1083,"nodeType":"ParameterList","parameters":[],"src":"13176:0:5"},"scope":1273,"src":"13101:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1121,"nodeType":"Block","src":"13568:127:5","statements":[{"expression":{"arguments":[{"id":1105,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"13588:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"13594:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1107,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"13598:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1104,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"13578:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1109,"nodeType":"ExpressionStatement","src":"13578:28:5"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1113,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"13650:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1115,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"13664:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"13670:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1117,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"13674:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1118,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"13683:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1110,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"13616:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2123_$","typeString":"type(library ERC721Utils)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:5","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"13616:33:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"ExpressionStatement","src":"13616:72:5"}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"13235:226:5","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1122,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:5","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"from","nameLocation":"13497:4:5","nodeType":"VariableDeclaration","scope":1122,"src":"13489:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"to","nameLocation":"13511:2:5","nodeType":"VariableDeclaration","scope":1122,"src":"13503:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:5","nodeType":"VariableDeclaration","scope":1122,"src":"13515:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"data","nameLocation":"13545:4:5","nodeType":"VariableDeclaration","scope":1122,"src":"13532:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1100,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:5"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[],"src":"13568:0:5"},"scope":1273,"src":"13466:229:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"14208:50:5","statements":[{"expression":{"arguments":[{"id":1133,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"14227:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"14231:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1135,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"14240:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1132,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1140,1206],"referencedDeclaration":1206,"src":"14218:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"ExpressionStatement","src":"14218:33:5"}]},"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"13701:432:5","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:5","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"to","nameLocation":"14164:2:5","nodeType":"VariableDeclaration","scope":1140,"src":"14156:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:5","nodeType":"VariableDeclaration","scope":1140,"src":"14168:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"auth","nameLocation":"14193:4:5","nodeType":"VariableDeclaration","scope":1140,"src":"14185:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:5"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"14208:0:5"},"scope":1273,"src":"14138:120:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"14534:568:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"14600:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1153,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"14613:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:5","typeDescriptions":{}}},"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1198,"nodeType":"IfStatement","src":"14596:460:5","trueBody":{"id":1197,"nodeType":"Block","src":"14633:423:5","statements":[{"assignments":[1161],"declarations":[{"constant":false,"id":1161,"mutability":"mutable","name":"owner","nameLocation":"14655:5:5","nodeType":"VariableDeclaration","scope":1197,"src":"14647:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1165,"initialValue":{"arguments":[{"id":1163,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"14677:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1162,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"14663:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1166,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"14813:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:5","typeDescriptions":{}}},"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"14835:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1173,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"14844:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:5","subExpression":{"arguments":[{"id":1177,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"14870:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"14877:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1176,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"14853:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1187,"nodeType":"IfStatement","src":"14809:142:5","trueBody":{"id":1186,"nodeType":"Block","src":"14884:67:5","statements":[{"errorCall":{"arguments":[{"id":1183,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"14931:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1182,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"14909:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1185,"nodeType":"RevertStatement","src":"14902:34:5"}]}},{"condition":{"id":1188,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"14969:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"14965:81:5","trueBody":{"id":1195,"nodeType":"Block","src":"14980:66:5","statements":[{"eventCall":{"arguments":[{"id":1190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"15012:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"15019:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"15023:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"15003:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"EmitStatement","src":"14998:33:5"}]}}]}},{"expression":{"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1199,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"15066:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1201,"indexExpression":{"id":1200,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"15082:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"15093:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1204,"nodeType":"ExpressionStatement","src":"15066:29:5"}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"14264:171:5","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:5","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"to","nameLocation":"14466:2:5","nodeType":"VariableDeclaration","scope":1206,"src":"14458:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:5","nodeType":"VariableDeclaration","scope":1206,"src":"14470:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"auth","nameLocation":"14495:4:5","nodeType":"VariableDeclaration","scope":1206,"src":"14487:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:5","nodeType":"VariableDeclaration","scope":1206,"src":"14501:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1148,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:5"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"14534:0:5"},"scope":1273,"src":"14440:662:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1242,"nodeType":"Block","src":"15404:219:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15418:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:5","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1227,"nodeType":"IfStatement","src":"15414:91:5","trueBody":{"id":1226,"nodeType":"Block","src":"15442:63:5","statements":[{"errorCall":{"arguments":[{"id":1223,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15485:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1222,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"15463:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1225,"nodeType":"RevertStatement","src":"15456:38:5"}]}},{"expression":{"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1228,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"15514:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1231,"indexExpression":{"id":1229,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"15533:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1232,"indexExpression":{"id":1230,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15540:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1233,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"15552:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1235,"nodeType":"ExpressionStatement","src":"15514:46:5"},{"eventCall":{"arguments":[{"id":1237,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"15590:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1238,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"15597:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1239,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"15607:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1236,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"15575:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"EmitStatement","src":"15570:46:5"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"15108:198:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1243,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:5","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"owner","nameLocation":"15347:5:5","nodeType":"VariableDeclaration","scope":1243,"src":"15339:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"operator","nameLocation":"15362:8:5","nodeType":"VariableDeclaration","scope":1243,"src":"15354:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"approved","nameLocation":"15377:8:5","nodeType":"VariableDeclaration","scope":1243,"src":"15372:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1212,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:5"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"15404:0:5"},"scope":1273,"src":"15311:312:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1271,"nodeType":"Block","src":"15930:169:5","statements":[{"assignments":[1252],"declarations":[{"constant":false,"id":1252,"mutability":"mutable","name":"owner","nameLocation":"15948:5:5","nodeType":"VariableDeclaration","scope":1271,"src":"15940:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1256,"initialValue":{"arguments":[{"id":1254,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"15965:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1253,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"15956:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1257,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"15987:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:5","typeDescriptions":{}}},"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1268,"nodeType":"IfStatement","src":"15983:88:5","trueBody":{"id":1267,"nodeType":"Block","src":"16008:63:5","statements":[{"errorCall":{"arguments":[{"id":1264,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"16052:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1263,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"16029:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1266,"nodeType":"RevertStatement","src":"16022:38:5"}]}},{"expression":{"id":1269,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"16087:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1250,"id":1270,"nodeType":"Return","src":"16080:12:5"}]},"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"15629:224:5","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1272,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:5","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:5","nodeType":"VariableDeclaration","scope":1272,"src":"15881:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:5"},"returnParameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1272,"src":"15921:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:5"},"scope":1273,"src":"15858:241:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1274,"src":"775:15326:5","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[1289,1298,1307]}],"src":"107:15995:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3751],"IERC721":[1390]},"id":1391,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1275,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1391,"sourceUnit":3752,"src":"134:62:6","symbolAliases":[{"foreign":{"id":1276,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"142:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1279,"name":"IERC165","nameLocations":["288:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":3751,"src":"288:7:6"},"id":1280,"nodeType":"InheritanceSpecifier","src":"288:7:6"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"198:68:6","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1390,"linearizedBaseContracts":[1390,3751],"name":"IERC721","nameLocation":"277:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"302:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1289,"name":"Transfer","nameLocation":"401:8:6","nodeType":"EventDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:6","nodeType":"VariableDeclaration","scope":1289,"src":"410:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1285,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:6","nodeType":"VariableDeclaration","scope":1289,"src":"432:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1287,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:6","nodeType":"VariableDeclaration","scope":1289,"src":"452:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:6"},"src":"395:82:6"},{"anonymous":false,"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"483:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1298,"name":"Approval","nameLocation":"588:8:6","nodeType":"EventDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:6","nodeType":"VariableDeclaration","scope":1298,"src":"597:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:6","nodeType":"VariableDeclaration","scope":1298,"src":"620:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:6","nodeType":"VariableDeclaration","scope":1298,"src":"646:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:6"},"src":"582:89:6"},{"anonymous":false,"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"677:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1307,"name":"ApprovalForAll","nameLocation":"805:14:6","nodeType":"EventDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:6","nodeType":"VariableDeclaration","scope":1307,"src":"820:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:6","nodeType":"VariableDeclaration","scope":1307,"src":"843:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:6","nodeType":"VariableDeclaration","scope":1307,"src":"869:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1304,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:6"},"src":"799:85:6"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"890:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1315,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:6","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"owner","nameLocation":"998:5:6","nodeType":"VariableDeclaration","scope":1315,"src":"990:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:6"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"balance","nameLocation":"1036:7:6","nodeType":"VariableDeclaration","scope":1315,"src":"1028:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:6"},"scope":1390,"src":"971:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"1051:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:6","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:6","nodeType":"VariableDeclaration","scope":1323,"src":"1204:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:6"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"owner","nameLocation":"1252:5:6","nodeType":"VariableDeclaration","scope":1323,"src":"1244:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:6"},"scope":1390,"src":"1187:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"1265:565:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1335,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:6","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"from","nameLocation":"1869:4:6","nodeType":"VariableDeclaration","scope":1335,"src":"1861:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"to","nameLocation":"1883:2:6","nodeType":"VariableDeclaration","scope":1335,"src":"1875:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:6","nodeType":"VariableDeclaration","scope":1335,"src":"1887:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"data","nameLocation":"1919:4:6","nodeType":"VariableDeclaration","scope":1335,"src":"1904:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1331,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:6"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"1933:0:6"},"scope":1390,"src":"1835:99:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"1940:706:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1345,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:6","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"from","nameLocation":"2685:4:6","nodeType":"VariableDeclaration","scope":1345,"src":"2677:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"to","nameLocation":"2699:2:6","nodeType":"VariableDeclaration","scope":1345,"src":"2691:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:6","nodeType":"VariableDeclaration","scope":1345,"src":"2703:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:6"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[],"src":"2728:0:6"},"scope":1390,"src":"2651:78:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"2735:733:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1355,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:6","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"from","nameLocation":"3503:4:6","nodeType":"VariableDeclaration","scope":1355,"src":"3495:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"to","nameLocation":"3517:2:6","nodeType":"VariableDeclaration","scope":1355,"src":"3509:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:6","nodeType":"VariableDeclaration","scope":1355,"src":"3521:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:6"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"3546:0:6"},"scope":1390,"src":"3473:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"3553:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1363,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:6","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"to","nameLocation":"4035:2:6","nodeType":"VariableDeclaration","scope":1363,"src":"4027:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:6","nodeType":"VariableDeclaration","scope":1363,"src":"4039:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:6"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[],"src":"4064:0:6"},"scope":1390,"src":"4010:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"4071:315:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1371,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:6","nodeType":"FunctionDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"operator","nameLocation":"4426:8:6","nodeType":"VariableDeclaration","scope":1371,"src":"4418:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"approved","nameLocation":"4441:8:6","nodeType":"VariableDeclaration","scope":1371,"src":"4436:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1367,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:6"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[],"src":"4459:0:6"},"scope":1390,"src":"4391:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"4466:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1379,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:6","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:6","nodeType":"VariableDeclaration","scope":1379,"src":"4631:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:6"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"operator","nameLocation":"4679:8:6","nodeType":"VariableDeclaration","scope":1379,"src":"4671:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:6"},"scope":1390,"src":"4610:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"4695:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:6","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"owner","nameLocation":"4872:5:6","nodeType":"VariableDeclaration","scope":1389,"src":"4864:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"operator","nameLocation":"4887:8:6","nodeType":"VariableDeclaration","scope":1389,"src":"4879:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:6"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"4920:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1386,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:6"},"scope":1390,"src":"4838:88:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1391,"src":"267:4661:6","usedErrors":[],"usedEvents":[1289,1298,1307]}],"src":"108:4821:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1408]},"id":1409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1392,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"142:154:7","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1408,"linearizedBaseContracts":[1408],"name":"IERC721Receiver","nameLocation":"307:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"329:500:7","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1407,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:7","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"operator","nameLocation":"877:8:7","nodeType":"VariableDeclaration","scope":1407,"src":"869:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"from","nameLocation":"903:4:7","nodeType":"VariableDeclaration","scope":1407,"src":"895:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:7","nodeType":"VariableDeclaration","scope":1407,"src":"917:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"data","nameLocation":"957:4:7","nodeType":"VariableDeclaration","scope":1407,"src":"942:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1401,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:7"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1407,"src":"986:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1404,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:7"},"scope":1408,"src":"834:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1409,"src":"297:699:7","usedErrors":[],"usedEvents":[]}],"src":"116:881:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","exportedSymbols":{"Context":[2153],"ERC721":[1273],"ERC721Burnable":[1437]},"id":1438,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1410,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1438,"sourceUnit":1274,"src":"152:37:8","symbolAliases":[{"foreign":{"id":1411,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"160:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1414,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1438,"sourceUnit":2154,"src":"190:51:8","symbolAliases":[{"foreign":{"id":1413,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"198:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1416,"name":"Context","nameLocations":["374:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"374:7:8"},"id":1417,"nodeType":"InheritanceSpecifier","src":"374:7:8"},{"baseName":{"id":1418,"name":"ERC721","nameLocations":["383:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"383:6:8"},"id":1419,"nodeType":"InheritanceSpecifier","src":"383:6:8"}],"canonicalName":"ERC721Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"243:94:8","text":" @title ERC-721 Burnable Token\n @dev ERC-721 Token that can be burned (destroyed)."},"fullyImplemented":true,"id":1437,"linearizedBaseContracts":[1437,1273,269,2046,1390,3739,3751,2153],"name":"ERC721Burnable","nameLocation":"356:14:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1435,"nodeType":"Block","src":"609:268:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"844:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"836:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:8","typeDescriptions":{}}},"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"836:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1430,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"848:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1431,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"857:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"857:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1425,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"828:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"828:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1434,"nodeType":"ExpressionStatement","src":"828:42:8"}]},"documentation":{"id":1420,"nodeType":"StructuredDocumentation","src":"396:162:8","text":" @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."},"functionSelector":"42966c68","id":1436,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"572:4:8","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"tokenId","nameLocation":"585:7:8","nodeType":"VariableDeclaration","scope":1436,"src":"577:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"577:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"576:17:8"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"609:0:8"},"scope":1437,"src":"563:314:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1438,"src":"338:541:8","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[1289,1298,1307]}],"src":"126:754:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"ERC721":[1273],"ERC721Enumerable":[1823],"IERC165":[3751],"IERC721Enumerable":[2018]},"id":1824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1439,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1824,"sourceUnit":1274,"src":"154:37:9","symbolAliases":[{"foreign":{"id":1440,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"162:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":1443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1824,"sourceUnit":2019,"src":"192:58:9","symbolAliases":[{"foreign":{"id":1442,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"200:17:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../../utils/introspection/ERC165.sol","id":1445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1824,"sourceUnit":3740,"src":"251:64:9","symbolAliases":[{"foreign":{"id":1444,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"259:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1447,"name":"ERC721","nameLocations":["746:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"746:6:9"},"id":1448,"nodeType":"InheritanceSpecifier","src":"746:6:9"},{"baseName":{"id":1449,"name":"IERC721Enumerable","nameLocations":["754:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":2018,"src":"754:17:9"},"id":1450,"nodeType":"InheritanceSpecifier","src":"754:17:9"}],"canonicalName":"ERC721Enumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"317:390:9","text":" @dev This implements an optional extension of {ERC721} defined in the ERC that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive},\n interfere with enumerability and should not be used together with {ERC721Enumerable}."},"fullyImplemented":true,"id":1823,"linearizedBaseContracts":[1823,2018,1273,269,2046,1390,3739,3751,2153],"name":"ERC721Enumerable","nameLocation":"726:16:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1456,"mutability":"mutable","name":"_ownedTokens","nameLocation":"846:12:9","nodeType":"VariableDeclaration","scope":1823,"src":"778:80:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":1455,"keyName":"owner","keyNameLocation":"794:5:9","keyType":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"786:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"778:59:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1454,"keyName":"index","keyNameLocation":"819:5:9","keyType":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"803:33:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"828:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1460,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"908:17:9","nodeType":"VariableDeclaration","scope":1823,"src":"864:61:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1459,"keyName":"tokenId","keyNameLocation":"880:7:9","keyType":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"864:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1463,"mutability":"mutable","name":"_allTokens","nameLocation":"950:10:9","nodeType":"VariableDeclaration","scope":1823,"src":"932:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1462,"nodeType":"ArrayTypeName","src":"932:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":1467,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"1010:15:9","nodeType":"VariableDeclaration","scope":1823,"src":"966:59:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1466,"keyName":"tokenId","keyNameLocation":"982:7:9","keyType":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"966:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"1032:168:9","text":" @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."},"errorSelector":"a57d13dc","id":1474,"name":"ERC721OutOfBoundsIndex","nameLocation":"1211:22:9","nodeType":"ErrorDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"owner","nameLocation":"1242:5:9","nodeType":"VariableDeclaration","scope":1474,"src":"1234:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"index","nameLocation":"1257:5:9","nodeType":"VariableDeclaration","scope":1474,"src":"1249:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1233:30:9"},"src":"1205:59:9"},{"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"1270:50:9","text":" @dev Batch mint is not allowed."},"errorSelector":"59171fc1","id":1477,"name":"ERC721EnumerableForbiddenBatchMint","nameLocation":"1331:34:9","nodeType":"ErrorDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[],"src":"1365:2:9"},"src":"1325:43:9"},{"baseFunctions":[417,3750],"body":{"id":1500,"nodeType":"Block","src":"1510:114:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1488,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"1527:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1490,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"1547:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$2018_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$2018_$","typeString":"type(contract IERC721Enumerable)"}],"id":1489,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1542:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1542:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$2018","typeString":"type(contract IERC721Enumerable)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1566:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"1542:35:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1527:50:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1496,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"1605:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1494,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1581:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1823_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1587:17:9","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":417,"src":"1581:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1527:90:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1487,"id":1499,"nodeType":"Return","src":"1520:97:9"}]},"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"1374:23:9","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1501,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1411:17:9","nodeType":"FunctionDefinition","overrides":{"id":1484,"nodeType":"OverrideSpecifier","overrides":[{"id":1482,"name":"IERC165","nameLocations":["1478:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3751,"src":"1478:7:9"},{"id":1483,"name":"ERC721","nameLocations":["1487:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"1487:6:9"}],"src":"1469:25:9"},"parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"interfaceId","nameLocation":"1436:11:9","nodeType":"VariableDeclaration","scope":1501,"src":"1429:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1479,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1429:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1428:20:9"},"returnParameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1501,"src":"1504:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1485,"name":"bool","nodeType":"ElementaryTypeName","src":"1504:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1503:6:9"},"scope":1823,"src":"1402:222:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2009],"body":{"id":1529,"nodeType":"Block","src":"1765:158:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1511,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"1779:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":1513,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"1798:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1512,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"1788:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1788:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1779:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1522,"nodeType":"IfStatement","src":"1775:99:9","trueBody":{"id":1521,"nodeType":"Block","src":"1806:68:9","statements":[{"errorCall":{"arguments":[{"id":1517,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"1850:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1518,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"1857:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1516,"name":"ERC721OutOfBoundsIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"1827:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1520,"nodeType":"RevertStatement","src":"1820:43:9"}]}},{"expression":{"baseExpression":{"baseExpression":{"id":1523,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1890:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1525,"indexExpression":{"id":1524,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"1903:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1890:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1527,"indexExpression":{"id":1526,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"1910:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1890:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1510,"id":1528,"nodeType":"Return","src":"1883:33:9"}]},"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"1630:33:9","text":"@inheritdoc IERC721Enumerable"},"functionSelector":"2f745c59","id":1530,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1677:19:9","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"owner","nameLocation":"1705:5:9","nodeType":"VariableDeclaration","scope":1530,"src":"1697:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"1697:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"index","nameLocation":"1720:5:9","nodeType":"VariableDeclaration","scope":1530,"src":"1712:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1712:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1696:30:9"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1530,"src":"1756:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:9"},"scope":1823,"src":"1668:255:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1999],"body":{"id":1539,"nodeType":"Block","src":"2028:41:9","statements":[{"expression":{"expression":{"id":1536,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"2045:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2056:6:9","memberName":"length","nodeType":"MemberAccess","src":"2045:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1535,"id":1538,"nodeType":"Return","src":"2038:24:9"}]},"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"1929:33:9","text":"@inheritdoc IERC721Enumerable"},"functionSelector":"18160ddd","id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1976:11:9","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[],"src":"1987:2:9"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1540,"src":"2019:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2018:9:9"},"scope":1823,"src":"1967:102:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2017],"body":{"id":1566,"nodeType":"Block","src":"2188:151:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1548,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2202:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1549,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"2211:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2211:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2202:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1561,"nodeType":"IfStatement","src":"2198:101:9","trueBody":{"id":1560,"nodeType":"Block","src":"2226:73:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2270:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"2270:7:9","typeDescriptions":{}}},"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1557,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2282:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1552,"name":"ERC721OutOfBoundsIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2247:22:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1559,"nodeType":"RevertStatement","src":"2240:48:9"}]}},{"expression":{"baseExpression":{"id":1562,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"2315:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1564,"indexExpression":{"id":1563,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2326:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2315:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1547,"id":1565,"nodeType":"Return","src":"2308:24:9"}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"2075:33:9","text":"@inheritdoc IERC721Enumerable"},"functionSelector":"4f6ccce7","id":1567,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"2122:12:9","nodeType":"FunctionDefinition","parameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"index","nameLocation":"2143:5:9","nodeType":"VariableDeclaration","scope":1567,"src":"2135:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2134:15:9"},"returnParameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1567,"src":"2179:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2178:9:9"},"scope":1823,"src":"2113:226:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[886],"body":{"id":1635,"nodeType":"Block","src":"2476:521:9","statements":[{"assignments":[1581],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"previousOwner","nameLocation":"2494:13:9","nodeType":"VariableDeclaration","scope":1635,"src":"2486:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"2486:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1588,"initialValue":{"arguments":[{"id":1584,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2524:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1585,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2528:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1586,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2537:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1582,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2510:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1823_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2516:7:9","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":886,"src":"2510:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2510:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2486:56:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1589,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2557:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2582:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2574:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"2574:7:9","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2574:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2557:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2661:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2678:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2661:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1609,"nodeType":"IfStatement","src":"2657:106:9","trueBody":{"id":1608,"nodeType":"Block","src":"2682:81:9","statements":[{"expression":{"arguments":[{"id":1604,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2729:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1605,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2744:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1603,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"2696:32:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1607,"nodeType":"ExpressionStatement","src":"2696:56:9"}]}},"id":1610,"nodeType":"IfStatement","src":"2553:210:9","trueBody":{"id":1599,"nodeType":"Block","src":"2586:65:9","statements":[{"expression":{"arguments":[{"id":1596,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2632:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1595,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"2600:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2600:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"2600:40:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1611,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2776:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2790:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2782:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"2782:7:9","typeDescriptions":{}}},"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2782:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2776:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1622,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2874:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1623,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2891:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2874:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1631,"nodeType":"IfStatement","src":"2870:90:9","trueBody":{"id":1630,"nodeType":"Block","src":"2895:65:9","statements":[{"expression":{"arguments":[{"id":1626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2937:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1627,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2941:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1625,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"2909:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2909:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1629,"nodeType":"ExpressionStatement","src":"2909:40:9"}]}},"id":1632,"nodeType":"IfStatement","src":"2772:188:9","trueBody":{"id":1621,"nodeType":"Block","src":"2794:70:9","statements":[{"expression":{"arguments":[{"id":1618,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2845:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1617,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"2808:36:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2808:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1620,"nodeType":"ExpressionStatement","src":"2808:45:9"}]}},{"expression":{"id":1633,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2977:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1579,"id":1634,"nodeType":"Return","src":"2970:20:9"}]},"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"2345:22:9","text":"@inheritdoc ERC721"},"id":1636,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2381:7:9","nodeType":"FunctionDefinition","overrides":{"id":1576,"nodeType":"OverrideSpecifier","overrides":[],"src":"2449:8:9"},"parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"to","nameLocation":"2397:2:9","nodeType":"VariableDeclaration","scope":1636,"src":"2389:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"2389:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"tokenId","nameLocation":"2409:7:9","nodeType":"VariableDeclaration","scope":1636,"src":"2401:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"2401:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"auth","nameLocation":"2426:4:9","nodeType":"VariableDeclaration","scope":1636,"src":"2418:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"2418:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2388:43:9"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1636,"src":"2467:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"2467:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2466:9:9"},"scope":1823,"src":"2372:625:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1666,"nodeType":"Block","src":"3365:140:9","statements":[{"assignments":[1645],"declarations":[{"constant":false,"id":1645,"mutability":"mutable","name":"length","nameLocation":"3383:6:9","nodeType":"VariableDeclaration","scope":1666,"src":"3375:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"3375:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1651,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1647,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"3402:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1646,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"3392:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3408:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3392:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3375:34:9"},{"expression":{"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1652,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"3419:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1655,"indexExpression":{"id":1653,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"3432:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3419:16:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1656,"indexExpression":{"id":1654,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"3436:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3419:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1657,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"3446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3419:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1659,"nodeType":"ExpressionStatement","src":"3419:34:9"},{"expression":{"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1660,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"3463:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1662,"indexExpression":{"id":1661,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"3481:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3463:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1663,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"3492:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1665,"nodeType":"ExpressionStatement","src":"3463:35:9"}]},"documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"3003:283:9","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3300:27:9","nodeType":"FunctionDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"to","nameLocation":"3336:2:9","nodeType":"VariableDeclaration","scope":1667,"src":"3328:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"3328:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:9","nodeType":"VariableDeclaration","scope":1667,"src":"3340:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3327:29:9"},"returnParameters":{"id":1643,"nodeType":"ParameterList","parameters":[],"src":"3365:0:9"},"scope":1823,"src":"3291:214:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1686,"nodeType":"Block","src":"3766:95:9","statements":[{"expression":{"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1673,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"3776:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1675,"indexExpression":{"id":1674,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"3792:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3776:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1676,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"3803:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3814:6:9","memberName":"length","nodeType":"MemberAccess","src":"3803:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3776:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1679,"nodeType":"ExpressionStatement","src":"3776:44:9"},{"expression":{"arguments":[{"id":1683,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"3846:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1680,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"3830:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3841:4:9","memberName":"push","nodeType":"MemberAccess","src":"3830:15:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3830:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"ExpressionStatement","src":"3830:24:9"}]},"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"3511:184:9","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3709:31:9","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"tokenId","nameLocation":"3749:7:9","nodeType":"VariableDeclaration","scope":1687,"src":"3741:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"3741:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3740:17:9"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[],"src":"3766:0:9"},"scope":1823,"src":"3700:161:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1748,"nodeType":"Block","src":"4559:974:9","statements":[{"assignments":[1696],"declarations":[{"constant":false,"id":1696,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4748:14:9","nodeType":"VariableDeclaration","scope":1748,"src":"4740:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"4740:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1700,"initialValue":{"arguments":[{"id":1698,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"4775:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1697,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"4765:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4765:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4740:40:9"},{"assignments":[1702],"declarations":[{"constant":false,"id":1702,"mutability":"mutable","name":"tokenIndex","nameLocation":"4798:10:9","nodeType":"VariableDeclaration","scope":1748,"src":"4790:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"4790:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1706,"initialValue":{"baseExpression":{"id":1703,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"4811:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1705,"indexExpression":{"id":1704,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"4829:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4811:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4790:47:9"},{"assignments":[1710],"declarations":[{"constant":false,"id":1710,"mutability":"mutable","name":"_ownedTokensByOwner","nameLocation":"4890:19:9","nodeType":"VariableDeclaration","scope":1748,"src":"4848:61:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1709,"keyName":"index","keyNameLocation":"4864:5:9","keyType":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"4856:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4848:33:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4873:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"id":1714,"initialValue":{"baseExpression":{"id":1711,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"4912:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1713,"indexExpression":{"id":1712,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"4925:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4912:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4848:82:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1715,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5034:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1716,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"5048:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5034:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1737,"nodeType":"IfStatement","src":"5030:325:9","trueBody":{"id":1736,"nodeType":"Block","src":"5064:291:9","statements":[{"assignments":[1719],"declarations":[{"constant":false,"id":1719,"mutability":"mutable","name":"lastTokenId","nameLocation":"5086:11:9","nodeType":"VariableDeclaration","scope":1736,"src":"5078:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1723,"initialValue":{"baseExpression":{"id":1720,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"5100:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1722,"indexExpression":{"id":1721,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"5120:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5100:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5078:57:9"},{"expression":{"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1724,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"5150:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1726,"indexExpression":{"id":1725,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5170:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5150:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1727,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"5184:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5150:45:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1729,"nodeType":"ExpressionStatement","src":"5150:45:9"},{"expression":{"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1730,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"5267:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1732,"indexExpression":{"id":1731,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"5285:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5267:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1733,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5300:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5267:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1735,"nodeType":"ExpressionStatement","src":"5267:43:9"}]}},{"expression":{"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5441:33:9","subExpression":{"baseExpression":{"id":1738,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"5448:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1740,"indexExpression":{"id":1739,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"5466:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5448:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1742,"nodeType":"ExpressionStatement","src":"5441:33:9"},{"expression":{"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5484:42:9","subExpression":{"baseExpression":{"id":1743,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"5491:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1745,"indexExpression":{"id":1744,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"5511:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5491:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1747,"nodeType":"ExpressionStatement","src":"5484:42:9"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"3867:606:9","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":1749,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4487:32:9","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"from","nameLocation":"4528:4:9","nodeType":"VariableDeclaration","scope":1749,"src":"4520:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"4520:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"tokenId","nameLocation":"4542:7:9","nodeType":"VariableDeclaration","scope":1749,"src":"4534:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"4534:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4519:31:9"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[],"src":"4559:0:9"},"scope":1823,"src":"4478:1055:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1796,"nodeType":"Block","src":"5892:990:9","statements":[{"assignments":[1756],"declarations":[{"constant":false,"id":1756,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6078:14:9","nodeType":"VariableDeclaration","scope":1796,"src":"6070:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"6070:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1761,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1757,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6095:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6106:6:9","memberName":"length","nodeType":"MemberAccess","src":"6095:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6115:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6095:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6070:46:9"},{"assignments":[1763],"declarations":[{"constant":false,"id":1763,"mutability":"mutable","name":"tokenIndex","nameLocation":"6134:10:9","nodeType":"VariableDeclaration","scope":1796,"src":"6126:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"6126:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1767,"initialValue":{"baseExpression":{"id":1764,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"6147:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1766,"indexExpression":{"id":1765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6163:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6147:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6126:45:9"},{"assignments":[1769],"declarations":[{"constant":false,"id":1769,"mutability":"mutable","name":"lastTokenId","nameLocation":"6501:11:9","nodeType":"VariableDeclaration","scope":1796,"src":"6493:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"6493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1773,"initialValue":{"baseExpression":{"id":1770,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6515:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1772,"indexExpression":{"id":1771,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"6526:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6515:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6493:48:9"},{"expression":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1774,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6552:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1776,"indexExpression":{"id":1775,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"6563:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1777,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"6577:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1779,"nodeType":"ExpressionStatement","src":"6552:36:9"},{"expression":{"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1780,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"6656:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1782,"indexExpression":{"id":1781,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"6672:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6656:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1783,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"6687:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6656:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1785,"nodeType":"ExpressionStatement","src":"6656:41:9"},{"expression":{"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6818:31:9","subExpression":{"baseExpression":{"id":1786,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"6825:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1788,"indexExpression":{"id":1787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6841:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6825:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1790,"nodeType":"ExpressionStatement","src":"6818:31:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1791,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6859:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6870:3:9","memberName":"pop","nodeType":"MemberAccess","src":"6859:14:9","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6859:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1795,"nodeType":"ExpressionStatement","src":"6859:16:9"}]},"documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"5539:277:9","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":1797,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5830:36:9","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"tokenId","nameLocation":"5875:7:9","nodeType":"VariableDeclaration","scope":1797,"src":"5867:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"5867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5866:17:9"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[],"src":"5892:0:9"},"scope":1823,"src":"5821:1061:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[796],"body":{"id":1821,"nodeType":"Block","src":"7084:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"7098:6:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7107:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7098:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1813,"nodeType":"IfStatement","src":"7094:84:9","trueBody":{"id":1812,"nodeType":"Block","src":"7110:68:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1809,"name":"ERC721EnumerableForbiddenBatchMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"7131:34:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7131:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1811,"nodeType":"RevertStatement","src":"7124:43:9"}]}},{"expression":{"arguments":[{"id":1817,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"7210:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1818,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"7219:6:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1814,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7187:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1823_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7193:16:9","memberName":"_increaseBalance","nodeType":"MemberAccess","referencedDeclaration":796,"src":"7187:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$","typeString":"function (address,uint128)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7187:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"ExpressionStatement","src":"7187:39:9"}]},"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"6888:106:9","text":" See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"},"id":1822,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7008:16:9","nodeType":"FunctionDefinition","overrides":{"id":1804,"nodeType":"OverrideSpecifier","overrides":[],"src":"7075:8:9"},"parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"account","nameLocation":"7033:7:9","nodeType":"VariableDeclaration","scope":1822,"src":"7025:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"7025:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"amount","nameLocation":"7050:6:9","nodeType":"VariableDeclaration","scope":1822,"src":"7042:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1801,"name":"uint128","nodeType":"ElementaryTypeName","src":"7042:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7024:33:9"},"returnParameters":{"id":1805,"nodeType":"ParameterList","parameters":[],"src":"7084:0:9"},"scope":1823,"src":"6999:234:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1824,"src":"708:6527:9","usedErrors":[227,232,241,246,251,258,263,268,1474,1477],"usedEvents":[1289,1298,1307]}],"src":"128:7108:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol","exportedSymbols":{"ERC721":[1273],"ERC721Pausable":[1858],"Pausable":[2313]},"id":1859,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1859,"sourceUnit":1274,"src":"152:37:10","symbolAliases":[{"foreign":{"id":1826,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"160:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1859,"sourceUnit":2314,"src":"190:53:10","symbolAliases":[{"foreign":{"id":1828,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"198:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1831,"name":"ERC721","nameLocations":["971:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"971:6:10"},"id":1832,"nodeType":"InheritanceSpecifier","src":"971:6:10"},{"baseName":{"id":1833,"name":"Pausable","nameLocations":["979:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2313,"src":"979:8:10"},"id":1834,"nodeType":"InheritanceSpecifier","src":"979:8:10"}],"canonicalName":"ERC721Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"245:689:10","text":" @dev ERC-721 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1858,"linearizedBaseContracts":[1858,2313,1273,269,2046,1390,3739,3751,2153],"name":"ERC721Pausable","nameLocation":"953:14:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[886],"body":{"id":1856,"nodeType":"Block","src":"1269:56:10","statements":[{"expression":{"arguments":[{"id":1851,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"1300:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1852,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"1304:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1853,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"1313:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1849,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1286:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Pausable_$1858_$","typeString":"type(contract super ERC721Pausable)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1292:7:10","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":886,"src":"1286:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1848,"id":1855,"nodeType":"Return","src":"1279:39:10"}]},"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"994:122:10","text":" @dev See {ERC721-_update}.\n Requirements:\n - the contract must not be paused."},"id":1857,"implemented":true,"kind":"function","modifiers":[{"id":1845,"kind":"modifierInvocation","modifierName":{"id":1844,"name":"whenNotPaused","nameLocations":["1237:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2238,"src":"1237:13:10"},"nodeType":"ModifierInvocation","src":"1237:13:10"}],"name":"_update","nameLocation":"1130:7:10","nodeType":"FunctionDefinition","overrides":{"id":1843,"nodeType":"OverrideSpecifier","overrides":[],"src":"1228:8:10"},"parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"to","nameLocation":"1155:2:10","nodeType":"VariableDeclaration","scope":1857,"src":"1147:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"1147:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1839,"mutability":"mutable","name":"tokenId","nameLocation":"1175:7:10","nodeType":"VariableDeclaration","scope":1857,"src":"1167:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1167:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1841,"mutability":"mutable","name":"auth","nameLocation":"1200:4:10","nodeType":"VariableDeclaration","scope":1857,"src":"1192:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"1192:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1137:73:10"},"returnParameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1857,"src":"1260:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1846,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1259:9:10"},"scope":1858,"src":"1121:204:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1859,"src":"935:392:10","usedErrors":[227,232,241,246,251,258,263,268,2227,2230],"usedEvents":[1289,1298,1307,2219,2224]}],"src":"126:1202:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1273],"ERC721URIStorage":[1986],"IERC165":[3751],"IERC4906":[175],"IERC721Metadata":[2046],"Strings":[3715]},"id":1987,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1860,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1987,"sourceUnit":1274,"src":"154:37:11","symbolAliases":[{"foreign":{"id":1861,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"162:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./IERC721Metadata.sol","id":1864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1987,"sourceUnit":2047,"src":"192:54:11","symbolAliases":[{"foreign":{"id":1863,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"200:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1987,"sourceUnit":3716,"src":"247:51:11","symbolAliases":[{"foreign":{"id":1865,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"255:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1868,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1987,"sourceUnit":176,"src":"299:58:11","symbolAliases":[{"foreign":{"id":1867,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"307:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1987,"sourceUnit":152,"src":"358:56:11","symbolAliases":[{"foreign":{"id":1869,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"366:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1872,"name":"IERC4906","nameLocations":["525:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":175,"src":"525:8:11"},"id":1873,"nodeType":"InheritanceSpecifier","src":"525:8:11"},{"baseName":{"id":1874,"name":"ERC721","nameLocations":["535:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"535:6:11"},"id":1875,"nodeType":"InheritanceSpecifier","src":"535:6:11"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"416:70:11","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":1986,"linearizedBaseContracts":[1986,1273,269,2046,175,1390,3739,3751,2153],"name":"ERC721URIStorage","nameLocation":"505:16:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1878,"libraryName":{"id":1876,"name":"Strings","nameLocations":["554:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"554:7:11"},"nodeType":"UsingForDirective","src":"548:26:11","typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1884,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"786:20:11","nodeType":"VariableDeclaration","scope":1986,"src":"762:65:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1879,"name":"bytes4","nodeType":"ElementaryTypeName","src":"762:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"816:10:11","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"809:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1880,"name":"bytes4","nodeType":"ElementaryTypeName","src":"809:6:11","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"809:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":1888,"mutability":"mutable","name":"_tokenURIs","nameLocation":"916:10:11","nodeType":"VariableDeclaration","scope":1986,"src":"873:53:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1887,"keyName":"tokenId","keyNameLocation":"889:7:11","keyType":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"873:34:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1886,"name":"string","nodeType":"ElementaryTypeName","src":"900:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[417,3750],"body":{"id":1908,"nodeType":"Block","src":"1069:99:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1086:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1900,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"1101:20:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1086:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1904,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1149:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1902,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1125:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1986_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1131:17:11","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":417,"src":"1125:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1086:75:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1898,"id":1907,"nodeType":"Return","src":"1079:82:11"}]},"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"933:23:11","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1909,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"970:17:11","nodeType":"FunctionDefinition","overrides":{"id":1895,"nodeType":"OverrideSpecifier","overrides":[{"id":1893,"name":"ERC721","nameLocations":["1037:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"1037:6:11"},{"id":1894,"name":"IERC165","nameLocations":["1045:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3751,"src":"1045:7:11"}],"src":"1028:25:11"},"parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"interfaceId","nameLocation":"995:11:11","nodeType":"VariableDeclaration","scope":1909,"src":"988:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1890,"name":"bytes4","nodeType":"ElementaryTypeName","src":"988:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"987:20:11"},"returnParameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1909,"src":"1063:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1896,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1062:6:11"},"scope":1986,"src":"961:207:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[512],"body":{"id":1965,"nodeType":"Block","src":"1298:505:11","statements":[{"expression":{"arguments":[{"id":1919,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1322:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1918,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"1308:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1921,"nodeType":"ExpressionStatement","src":"1308:22:11"},{"assignments":[1923],"declarations":[{"constant":false,"id":1923,"mutability":"mutable","name":"_tokenURI","nameLocation":"1355:9:11","nodeType":"VariableDeclaration","scope":1965,"src":"1341:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1922,"name":"string","nodeType":"ElementaryTypeName","src":"1341:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1927,"initialValue":{"baseExpression":{"id":1924,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"1367:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1926,"indexExpression":{"id":1925,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1367:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1341:45:11"},{"assignments":[1929],"declarations":[{"constant":false,"id":1929,"mutability":"mutable","name":"base","nameLocation":"1410:4:11","nodeType":"VariableDeclaration","scope":1965,"src":"1396:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1928,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1932,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1930,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"1417:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1417:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1396:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1935,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"1506:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1500:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1933,"name":"bytes","nodeType":"ElementaryTypeName","src":"1500:5:11","typeDescriptions":{}}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:6:11","memberName":"length","nodeType":"MemberAccess","src":"1500:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1522:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1500:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1943,"nodeType":"IfStatement","src":"1496:70:11","trueBody":{"id":1942,"nodeType":"Block","src":"1525:41:11","statements":[{"expression":{"id":1940,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"1546:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1917,"id":1941,"nodeType":"Return","src":"1539:16:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1946,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"1671:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1665:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1944,"name":"bytes","nodeType":"ElementaryTypeName","src":"1665:5:11","typeDescriptions":{}}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:6:11","memberName":"length","nodeType":"MemberAccess","src":"1665:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1665:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1959,"nodeType":"IfStatement","src":"1661:95:11","trueBody":{"id":1958,"nodeType":"Block","src":"1694:62:11","statements":[{"expression":{"arguments":[{"id":1954,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"1729:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1955,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"1735:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1715:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1951,"name":"string","nodeType":"ElementaryTypeName","src":"1715:6:11","typeDescriptions":{}}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1722:6:11","memberName":"concat","nodeType":"MemberAccess","src":"1715:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1917,"id":1957,"nodeType":"Return","src":"1708:37:11"}]}},{"expression":{"arguments":[{"id":1962,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1788:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1960,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1773:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1986_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:8:11","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":512,"src":"1773:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1917,"id":1964,"nodeType":"Return","src":"1766:30:11"}]},"documentation":{"id":1910,"nodeType":"StructuredDocumentation","src":"1174:31:11","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":1966,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1219:8:11","nodeType":"FunctionDefinition","overrides":{"id":1914,"nodeType":"OverrideSpecifier","overrides":[],"src":"1265:8:11"},"parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"tokenId","nameLocation":"1236:7:11","nodeType":"VariableDeclaration","scope":1966,"src":"1228:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:17:11"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1966,"src":"1283:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1915,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:11"},"scope":1986,"src":"1210:593:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1984,"nodeType":"Block","src":"2012:86:11","statements":[{"expression":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1974,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"2022:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1976,"indexExpression":{"id":1975,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"2033:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2022:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1977,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"2044:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2022:31:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1979,"nodeType":"ExpressionStatement","src":"2022:31:11"},{"eventCall":{"arguments":[{"id":1981,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"2083:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1980,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2068:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1983,"nodeType":"EmitStatement","src":"2063:28:11"}]},"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"1809:117:11","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {IERC4906-MetadataUpdate}."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1940:12:11","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"tokenId","nameLocation":"1961:7:11","nodeType":"VariableDeclaration","scope":1985,"src":"1953:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"_tokenURI","nameLocation":"1984:9:11","nodeType":"VariableDeclaration","scope":1985,"src":"1970:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1970,"name":"string","nodeType":"ElementaryTypeName","src":"1970:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1952:42:11"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"2012:0:11"},"scope":1986,"src":"1931:167:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1987,"src":"487:1613:11","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[167,174,1289,1298,1307]}],"src":"128:1973:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC721":[1390],"IERC721Enumerable":[2018]},"id":2019,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1988,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"129:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1990,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2019,"sourceUnit":1391,"src":"155:39:12","symbolAliases":[{"foreign":{"id":1989,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"163:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1992,"name":"IERC721","nameLocations":["364:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"364:7:12"},"id":1993,"nodeType":"InheritanceSpecifier","src":"364:7:12"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"196:136:12","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2018,"linearizedBaseContracts":[2018,1390,3751],"name":"IERC721Enumerable","nameLocation":"343:17:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1994,"nodeType":"StructuredDocumentation","src":"378:82:12","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":1999,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"474:11:12","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[],"src":"485:2:12"},"returnParameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1999,"src":"511:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"510:9:12"},"scope":2018,"src":"465:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"526:171:12","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":2009,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"711:19:12","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"owner","nameLocation":"739:5:12","nodeType":"VariableDeclaration","scope":2009,"src":"731:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"index","nameLocation":"754:5:12","nodeType":"VariableDeclaration","scope":2009,"src":"746:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"730:30:12"},"returnParameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2009,"src":"784:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:9:12"},"scope":2018,"src":"702:91:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"799:164:12","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":2017,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"977:12:12","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"index","nameLocation":"998:5:12","nodeType":"VariableDeclaration","scope":2017,"src":"990:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"989:15:12"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2017,"src":"1028:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:9:12"},"scope":2018,"src":"968:69:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2019,"src":"333:706:12","usedErrors":[],"usedEvents":[1289,1298,1307]}],"src":"129:911:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1390],"IERC721Metadata":[2046]},"id":2047,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2020,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2047,"sourceUnit":1391,"src":"153:39:13","symbolAliases":[{"foreign":{"id":2021,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"161:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2024,"name":"IERC721","nameLocations":["357:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"357:7:13"},"id":2025,"nodeType":"InheritanceSpecifier","src":"357:7:13"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2023,"nodeType":"StructuredDocumentation","src":"194:133:13","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2046,"linearizedBaseContracts":[2046,1390,3751],"name":"IERC721Metadata","nameLocation":"338:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2026,"nodeType":"StructuredDocumentation","src":"371:58:13","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2031,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:13","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[],"src":"447:2:13"},"returnParameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2031,"src":"473:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2028,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:13"},"scope":2046,"src":"434:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"494:60:13","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2037,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:13","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[],"src":"574:2:13"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"600:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2034,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:13"},"scope":2046,"src":"559:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"621:90:13","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2045,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:13","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:13","nodeType":"VariableDeclaration","scope":2045,"src":"734:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:13"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2045,"src":"774:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2042,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:13"},"scope":2046,"src":"716:73:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2047,"src":"328:463:13","usedErrors":[],"usedEvents":[1289,1298,1307]}],"src":"127:665:13"},"id":13},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2123],"IERC721Errors":[269],"IERC721Receiver":[1408]},"id":2124,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2048,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2050,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2124,"sourceUnit":1409,"src":"144:55:14","symbolAliases":[{"foreign":{"id":2049,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"152:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2052,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2124,"sourceUnit":317,"src":"200:69:14","symbolAliases":[{"foreign":{"id":2051,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"208:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"271:159:14","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2123,"linearizedBaseContracts":[2123],"name":"ERC721Utils","nameLocation":"439:11:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2121,"nodeType":"Block","src":"1159:760:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2067,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"1173:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:14","memberName":"code","nodeType":"MemberAccess","src":"1173:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:14","memberName":"length","nodeType":"MemberAccess","src":"1173:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2120,"nodeType":"IfStatement","src":"1169:744:14","trueBody":{"id":2119,"nodeType":"Block","src":"1193:720:14","statements":[{"clauses":[{"block":{"id":2097,"nodeType":"Block","src":"1303:214:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2084,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"1325:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2085,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"1335:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1408_$","typeString":"type(contract IERC721Receiver)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"1335:32:14","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:14","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2096,"nodeType":"IfStatement","src":"1321:182:14","trueBody":{"id":2095,"nodeType":"Block","src":"1378:125:14","statements":[{"errorCall":{"arguments":[{"id":2092,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"1481:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2089,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1445:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$269_$","typeString":"type(contract IERC721Errors)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":251,"src":"1445:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2094,"nodeType":"RevertStatement","src":"1438:46:14"}]}}]},"errorName":"","id":2098,"nodeType":"TryCatchClause","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"retval","nameLocation":"1295:6:14","nodeType":"VariableDeclaration","scope":2098,"src":"1288:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2081,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:14"},"src":"1279:238:14"},{"block":{"id":2116,"nodeType":"Block","src":"1546:357:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2102,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"1568:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:14","memberName":"length","nodeType":"MemberAccess","src":"1568:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2114,"nodeType":"Block","src":"1736:153:14","statements":[{"AST":{"nativeSrc":"1783:88:14","nodeType":"YulBlock","src":"1783:88:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1820:6:14","nodeType":"YulIdentifier","src":"1820:6:14"},{"kind":"number","nativeSrc":"1828:4:14","nodeType":"YulLiteral","src":"1828:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1816:3:14","nodeType":"YulIdentifier","src":"1816:3:14"},"nativeSrc":"1816:17:14","nodeType":"YulFunctionCall","src":"1816:17:14"},{"arguments":[{"name":"reason","nativeSrc":"1841:6:14","nodeType":"YulIdentifier","src":"1841:6:14"}],"functionName":{"name":"mload","nativeSrc":"1835:5:14","nodeType":"YulIdentifier","src":"1835:5:14"},"nativeSrc":"1835:13:14","nodeType":"YulFunctionCall","src":"1835:13:14"}],"functionName":{"name":"revert","nativeSrc":"1809:6:14","nodeType":"YulIdentifier","src":"1809:6:14"},"nativeSrc":"1809:40:14","nodeType":"YulFunctionCall","src":"1809:40:14"},"nativeSrc":"1809:40:14","nodeType":"YulExpressionStatement","src":"1809:40:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2100,"isOffset":false,"isSlot":false,"src":"1820:6:14","valueSize":1},{"declaration":2100,"isOffset":false,"isSlot":false,"src":"1841:6:14","valueSize":1}],"flags":["memory-safe"],"id":2113,"nodeType":"InlineAssembly","src":"1758:113:14"}]},"id":2115,"nodeType":"IfStatement","src":"1564:325:14","trueBody":{"id":2112,"nodeType":"Block","src":"1588:142:14","statements":[{"errorCall":{"arguments":[{"id":2109,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"1708:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2106,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1672:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$269_$","typeString":"type(contract IERC721Errors)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:14","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":251,"src":"1672:35:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2111,"nodeType":"RevertStatement","src":"1665:46:14"}]}}]},"errorName":"","id":2117,"nodeType":"TryCatchClause","parameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"reason","nameLocation":"1538:6:14","nodeType":"VariableDeclaration","scope":2117,"src":"1525:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2099,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:14"},"src":"1518:385:14"}],"externalCall":{"arguments":[{"id":2076,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"1248:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2077,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1258:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2078,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"1264:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2079,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1273:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2073,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"1227:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2072,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"1211:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1408_$","typeString":"type(contract IERC721Receiver)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1408","typeString":"contract IERC721Receiver"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"1211:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:14","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2118,"nodeType":"TryStatement","src":"1207:696:14"}]}}]},"documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"457:531:14","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2122,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:14","nodeType":"FunctionDefinition","parameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"operator","nameLocation":"1041:8:14","nodeType":"VariableDeclaration","scope":2122,"src":"1033:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"from","nameLocation":"1067:4:14","nodeType":"VariableDeclaration","scope":2122,"src":"1059:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"to","nameLocation":"1089:2:14","nodeType":"VariableDeclaration","scope":2122,"src":"1081:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:14","nodeType":"VariableDeclaration","scope":2122,"src":"1101:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2064,"mutability":"mutable","name":"data","nameLocation":"1139:4:14","nodeType":"VariableDeclaration","scope":2122,"src":"1126:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2063,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:14"},"returnParameters":{"id":2066,"nodeType":"ParameterList","parameters":[],"src":"1159:0:14"},"scope":2123,"src":"993:926:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2124,"src":"431:1490:14","usedErrors":[],"usedEvents":[]}],"src":"118:1804:14"},"id":14},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2153]},"id":2154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2125,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"127:496:15","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2153,"linearizedBaseContracts":[2153],"name":"Context","nameLocation":"642:7:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2134,"nodeType":"Block","src":"718:34:15","statements":[{"expression":{"expression":{"id":2131,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:15","memberName":"sender","nodeType":"MemberAccess","src":"735:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2130,"id":2133,"nodeType":"Return","src":"728:17:15"}]},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:15","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"675:2:15"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"709:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:15"},"scope":2153,"src":"656:96:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2143,"nodeType":"Block","src":"825:32:15","statements":[{"expression":{"expression":{"id":2140,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:15","memberName":"data","nodeType":"MemberAccess","src":"842:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2139,"id":2142,"nodeType":"Return","src":"835:15:15"}]},"id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:15","nodeType":"FunctionDefinition","parameters":{"id":2136,"nodeType":"ParameterList","parameters":[],"src":"775:2:15"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2144,"src":"809:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2137,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:15"},"scope":2153,"src":"758:99:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2151,"nodeType":"Block","src":"935:25:15","statements":[{"expression":{"hexValue":"30","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2148,"id":2150,"nodeType":"Return","src":"945:8:15"}]},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:15","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[],"src":"892:2:15"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2152,"src":"926:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:15"},"scope":2153,"src":"863:97:15","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2154,"src":"624:338:15","usedErrors":[],"usedEvents":[]}],"src":"101:862:15"},"id":15},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2205]},"id":2206,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2155,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"125:489:16","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2205,"linearizedBaseContracts":[2205],"name":"Panic","nameLocation":"665:5:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"677:36:16","text":"@dev generic / unspecified error"},"id":2160,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:16","nodeType":"VariableDeclaration","scope":2205,"src":"718:40:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"764:37:16","text":"@dev used by the assert() builtin"},"id":2164,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:16","nodeType":"VariableDeclaration","scope":2205,"src":"806:39:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"851:41:16","text":"@dev arithmetic underflow or overflow"},"id":2168,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:16","nodeType":"VariableDeclaration","scope":2205,"src":"897:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:16","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2169,"nodeType":"StructuredDocumentation","src":"950:35:16","text":"@dev division or modulo by zero"},"id":2172,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:16","nodeType":"VariableDeclaration","scope":2205,"src":"990:49:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:16","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"1045:30:16","text":"@dev enum conversion error"},"id":2176,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:16","nodeType":"VariableDeclaration","scope":2205,"src":"1080:54:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:16","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"1140:36:16","text":"@dev invalid encoding in storage"},"id":2180,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:16","nodeType":"VariableDeclaration","scope":2205,"src":"1181:55:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"1242:24:16","text":"@dev empty array pop"},"id":2184,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:16","nodeType":"VariableDeclaration","scope":2205,"src":"1271:48:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:16","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2185,"nodeType":"StructuredDocumentation","src":"1325:35:16","text":"@dev array out of bounds access"},"id":2188,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:16","nodeType":"VariableDeclaration","scope":2205,"src":"1365:52:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:16","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"1423:65:16","text":"@dev resource error (too large allocation or too large array)"},"id":2192,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:16","nodeType":"VariableDeclaration","scope":2205,"src":"1493:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"1546:42:16","text":"@dev calling invalid internal function"},"id":2196,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:16","nodeType":"VariableDeclaration","scope":2205,"src":"1593:58:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:16","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2203,"nodeType":"Block","src":"1819:151:16","statements":[{"AST":{"nativeSrc":"1854:110:16","nodeType":"YulBlock","src":"1854:110:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:16","nodeType":"YulLiteral","src":"1875:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:16","nodeType":"YulLiteral","src":"1881:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:16","nodeType":"YulIdentifier","src":"1868:6:16"},"nativeSrc":"1868:24:16","nodeType":"YulFunctionCall","src":"1868:24:16"},"nativeSrc":"1868:24:16","nodeType":"YulExpressionStatement","src":"1868:24:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:16","nodeType":"YulLiteral","src":"1912:4:16","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:16","nodeType":"YulIdentifier","src":"1918:4:16"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:16","nodeType":"YulIdentifier","src":"1905:6:16"},"nativeSrc":"1905:18:16","nodeType":"YulFunctionCall","src":"1905:18:16"},"nativeSrc":"1905:18:16","nodeType":"YulExpressionStatement","src":"1905:18:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:16","nodeType":"YulLiteral","src":"1943:4:16","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:16","nodeType":"YulLiteral","src":"1949:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:16","nodeType":"YulIdentifier","src":"1936:6:16"},"nativeSrc":"1936:18:16","nodeType":"YulFunctionCall","src":"1936:18:16"},"nativeSrc":"1936:18:16","nodeType":"YulExpressionStatement","src":"1936:18:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2199,"isOffset":false,"isSlot":false,"src":"1918:4:16","valueSize":1}],"flags":["memory-safe"],"id":2202,"nodeType":"InlineAssembly","src":"1829:135:16"}]},"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"1658:113:16","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:16","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"code","nameLocation":"1799:4:16","nodeType":"VariableDeclaration","scope":2204,"src":"1791:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:16"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[],"src":"1819:0:16"},"scope":2205,"src":"1776:194:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2206,"src":"657:1315:16","usedErrors":[],"usedEvents":[]}],"src":"99:1874:16"},"id":16},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[2153],"Pausable":[2313]},"id":2314,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2207,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2314,"sourceUnit":2154,"src":"128:45:17","symbolAliases":[{"foreign":{"id":2208,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"136:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2211,"name":"Context","nameLocations":["645:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"645:7:17"},"id":2212,"nodeType":"InheritanceSpecifier","src":"645:7:17"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2210,"nodeType":"StructuredDocumentation","src":"175:439:17","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2313,"linearizedBaseContracts":[2313,2153],"name":"Pausable","nameLocation":"633:8:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2214,"mutability":"mutable","name":"_paused","nameLocation":"672:7:17","nodeType":"VariableDeclaration","scope":2313,"src":"659:20:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2213,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2215,"nodeType":"StructuredDocumentation","src":"686:73:17","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2219,"name":"Paused","nameLocation":"770:6:17","nodeType":"EventDefinition","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:17","nodeType":"VariableDeclaration","scope":2219,"src":"777:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2216,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:17"},"src":"764:30:17"},{"anonymous":false,"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"800:70:17","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2224,"name":"Unpaused","nameLocation":"881:8:17","nodeType":"EventDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:17","nodeType":"VariableDeclaration","scope":2224,"src":"890:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2221,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:17"},"src":"875:32:17"},{"documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"913:76:17","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2227,"name":"EnforcedPause","nameLocation":"1000:13:17","nodeType":"ErrorDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[],"src":"1013:2:17"},"src":"994:22:17"},{"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"1022:80:17","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2230,"name":"ExpectedPause","nameLocation":"1113:13:17","nodeType":"ErrorDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[],"src":"1126:2:17"},"src":"1107:22:17"},{"body":{"id":2237,"nodeType":"Block","src":"1340:47:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2233,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"1350:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2235,"nodeType":"ExpressionStatement","src":"1350:19:17"},{"id":2236,"nodeType":"PlaceholderStatement","src":"1379:1:17"}]},"documentation":{"id":2231,"nodeType":"StructuredDocumentation","src":"1135:175:17","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2238,"name":"whenNotPaused","nameLocation":"1324:13:17","nodeType":"ModifierDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[],"src":"1337:2:17"},"src":"1315:72:17","virtual":false,"visibility":"internal"},{"body":{"id":2245,"nodeType":"Block","src":"1587:44:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2241,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"1597:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2243,"nodeType":"ExpressionStatement","src":"1597:16:17"},{"id":2244,"nodeType":"PlaceholderStatement","src":"1623:1:17"}]},"documentation":{"id":2239,"nodeType":"StructuredDocumentation","src":"1393:167:17","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2246,"name":"whenPaused","nameLocation":"1574:10:17","nodeType":"ModifierDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[],"src":"1584:2:17"},"src":"1565:66:17","virtual":false,"visibility":"internal"},{"body":{"id":2254,"nodeType":"Block","src":"1779:31:17","statements":[{"expression":{"id":2252,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"1796:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2251,"id":2253,"nodeType":"Return","src":"1789:14:17"}]},"documentation":{"id":2247,"nodeType":"StructuredDocumentation","src":"1637:84:17","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2255,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:17","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[],"src":"1741:2:17"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2255,"src":"1773:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2249,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:17"},"scope":2313,"src":"1726:84:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2266,"nodeType":"Block","src":"1929:77:17","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2259,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"1943:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2265,"nodeType":"IfStatement","src":"1939:61:17","trueBody":{"id":2264,"nodeType":"Block","src":"1953:47:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2261,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"1974:13:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2263,"nodeType":"RevertStatement","src":"1967:22:17"}]}}]},"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"1816:57:17","text":" @dev Throws if the contract is paused."},"id":2267,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:17","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[],"src":"1904:2:17"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[],"src":"1929:0:17"},"scope":2313,"src":"1878:128:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2279,"nodeType":"Block","src":"2126:78:17","statements":[{"condition":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:17","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2271,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"2141:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2278,"nodeType":"IfStatement","src":"2136:62:17","trueBody":{"id":2277,"nodeType":"Block","src":"2151:47:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2274,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"2172:13:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2276,"nodeType":"RevertStatement","src":"2165:22:17"}]}}]},"documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"2012:61:17","text":" @dev Throws if the contract is not paused."},"id":2280,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:17","nodeType":"FunctionDefinition","parameters":{"id":2269,"nodeType":"ParameterList","parameters":[],"src":"2101:2:17"},"returnParameters":{"id":2270,"nodeType":"ParameterList","parameters":[],"src":"2126:0:17"},"scope":2313,"src":"2078:126:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2295,"nodeType":"Block","src":"2388:66:17","statements":[{"expression":{"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2286,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2398:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2289,"nodeType":"ExpressionStatement","src":"2398:14:17"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2291,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"2434:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2290,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2427:6:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2294,"nodeType":"EmitStatement","src":"2422:25:17"}]},"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"2210:124:17","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2296,"implemented":true,"kind":"function","modifiers":[{"id":2284,"kind":"modifierInvocation","modifierName":{"id":2283,"name":"whenNotPaused","nameLocations":["2374:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":2238,"src":"2374:13:17"},"nodeType":"ModifierInvocation","src":"2374:13:17"}],"name":"_pause","nameLocation":"2348:6:17","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[],"src":"2354:2:17"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[],"src":"2388:0:17"},"scope":2313,"src":"2339:115:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2311,"nodeType":"Block","src":"2634:69:17","statements":[{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2302,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2644:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2305,"nodeType":"ExpressionStatement","src":"2644:15:17"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"2683:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2306,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"2674:8:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2310,"nodeType":"EmitStatement","src":"2669:27:17"}]},"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"2460:121:17","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2312,"implemented":true,"kind":"function","modifiers":[{"id":2300,"kind":"modifierInvocation","modifierName":{"id":2299,"name":"whenPaused","nameLocations":["2623:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2246,"src":"2623:10:17"},"nodeType":"ModifierInvocation","src":"2623:10:17"}],"name":"_unpause","nameLocation":"2595:8:17","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[],"src":"2603:2:17"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[],"src":"2634:0:17"},"scope":2313,"src":"2586:117:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2314,"src":"615:2090:17","usedErrors":[2227,2230],"usedEvents":[2219,2224]}],"src":"102:2604:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5372],"SafeCast":[7137],"SignedMath":[7281],"Strings":[3715]},"id":3716,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2315,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3716,"sourceUnit":5373,"src":"127:37:18","symbolAliases":[{"foreign":{"id":2316,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"135:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3716,"sourceUnit":7138,"src":"165:45:18","symbolAliases":[{"foreign":{"id":2318,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"173:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3716,"sourceUnit":7282,"src":"211:49:18","symbolAliases":[{"foreign":{"id":2320,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"219:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"262:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":3715,"linearizedBaseContracts":[3715],"name":"Strings","nameLocation":"305:7:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2324,"libraryName":{"id":2323,"name":"SafeCast","nameLocations":["325:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":7137,"src":"325:8:18"},"nodeType":"UsingForDirective","src":"319:21:18"},{"constant":true,"id":2327,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:18","nodeType":"VariableDeclaration","scope":3715,"src":"346:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2325,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2330,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:18","nodeType":"VariableDeclaration","scope":3715,"src":"408:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2328,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2366,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:18","nodeType":"VariableDeclaration","scope":3715,"src":"456:302:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:18","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:18","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:18","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:18","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:18","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:18","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:18","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:18","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:18","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:18","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:18","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:18","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:18","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:18","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:18","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:18","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2367,"nodeType":"StructuredDocumentation","src":"778:81:18","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2373,"name":"StringsInsufficientHexLength","nameLocation":"870:28:18","nodeType":"ErrorDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"value","nameLocation":"907:5:18","nodeType":"VariableDeclaration","scope":2373,"src":"899:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"length","nameLocation":"922:6:18","nodeType":"VariableDeclaration","scope":2373,"src":"914:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:18"},"src":"864:66:18"},{"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"936:108:18","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2376,"name":"StringsInvalidChar","nameLocation":"1055:18:18","nodeType":"ErrorDefinition","parameters":{"id":2375,"nodeType":"ParameterList","parameters":[],"src":"1073:2:18"},"src":"1049:27:18"},{"documentation":{"id":2377,"nodeType":"StructuredDocumentation","src":"1082:84:18","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2379,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:18","nodeType":"ErrorDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[],"src":"1204:2:18"},"src":"1171:36:18"},{"body":{"id":2426,"nodeType":"Block","src":"1379:563:18","statements":[{"id":2425,"nodeType":"UncheckedBlock","src":"1389:547:18","statements":[{"assignments":[2388],"declarations":[{"constant":false,"id":2388,"mutability":"mutable","name":"length","nameLocation":"1421:6:18","nodeType":"VariableDeclaration","scope":2425,"src":"1413:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2395,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"1441:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2389,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"1430:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5372_$","typeString":"type(library Math)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5204,"src":"1430:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:18"},{"assignments":[2397],"declarations":[{"constant":false,"id":2397,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:18","nodeType":"VariableDeclaration","scope":2425,"src":"1465:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2396,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2402,"initialValue":{"arguments":[{"id":2400,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"1499:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2398,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:18"},{"assignments":[2404],"declarations":[{"constant":false,"id":2404,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:18","nodeType":"VariableDeclaration","scope":2425,"src":"1520:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2405,"nodeType":"VariableDeclarationStatement","src":"1520:11:18"},{"AST":{"nativeSrc":"1570:69:18","nodeType":"YulBlock","src":"1570:69:18","statements":[{"nativeSrc":"1588:37:18","nodeType":"YulAssignment","src":"1588:37:18","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:18","nodeType":"YulIdentifier","src":"1603:6:18"},{"kind":"number","nativeSrc":"1611:4:18","nodeType":"YulLiteral","src":"1611:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:18","nodeType":"YulIdentifier","src":"1599:3:18"},"nativeSrc":"1599:17:18","nodeType":"YulFunctionCall","src":"1599:17:18"},{"name":"length","nativeSrc":"1618:6:18","nodeType":"YulIdentifier","src":"1618:6:18"}],"functionName":{"name":"add","nativeSrc":"1595:3:18","nodeType":"YulIdentifier","src":"1595:3:18"},"nativeSrc":"1595:30:18","nodeType":"YulFunctionCall","src":"1595:30:18"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:18","nodeType":"YulIdentifier","src":"1588:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2397,"isOffset":false,"isSlot":false,"src":"1603:6:18","valueSize":1},{"declaration":2388,"isOffset":false,"isSlot":false,"src":"1618:6:18","valueSize":1},{"declaration":2404,"isOffset":false,"isSlot":false,"src":"1588:3:18","valueSize":1}],"flags":["memory-safe"],"id":2406,"nodeType":"InlineAssembly","src":"1545:94:18"},{"body":{"id":2421,"nodeType":"Block","src":"1665:234:18","statements":[{"expression":{"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:18","subExpression":{"id":2408,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"1683:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2410,"nodeType":"ExpressionStatement","src":"1683:5:18"},{"AST":{"nativeSrc":"1731:86:18","nodeType":"YulBlock","src":"1731:86:18","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:18","nodeType":"YulIdentifier","src":"1761:3:18"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:18","nodeType":"YulIdentifier","src":"1775:5:18"},{"kind":"number","nativeSrc":"1782:2:18","nodeType":"YulLiteral","src":"1782:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:18","nodeType":"YulIdentifier","src":"1771:3:18"},"nativeSrc":"1771:14:18","nodeType":"YulFunctionCall","src":"1771:14:18"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:18","nodeType":"YulIdentifier","src":"1787:10:18"}],"functionName":{"name":"byte","nativeSrc":"1766:4:18","nodeType":"YulIdentifier","src":"1766:4:18"},"nativeSrc":"1766:32:18","nodeType":"YulFunctionCall","src":"1766:32:18"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:18","nodeType":"YulIdentifier","src":"1753:7:18"},"nativeSrc":"1753:46:18","nodeType":"YulFunctionCall","src":"1753:46:18"},"nativeSrc":"1753:46:18","nodeType":"YulExpressionStatement","src":"1753:46:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":2327,"isOffset":false,"isSlot":false,"src":"1787:10:18","valueSize":1},{"declaration":2404,"isOffset":false,"isSlot":false,"src":"1761:3:18","valueSize":1},{"declaration":2382,"isOffset":false,"isSlot":false,"src":"1775:5:18","valueSize":1}],"flags":["memory-safe"],"id":2411,"nodeType":"InlineAssembly","src":"1706:111:18"},{"expression":{"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"1834:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2415,"nodeType":"ExpressionStatement","src":"1834:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"1867:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2420,"nodeType":"IfStatement","src":"1863:21:18","trueBody":{"id":2419,"nodeType":"Break","src":"1879:5:18"}}]},"condition":{"hexValue":"74727565","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2422,"nodeType":"WhileStatement","src":"1652:247:18"},{"expression":{"id":2423,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"1919:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2386,"id":2424,"nodeType":"Return","src":"1912:13:18"}]}]},"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"1213:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2427,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:18","nodeType":"FunctionDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"value","nameLocation":"1334:5:18","nodeType":"VariableDeclaration","scope":2427,"src":"1326:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:18"},"returnParameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2427,"src":"1364:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2384,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:18"},"scope":3715,"src":"1308:634:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2452,"nodeType":"Block","src":"2118:92:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"2149:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:18","trueExpression":{"hexValue":"2d","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"2195:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2445,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"2180:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7281_$","typeString":"type(library SignedMath)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"2180:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2444,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"2171:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2435,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:18","typeDescriptions":{}}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2434,"id":2451,"nodeType":"Return","src":"2128:75:18"}]},"documentation":{"id":2428,"nodeType":"StructuredDocumentation","src":"1948:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2453,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:18","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"value","nameLocation":"2073:5:18","nodeType":"VariableDeclaration","scope":2453,"src":"2066:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2429,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:18"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2453,"src":"2103:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2432,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:18"},"scope":3715,"src":"2042:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2472,"nodeType":"Block","src":"2389:100:18","statements":[{"id":2471,"nodeType":"UncheckedBlock","src":"2399:84:18","statements":[{"expression":{"arguments":[{"id":2462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"2442:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"2461:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2463,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"2449:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5372_$","typeString":"type(library Math)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5315,"src":"2449:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2461,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2473,2556,2576],"referencedDeclaration":2556,"src":"2430:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2460,"id":2470,"nodeType":"Return","src":"2423:49:18"}]}]},"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"2216:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2473,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:18","nodeType":"FunctionDefinition","parameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"value","nameLocation":"2344:5:18","nodeType":"VariableDeclaration","scope":2473,"src":"2336:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:18"},"returnParameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2473,"src":"2374:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2458,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:18"},"scope":3715,"src":"2315:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2555,"nodeType":"Block","src":"2702:435:18","statements":[{"assignments":[2484],"declarations":[{"constant":false,"id":2484,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:18","nodeType":"VariableDeclaration","scope":2555,"src":"2712:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2486,"initialValue":{"id":2485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"2733:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:18"},{"assignments":[2488],"declarations":[{"constant":false,"id":2488,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:18","nodeType":"VariableDeclaration","scope":2555,"src":"2748:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2487,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2497,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2492,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"2784:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2489,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:18"},{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2498,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"2805:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2500,"indexExpression":{"hexValue":"30","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2503,"nodeType":"ExpressionStatement","src":"2805:15:18"},{"expression":{"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2504,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"2830:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2506,"indexExpression":{"hexValue":"31","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2509,"nodeType":"ExpressionStatement","src":"2830:15:18"},{"body":{"id":2538,"nodeType":"Block","src":"2900:95:18","statements":[{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2524,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"2914:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2526,"indexExpression":{"id":2525,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"2921:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2527,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"2926:10:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2531,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"2937:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2533,"nodeType":"ExpressionStatement","src":"2914:40:18"},{"expression":{"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2534,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"2968:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2537,"nodeType":"ExpressionStatement","src":"2968:16:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2518,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"2888:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2539,"initializationExpression":{"assignments":[2511],"declarations":[{"constant":false,"id":2511,"mutability":"mutable","name":"i","nameLocation":"2868:1:18","nodeType":"VariableDeclaration","scope":2539,"src":"2860:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2517,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2513,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"2876:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:18","subExpression":{"id":2521,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"2897:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2523,"nodeType":"ExpressionStatement","src":"2895:3:18"},"nodeType":"ForStatement","src":"2855:140:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2540,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"3008:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2549,"nodeType":"IfStatement","src":"3004:96:18","trueBody":{"id":2548,"nodeType":"Block","src":"3025:75:18","statements":[{"errorCall":{"arguments":[{"id":2544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"3075:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2545,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"3082:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2543,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"3046:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2547,"nodeType":"RevertStatement","src":"3039:50:18"}]}},{"expression":{"arguments":[{"id":2552,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"3123:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2550,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:18","typeDescriptions":{}}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2482,"id":2554,"nodeType":"Return","src":"3109:21:18"}]},"documentation":{"id":2474,"nodeType":"StructuredDocumentation","src":"2495:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2556,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:18","nodeType":"FunctionDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"value","nameLocation":"2641:5:18","nodeType":"VariableDeclaration","scope":2556,"src":"2633:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"length","nameLocation":"2656:6:18","nodeType":"VariableDeclaration","scope":2556,"src":"2648:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:18"},"returnParameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2556,"src":"2687:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2480,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:18"},"scope":3715,"src":"2612:525:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2575,"nodeType":"Block","src":"3369:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2569,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"3414:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2567,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:18","typeDescriptions":{}}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:18","typeDescriptions":{}}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2572,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"3422:14:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2564,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2473,2556,2576],"referencedDeclaration":2556,"src":"3386:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2563,"id":2574,"nodeType":"Return","src":"3379:58:18"}]},"documentation":{"id":2557,"nodeType":"StructuredDocumentation","src":"3143:148:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2576,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:18","nodeType":"FunctionDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"addr","nameLocation":"3325:4:18","nodeType":"VariableDeclaration","scope":2576,"src":"3317:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2558,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:18"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2576,"src":"3354:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2561,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:18"},"scope":3715,"src":"3296:148:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2640,"nodeType":"Block","src":"3701:642:18","statements":[{"assignments":[2585],"declarations":[{"constant":false,"id":2585,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:18","nodeType":"VariableDeclaration","scope":2640,"src":"3711:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2584,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2592,"initialValue":{"arguments":[{"arguments":[{"id":2589,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"3751:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2588,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2473,2556,2576],"referencedDeclaration":2576,"src":"3739:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2586,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:18","typeDescriptions":{}}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:18"},{"assignments":[2594],"declarations":[{"constant":false,"id":2594,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:18","nodeType":"VariableDeclaration","scope":2640,"src":"3842:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2595,"nodeType":"VariableDeclarationStatement","src":"3842:17:18"},{"AST":{"nativeSrc":"3894:78:18","nodeType":"YulBlock","src":"3894:78:18","statements":[{"nativeSrc":"3908:54:18","nodeType":"YulAssignment","src":"3908:54:18","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:18","nodeType":"YulLiteral","src":"3925:2:18","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:18","nodeType":"YulIdentifier","src":"3943:6:18"},{"kind":"number","nativeSrc":"3951:4:18","nodeType":"YulLiteral","src":"3951:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:18","nodeType":"YulIdentifier","src":"3939:3:18"},"nativeSrc":"3939:17:18","nodeType":"YulFunctionCall","src":"3939:17:18"},{"kind":"number","nativeSrc":"3958:2:18","nodeType":"YulLiteral","src":"3958:2:18","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:18","nodeType":"YulIdentifier","src":"3929:9:18"},"nativeSrc":"3929:32:18","nodeType":"YulFunctionCall","src":"3929:32:18"}],"functionName":{"name":"shr","nativeSrc":"3921:3:18","nodeType":"YulIdentifier","src":"3921:3:18"},"nativeSrc":"3921:41:18","nodeType":"YulFunctionCall","src":"3921:41:18"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:18","nodeType":"YulIdentifier","src":"3908:9:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2585,"isOffset":false,"isSlot":false,"src":"3943:6:18","valueSize":1},{"declaration":2594,"isOffset":false,"isSlot":false,"src":"3908:9:18","valueSize":1}],"flags":["memory-safe"],"id":2596,"nodeType":"InlineAssembly","src":"3869:103:18"},{"body":{"id":2633,"nodeType":"Block","src":"4015:291:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"4121:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2614,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"4150:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2616,"indexExpression":{"id":2615,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"4157:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2612,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:18","typeDescriptions":{}}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2628,"nodeType":"IfStatement","src":"4117:150:18","trueBody":{"id":2627,"nodeType":"Block","src":"4167:100:18","statements":[{"expression":{"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2621,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"4235:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2623,"indexExpression":{"id":2622,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"4242:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2626,"nodeType":"ExpressionStatement","src":"4235:17:18"}]}},{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2629,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"4280:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2632,"nodeType":"ExpressionStatement","src":"4280:15:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"4003:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2634,"initializationExpression":{"assignments":[2598],"declarations":[{"constant":false,"id":2598,"mutability":"mutable","name":"i","nameLocation":"3995:1:18","nodeType":"VariableDeclaration","scope":2634,"src":"3987:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2600,"initialValue":{"hexValue":"3431","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:18","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:18","subExpression":{"id":2604,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"4012:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2606,"nodeType":"ExpressionStatement","src":"4010:3:18"},"nodeType":"ForStatement","src":"3982:324:18"},{"expression":{"arguments":[{"id":2637,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"4329:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2635,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:18","typeDescriptions":{}}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2583,"id":2639,"nodeType":"Return","src":"4315:21:18"}]},"documentation":{"id":2577,"nodeType":"StructuredDocumentation","src":"3450:165:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2641,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:18","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"addr","nameLocation":"3657:4:18","nodeType":"VariableDeclaration","scope":2641,"src":"3649:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2578,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:18"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2641,"src":"3686:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2581,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:18"},"scope":3715,"src":"3620:723:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2677,"nodeType":"Block","src":"4498:104:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2653,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"4521:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2651,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:18","typeDescriptions":{}}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:18","memberName":"length","nodeType":"MemberAccess","src":"4515:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"4540:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2656,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:18","typeDescriptions":{}}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:18","memberName":"length","nodeType":"MemberAccess","src":"4534:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2665,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"4569:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2663,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:18","typeDescriptions":{}}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2662,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2671,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"4592:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2669,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:18","typeDescriptions":{}}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2668,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2650,"id":2676,"nodeType":"Return","src":"4508:87:18"}]},"documentation":{"id":2642,"nodeType":"StructuredDocumentation","src":"4349:66:18","text":" @dev Returns true if the two strings are equal."},"id":2678,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:18","nodeType":"FunctionDefinition","parameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"a","nameLocation":"4449:1:18","nodeType":"VariableDeclaration","scope":2678,"src":"4435:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2643,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2646,"mutability":"mutable","name":"b","nameLocation":"4466:1:18","nodeType":"VariableDeclaration","scope":2678,"src":"4452:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2645,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:18"},"returnParameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2678,"src":"4492:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2648,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:18"},"scope":3715,"src":"4420:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"4899:64:18","statements":[{"expression":{"arguments":[{"id":2687,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"4926:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2691,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"4942:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2689,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:18","typeDescriptions":{}}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:18","memberName":"length","nodeType":"MemberAccess","src":"4936:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2686,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2697,2728],"referencedDeclaration":2728,"src":"4916:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2685,"id":2695,"nodeType":"Return","src":"4909:47:18"}]},"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"4608:214:18","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:18","nodeType":"FunctionDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"input","nameLocation":"4860:5:18","nodeType":"VariableDeclaration","scope":2697,"src":"4846:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2680,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:18"},"returnParameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2697,"src":"4890:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:18"},"scope":3715,"src":"4827:136:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2727,"nodeType":"Block","src":"5368:153:18","statements":[{"assignments":[2710,2712],"declarations":[{"constant":false,"id":2710,"mutability":"mutable","name":"success","nameLocation":"5384:7:18","nodeType":"VariableDeclaration","scope":2727,"src":"5379:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2709,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"value","nameLocation":"5401:5:18","nodeType":"VariableDeclaration","scope":2727,"src":"5393:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2718,"initialValue":{"arguments":[{"id":2714,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"5423:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2715,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"5430:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2716,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"5437:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2713,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2749,2786],"referencedDeclaration":2786,"src":"5410:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:18"},{"condition":{"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:18","subExpression":{"id":2719,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"5456:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2724,"nodeType":"IfStatement","src":"5451:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2721,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"5472:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2723,"nodeType":"RevertStatement","src":"5465:27:18"}},{"expression":{"id":2725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"5509:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2708,"id":2726,"nodeType":"Return","src":"5502:12:18"}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"4969:294:18","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2728,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:18","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"input","nameLocation":"5301:5:18","nodeType":"VariableDeclaration","scope":2728,"src":"5287:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"begin","nameLocation":"5316:5:18","nodeType":"VariableDeclaration","scope":2728,"src":"5308:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"end","nameLocation":"5331:3:18","nodeType":"VariableDeclaration","scope":2728,"src":"5323:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:18"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2728,"src":"5359:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:18"},"scope":3715,"src":"5268:253:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2748,"nodeType":"Block","src":"5842:83:18","statements":[{"expression":{"arguments":[{"id":2739,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"5888:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2743,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"5904:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2741,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:18","typeDescriptions":{}}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:18","memberName":"length","nodeType":"MemberAccess","src":"5898:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2738,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"5859:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2737,"id":2747,"nodeType":"Return","src":"5852:66:18"}]},"documentation":{"id":2729,"nodeType":"StructuredDocumentation","src":"5527:215:18","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2749,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:18","nodeType":"FunctionDefinition","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"input","nameLocation":"5783:5:18","nodeType":"VariableDeclaration","scope":2749,"src":"5769:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2730,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:18"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"success","nameLocation":"5818:7:18","nodeType":"VariableDeclaration","scope":2749,"src":"5813:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2733,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"value","nameLocation":"5835:5:18","nodeType":"VariableDeclaration","scope":2749,"src":"5827:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:18"},"scope":3715,"src":"5747:178:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"6327:144:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"6341:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2766,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"6353:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2764,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:18","typeDescriptions":{}}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:18","memberName":"length","nodeType":"MemberAccess","src":"6347:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2770,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"6370:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2771,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"6378:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2778,"nodeType":"IfStatement","src":"6337:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2762,"id":2777,"nodeType":"Return","src":"6383:17:18"}},{"expression":{"arguments":[{"id":2780,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"6446:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2781,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"6453:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2782,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"6460:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2779,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"6417:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2762,"id":2784,"nodeType":"Return","src":"6410:54:18"}]},"documentation":{"id":2750,"nodeType":"StructuredDocumentation","src":"5931:238:18","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:18","nodeType":"FunctionDefinition","parameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"input","nameLocation":"6219:5:18","nodeType":"VariableDeclaration","scope":2786,"src":"6205:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2751,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2754,"mutability":"mutable","name":"begin","nameLocation":"6242:5:18","nodeType":"VariableDeclaration","scope":2786,"src":"6234:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2756,"mutability":"mutable","name":"end","nameLocation":"6265:3:18","nodeType":"VariableDeclaration","scope":2786,"src":"6257:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2755,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:18"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"success","nameLocation":"6303:7:18","nodeType":"VariableDeclaration","scope":2786,"src":"6298:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2758,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2761,"mutability":"mutable","name":"value","nameLocation":"6320:5:18","nodeType":"VariableDeclaration","scope":2786,"src":"6312:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:18"},"scope":3715,"src":"6174:297:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2855,"nodeType":"Block","src":"6874:347:18","statements":[{"assignments":[2801],"declarations":[{"constant":false,"id":2801,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:18","nodeType":"VariableDeclaration","scope":2855,"src":"6884:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2800,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2806,"initialValue":{"arguments":[{"id":2804,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"6912:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2802,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:18","typeDescriptions":{}}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:18"},{"assignments":[2808],"declarations":[{"constant":false,"id":2808,"mutability":"mutable","name":"result","nameLocation":"6937:6:18","nodeType":"VariableDeclaration","scope":2855,"src":"6929:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2810,"initialValue":{"hexValue":"30","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:18"},{"body":{"id":2849,"nodeType":"Block","src":"6995:189:18","statements":[{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"chr","nameLocation":"7015:3:18","nodeType":"VariableDeclaration","scope":2849,"src":"7009:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2821,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2832,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2827,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"7064:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7072:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2826,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"7041:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2824,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:18","typeDescriptions":{}}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2823,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"7021:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2833,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"7094:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2840,"nodeType":"IfStatement","src":"7090:30:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2799,"id":2839,"nodeType":"Return","src":"7103:17:18"}},{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"7134:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2844,"nodeType":"ExpressionStatement","src":"7134:12:18"},{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"7160:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2846,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"7170:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"nodeType":"ExpressionStatement","src":"7160:13:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"6981:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2816,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"6985:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2850,"initializationExpression":{"assignments":[2812],"declarations":[{"constant":false,"id":2812,"mutability":"mutable","name":"i","nameLocation":"6970:1:18","nodeType":"VariableDeclaration","scope":2850,"src":"6962:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2814,"initialValue":{"id":2813,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"6974:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:18","subExpression":{"id":2818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"6992:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"nodeType":"ExpressionStatement","src":"6990:3:18"},"nodeType":"ForStatement","src":"6957:227:18"},{"expression":{"components":[{"hexValue":"74727565","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2852,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"7207:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2799,"id":2854,"nodeType":"Return","src":"7193:21:18"}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"6477:224:18","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2856,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:18","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"input","nameLocation":"6767:5:18","nodeType":"VariableDeclaration","scope":2856,"src":"6753:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2788,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2791,"mutability":"mutable","name":"begin","nameLocation":"6790:5:18","nodeType":"VariableDeclaration","scope":2856,"src":"6782:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2790,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"end","nameLocation":"6813:3:18","nodeType":"VariableDeclaration","scope":2856,"src":"6805:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2792,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:18"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"success","nameLocation":"6850:7:18","nodeType":"VariableDeclaration","scope":2856,"src":"6845:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2795,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"value","nameLocation":"6867:5:18","nodeType":"VariableDeclaration","scope":2856,"src":"6859:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:18"},"scope":3715,"src":"6706:515:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2874,"nodeType":"Block","src":"7518:63:18","statements":[{"expression":{"arguments":[{"id":2865,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"7544:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2869,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"7560:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2867,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:18","typeDescriptions":{}}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:18","memberName":"length","nodeType":"MemberAccess","src":"7554:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2864,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2875,2906],"referencedDeclaration":2906,"src":"7535:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2863,"id":2873,"nodeType":"Return","src":"7528:46:18"}]},"documentation":{"id":2857,"nodeType":"StructuredDocumentation","src":"7227:216:18","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2875,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:18","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"input","nameLocation":"7480:5:18","nodeType":"VariableDeclaration","scope":2875,"src":"7466:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2858,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:18"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2875,"src":"7510:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2861,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:18"},"scope":3715,"src":"7448:133:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2905,"nodeType":"Block","src":"7986:151:18","statements":[{"assignments":[2888,2890],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"success","nameLocation":"8002:7:18","nodeType":"VariableDeclaration","scope":2905,"src":"7997:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2887,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2890,"mutability":"mutable","name":"value","nameLocation":"8018:5:18","nodeType":"VariableDeclaration","scope":2905,"src":"8011:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2889,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2896,"initialValue":{"arguments":[{"id":2892,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"8039:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2893,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"8046:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2894,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"8053:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2891,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2927,2969],"referencedDeclaration":2969,"src":"8027:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:18"},{"condition":{"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:18","subExpression":{"id":2897,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"8072:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2902,"nodeType":"IfStatement","src":"8067:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2899,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"8088:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2901,"nodeType":"RevertStatement","src":"8081:27:18"}},{"expression":{"id":2903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"8125:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2886,"id":2904,"nodeType":"Return","src":"8118:12:18"}]},"documentation":{"id":2876,"nodeType":"StructuredDocumentation","src":"7587:296:18","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2906,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:18","nodeType":"FunctionDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"input","nameLocation":"7920:5:18","nodeType":"VariableDeclaration","scope":2906,"src":"7906:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2877,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2880,"mutability":"mutable","name":"begin","nameLocation":"7935:5:18","nodeType":"VariableDeclaration","scope":2906,"src":"7927:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2879,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2882,"mutability":"mutable","name":"end","nameLocation":"7950:3:18","nodeType":"VariableDeclaration","scope":2906,"src":"7942:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:18"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2906,"src":"7978:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2884,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:18"},"scope":3715,"src":"7888:249:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2926,"nodeType":"Block","src":"8528:82:18","statements":[{"expression":{"arguments":[{"id":2917,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"8573:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2921,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"8589:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2919,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:18","typeDescriptions":{}}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:18","memberName":"length","nodeType":"MemberAccess","src":"8583:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2916,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"8545:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2915,"id":2925,"nodeType":"Return","src":"8538:65:18"}]},"documentation":{"id":2907,"nodeType":"StructuredDocumentation","src":"8143:287:18","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2927,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:18","nodeType":"FunctionDefinition","parameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"input","nameLocation":"8470:5:18","nodeType":"VariableDeclaration","scope":2927,"src":"8456:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2908,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:18"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"success","nameLocation":"8505:7:18","nodeType":"VariableDeclaration","scope":2927,"src":"8500:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2911,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"value","nameLocation":"8521:5:18","nodeType":"VariableDeclaration","scope":2927,"src":"8514:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2913,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:18"},"scope":3715,"src":"8435:175:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2932,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:18","nodeType":"VariableDeclaration","scope":3715,"src":"8616:50:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2968,"nodeType":"Block","src":"9132:143:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2946,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"9146:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2949,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"9158:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2947,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:18","typeDescriptions":{}}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:18","memberName":"length","nodeType":"MemberAccess","src":"9152:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"9175:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2954,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"9183:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2961,"nodeType":"IfStatement","src":"9142:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2959,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2945,"id":2960,"nodeType":"Return","src":"9188:17:18"}},{"expression":{"arguments":[{"id":2963,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"9250:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2964,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"9257:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2965,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"9264:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2962,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"9222:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2945,"id":2967,"nodeType":"Return","src":"9215:53:18"}]},"documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"8673:303:18","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2969,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:18","nodeType":"FunctionDefinition","parameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"input","nameLocation":"9025:5:18","nodeType":"VariableDeclaration","scope":2969,"src":"9011:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2934,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"begin","nameLocation":"9048:5:18","nodeType":"VariableDeclaration","scope":2969,"src":"9040:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"end","nameLocation":"9071:3:18","nodeType":"VariableDeclaration","scope":2969,"src":"9063:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:18"},"returnParameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"success","nameLocation":"9109:7:18","nodeType":"VariableDeclaration","scope":2969,"src":"9104:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2941,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"value","nameLocation":"9125:5:18","nodeType":"VariableDeclaration","scope":2969,"src":"9118:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2943,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:18"},"scope":3715,"src":"8981:294:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3089,"nodeType":"Block","src":"9675:812:18","statements":[{"assignments":[2984],"declarations":[{"constant":false,"id":2984,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:18","nodeType":"VariableDeclaration","scope":3089,"src":"9685:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2983,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2989,"initialValue":{"arguments":[{"id":2987,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"9713:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2985,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:18","typeDescriptions":{}}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:18"},{"assignments":[2991],"declarations":[{"constant":false,"id":2991,"mutability":"mutable","name":"sign","nameLocation":"9783:4:18","nodeType":"VariableDeclaration","scope":3089,"src":"9776:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2990,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3007,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"9790:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2993,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"9799:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3002,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"9847:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3003,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"9855:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3001,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"9824:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2999,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:18","typeDescriptions":{}}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:18","trueExpression":{"arguments":[{"hexValue":"30","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2995,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:18","typeDescriptions":{}}},"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:18"},{"assignments":[3009],"declarations":[{"constant":false,"id":3009,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:18","nodeType":"VariableDeclaration","scope":3089,"src":"9943:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3008,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3016,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"9963:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3011,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:18","typeDescriptions":{}}},"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:18"},{"assignments":[3018],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:18","nodeType":"VariableDeclaration","scope":3089,"src":"9992:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3017,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3025,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"10012:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3020,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:18","typeDescriptions":{}}},"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:18"},{"assignments":[3027],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"offset","nameLocation":"10049:6:18","nodeType":"VariableDeclaration","scope":3089,"src":"10041:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3034,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3028,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"10059:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3029,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10075:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"10058:37:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:18"},{"assignments":[3036,3038],"declarations":[{"constant":false,"id":3036,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:18","nodeType":"VariableDeclaration","scope":3089,"src":"10109:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3035,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:18","nodeType":"VariableDeclaration","scope":3089,"src":"10126:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3046,"initialValue":{"arguments":[{"id":3040,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"10159:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3041,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"10166:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3042,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"10174:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3044,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"10182:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3039,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2749,2786],"referencedDeclaration":2786,"src":"10146:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3047,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"10201:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3048,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"10215:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3049,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"10226:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"10343:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3068,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10357:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3070,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"10373:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3071,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"10385:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2982,"id":3086,"nodeType":"Return","src":"10463:17:18"},"id":3087,"nodeType":"IfStatement","src":"10339:141:18","trueBody":{"id":3082,"nodeType":"Block","src":"10401:56:18","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3076,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3075,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:18","memberName":"min","nodeType":"MemberAccess","src":"10429:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2982,"id":3081,"nodeType":"Return","src":"10415:31:18"}]}},"id":3088,"nodeType":"IfStatement","src":"10197:283:18","trueBody":{"id":3066,"nodeType":"Block","src":"10242:91:18","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3053,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10270:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3061,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"10312:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3059,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:18","typeDescriptions":{}}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:18","trueExpression":{"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:18","subExpression":{"arguments":[{"id":3056,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"10293:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3054,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:18","typeDescriptions":{}}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2982,"id":3065,"nodeType":"Return","src":"10256:66:18"}]}}]},"documentation":{"id":2970,"nodeType":"StructuredDocumentation","src":"9281:223:18","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3090,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:18","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"input","nameLocation":"9569:5:18","nodeType":"VariableDeclaration","scope":3090,"src":"9555:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2971,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"begin","nameLocation":"9592:5:18","nodeType":"VariableDeclaration","scope":3090,"src":"9584:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"end","nameLocation":"9615:3:18","nodeType":"VariableDeclaration","scope":3090,"src":"9607:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:18"},"returnParameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"success","nameLocation":"9652:7:18","nodeType":"VariableDeclaration","scope":3090,"src":"9647:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2978,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"value","nameLocation":"9668:5:18","nodeType":"VariableDeclaration","scope":3090,"src":"9661:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2980,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:18"},"scope":3715,"src":"9509:978:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3108,"nodeType":"Block","src":"10832:67:18","statements":[{"expression":{"arguments":[{"id":3099,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"10862:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3103,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"10878:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3101,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:18","typeDescriptions":{}}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:18","memberName":"length","nodeType":"MemberAccess","src":"10872:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3098,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3109,3140],"referencedDeclaration":3140,"src":"10849:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3097,"id":3107,"nodeType":"Return","src":"10842:50:18"}]},"documentation":{"id":3091,"nodeType":"StructuredDocumentation","src":"10493:259:18","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3109,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:18","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"input","nameLocation":"10793:5:18","nodeType":"VariableDeclaration","scope":3109,"src":"10779:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3092,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:18"},"returnParameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3109,"src":"10823:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3095,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:18"},"scope":3715,"src":"10757:142:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3139,"nodeType":"Block","src":"11320:156:18","statements":[{"assignments":[3122,3124],"declarations":[{"constant":false,"id":3122,"mutability":"mutable","name":"success","nameLocation":"11336:7:18","nodeType":"VariableDeclaration","scope":3139,"src":"11331:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3121,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3124,"mutability":"mutable","name":"value","nameLocation":"11353:5:18","nodeType":"VariableDeclaration","scope":3139,"src":"11345:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3130,"initialValue":{"arguments":[{"id":3126,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"11378:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3127,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"11385:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3128,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"11392:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3125,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3161,3198],"referencedDeclaration":3198,"src":"11362:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:18"},{"condition":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:18","subExpression":{"id":3131,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"11411:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3136,"nodeType":"IfStatement","src":"11406:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3133,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"11427:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3135,"nodeType":"RevertStatement","src":"11420:27:18"}},{"expression":{"id":3137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"11464:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3120,"id":3138,"nodeType":"Return","src":"11457:12:18"}]},"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"10905:307:18","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3140,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:18","nodeType":"FunctionDefinition","parameters":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"input","nameLocation":"11253:5:18","nodeType":"VariableDeclaration","scope":3140,"src":"11239:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3111,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3114,"mutability":"mutable","name":"begin","nameLocation":"11268:5:18","nodeType":"VariableDeclaration","scope":3140,"src":"11260:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3116,"mutability":"mutable","name":"end","nameLocation":"11283:3:18","nodeType":"VariableDeclaration","scope":3140,"src":"11275:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3115,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:18"},"returnParameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3140,"src":"11311:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:18"},"scope":3715,"src":"11217:259:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3160,"nodeType":"Block","src":"11803:86:18","statements":[{"expression":{"arguments":[{"id":3151,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"11852:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3155,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"11868:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3153,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:18","typeDescriptions":{}}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:18","memberName":"length","nodeType":"MemberAccess","src":"11862:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3150,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"11820:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3149,"id":3159,"nodeType":"Return","src":"11813:69:18"}]},"documentation":{"id":3141,"nodeType":"StructuredDocumentation","src":"11482:218:18","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3161,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:18","nodeType":"FunctionDefinition","parameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"input","nameLocation":"11744:5:18","nodeType":"VariableDeclaration","scope":3161,"src":"11730:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3142,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:18"},"returnParameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"success","nameLocation":"11779:7:18","nodeType":"VariableDeclaration","scope":3161,"src":"11774:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3145,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"value","nameLocation":"11796:5:18","nodeType":"VariableDeclaration","scope":3161,"src":"11788:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:18"},"scope":3715,"src":"11705:184:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3197,"nodeType":"Block","src":"12297:147:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"12311:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3178,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"12323:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3176,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:18","typeDescriptions":{}}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:18","memberName":"length","nodeType":"MemberAccess","src":"12317:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3182,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"12340:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3183,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"12348:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3190,"nodeType":"IfStatement","src":"12307:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3174,"id":3189,"nodeType":"Return","src":"12353:17:18"}},{"expression":{"arguments":[{"id":3192,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"12419:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3193,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"12426:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3194,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"12433:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3191,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"12387:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3174,"id":3196,"nodeType":"Return","src":"12380:57:18"}]},"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"11895:241:18","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3198,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:18","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"input","nameLocation":"12189:5:18","nodeType":"VariableDeclaration","scope":3198,"src":"12175:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3163,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"begin","nameLocation":"12212:5:18","nodeType":"VariableDeclaration","scope":3198,"src":"12204:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3168,"mutability":"mutable","name":"end","nameLocation":"12235:3:18","nodeType":"VariableDeclaration","scope":3198,"src":"12227:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:18"},"returnParameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"success","nameLocation":"12273:7:18","nodeType":"VariableDeclaration","scope":3198,"src":"12268:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3170,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3173,"mutability":"mutable","name":"value","nameLocation":"12290:5:18","nodeType":"VariableDeclaration","scope":3198,"src":"12282:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:18"},"scope":3715,"src":"12141:303:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3300,"nodeType":"Block","src":"12853:881:18","statements":[{"assignments":[3213],"declarations":[{"constant":false,"id":3213,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:18","nodeType":"VariableDeclaration","scope":3300,"src":"12863:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3212,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3218,"initialValue":{"arguments":[{"id":3216,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"12891:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3214,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:18","typeDescriptions":{}}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:18"},{"assignments":[3220],"declarations":[{"constant":false,"id":3220,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:18","nodeType":"VariableDeclaration","scope":3300,"src":"12945:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3219,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3240,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"12963:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"12969:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3230,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"13013:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3231,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"13021:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3229,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"12990:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3227,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:18","typeDescriptions":{}}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3234,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:18","typeDescriptions":{}}},"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:18"},{"assignments":[3242],"declarations":[{"constant":false,"id":3242,"mutability":"mutable","name":"offset","nameLocation":"13133:6:18","nodeType":"VariableDeclaration","scope":3300,"src":"13125:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3241,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3248,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3243,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"13142:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"13142:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:18"},{"assignments":[3250],"declarations":[{"constant":false,"id":3250,"mutability":"mutable","name":"result","nameLocation":"13183:6:18","nodeType":"VariableDeclaration","scope":3300,"src":"13175:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3252,"initialValue":{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:18"},{"body":{"id":3294,"nodeType":"Block","src":"13250:447:18","statements":[{"assignments":[3266],"declarations":[{"constant":false,"id":3266,"mutability":"mutable","name":"chr","nameLocation":"13270:3:18","nodeType":"VariableDeclaration","scope":3294,"src":"13264:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3265,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3276,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3271,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"13319:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3272,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"13327:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3270,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"13296:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3268,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:18","typeDescriptions":{}}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3267,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"13276:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"13349:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3284,"nodeType":"IfStatement","src":"13345:31:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3211,"id":3283,"nodeType":"Return","src":"13359:17:18"}},{"expression":{"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"13390:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3288,"nodeType":"ExpressionStatement","src":"13390:12:18"},{"id":3293,"nodeType":"UncheckedBlock","src":"13416:271:18","statements":[{"expression":{"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3289,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"13659:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3290,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"13669:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3292,"nodeType":"ExpressionStatement","src":"13659:13:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3259,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"13236:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3260,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"13240:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3295,"initializationExpression":{"assignments":[3254],"declarations":[{"constant":false,"id":3254,"mutability":"mutable","name":"i","nameLocation":"13216:1:18","nodeType":"VariableDeclaration","scope":3295,"src":"13208:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3258,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"13220:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3256,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"13228:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:18","subExpression":{"id":3262,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"13247:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3264,"nodeType":"ExpressionStatement","src":"13245:3:18"},"nodeType":"ForStatement","src":"13203:494:18"},{"expression":{"components":[{"hexValue":"74727565","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3297,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"13720:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3211,"id":3299,"nodeType":"Return","src":"13706:21:18"}]},"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"12450:227:18","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3301,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:18","nodeType":"FunctionDefinition","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"input","nameLocation":"12746:5:18","nodeType":"VariableDeclaration","scope":3301,"src":"12732:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3200,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"begin","nameLocation":"12769:5:18","nodeType":"VariableDeclaration","scope":3301,"src":"12761:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"end","nameLocation":"12792:3:18","nodeType":"VariableDeclaration","scope":3301,"src":"12784:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:18"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"success","nameLocation":"12829:7:18","nodeType":"VariableDeclaration","scope":3301,"src":"12824:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3207,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3210,"mutability":"mutable","name":"value","nameLocation":"12846:5:18","nodeType":"VariableDeclaration","scope":3301,"src":"12838:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:18"},"scope":3715,"src":"12682:1052:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3319,"nodeType":"Block","src":"14032:67:18","statements":[{"expression":{"arguments":[{"id":3310,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"14062:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3314,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"14078:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3312,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:18","typeDescriptions":{}}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:18","memberName":"length","nodeType":"MemberAccess","src":"14072:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3309,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3320,3351],"referencedDeclaration":3351,"src":"14049:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3308,"id":3318,"nodeType":"Return","src":"14042:50:18"}]},"documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"13740:212:18","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3320,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:18","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"input","nameLocation":"13993:5:18","nodeType":"VariableDeclaration","scope":3320,"src":"13979:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3303,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:18"},"returnParameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3320,"src":"14023:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3306,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:18"},"scope":3715,"src":"13957:142:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3350,"nodeType":"Block","src":"14472:165:18","statements":[{"assignments":[3333,3335],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"success","nameLocation":"14488:7:18","nodeType":"VariableDeclaration","scope":3350,"src":"14483:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3332,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"value","nameLocation":"14505:5:18","nodeType":"VariableDeclaration","scope":3350,"src":"14497:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3334,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3341,"initialValue":{"arguments":[{"id":3337,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"14530:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3338,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"14537:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3339,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"14544:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3336,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3372,3476],"referencedDeclaration":3476,"src":"14514:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:18"},{"condition":{"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:18","subExpression":{"id":3342,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"14563:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3347,"nodeType":"IfStatement","src":"14558:50:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3344,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"14579:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3346,"nodeType":"RevertStatement","src":"14572:36:18"}},{"expression":{"id":3348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"14625:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3331,"id":3349,"nodeType":"Return","src":"14618:12:18"}]},"documentation":{"id":3321,"nodeType":"StructuredDocumentation","src":"14105:259:18","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3351,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:18","nodeType":"FunctionDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"input","nameLocation":"14405:5:18","nodeType":"VariableDeclaration","scope":3351,"src":"14391:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3322,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3325,"mutability":"mutable","name":"begin","nameLocation":"14420:5:18","nodeType":"VariableDeclaration","scope":3351,"src":"14412:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"end","nameLocation":"14435:3:18","nodeType":"VariableDeclaration","scope":3351,"src":"14427:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:18"},"returnParameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3351,"src":"14463:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3329,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:18"},"scope":3715,"src":"14369:268:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3371,"nodeType":"Block","src":"14944:70:18","statements":[{"expression":{"arguments":[{"id":3362,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"14977:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3366,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"14993:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3364,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:18","typeDescriptions":{}}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:18","memberName":"length","nodeType":"MemberAccess","src":"14987:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3361,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3372,3476],"referencedDeclaration":3476,"src":"14961:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3360,"id":3370,"nodeType":"Return","src":"14954:53:18"}]},"documentation":{"id":3352,"nodeType":"StructuredDocumentation","src":"14643:198:18","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3372,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:18","nodeType":"FunctionDefinition","parameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"input","nameLocation":"14885:5:18","nodeType":"VariableDeclaration","scope":3372,"src":"14871:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3353,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:18"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"success","nameLocation":"14920:7:18","nodeType":"VariableDeclaration","scope":3372,"src":"14915:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3356,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3359,"mutability":"mutable","name":"value","nameLocation":"14937:5:18","nodeType":"VariableDeclaration","scope":3372,"src":"14929:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3358,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:18"},"scope":3715,"src":"14846:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3475,"nodeType":"Block","src":"15407:733:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3386,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15421:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3389,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"15433:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3387,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:18","typeDescriptions":{}}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:18","memberName":"length","nodeType":"MemberAccess","src":"15427:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3393,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"15450:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3394,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15458:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3404,"nodeType":"IfStatement","src":"15417:72:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3398,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:18","typeDescriptions":{}}},"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3385,"id":3403,"nodeType":"Return","src":"15463:26:18"}},{"assignments":[3406],"declarations":[{"constant":false,"id":3406,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:18","nodeType":"VariableDeclaration","scope":3475,"src":"15500:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3405,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3429,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15518:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3408,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"15524:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3418,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"15574:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3416,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:18","typeDescriptions":{}}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3420,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"15582:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3415,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"15545:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3413,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:18","typeDescriptions":{}}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3423,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:18","typeDescriptions":{}}},"id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:18"},{"assignments":[3431],"declarations":[{"constant":false,"id":3431,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:18","nodeType":"VariableDeclaration","scope":3475,"src":"15686:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3439,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3433,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"15716:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"15716:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3440,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15803:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3441,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"15809:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3443,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"15818:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3473,"nodeType":"Block","src":"16083:51:18","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3467,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:18","typeDescriptions":{}}},"id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3385,"id":3472,"nodeType":"Return","src":"16097:26:18"}]},"id":3474,"nodeType":"IfStatement","src":"15799:335:18","trueBody":{"id":3465,"nodeType":"Block","src":"15834:243:18","statements":[{"assignments":[3446,3448],"declarations":[{"constant":false,"id":3446,"mutability":"mutable","name":"s","nameLocation":"15955:1:18","nodeType":"VariableDeclaration","scope":3465,"src":"15950:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3445,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"v","nameLocation":"15966:1:18","nodeType":"VariableDeclaration","scope":3465,"src":"15958:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3454,"initialValue":{"arguments":[{"id":3450,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"16003:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3451,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"16010:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3452,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"16017:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3449,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"15971:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:18"},{"expression":{"components":[{"id":3455,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"16043:1:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3460,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"16062:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3458,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:18","typeDescriptions":{}}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3456,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:18","typeDescriptions":{}}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3385,"id":3464,"nodeType":"Return","src":"16035:31:18"}]}}]},"documentation":{"id":3373,"nodeType":"StructuredDocumentation","src":"15020:226:18","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3476,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:18","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"input","nameLocation":"15299:5:18","nodeType":"VariableDeclaration","scope":3476,"src":"15285:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3374,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"begin","nameLocation":"15322:5:18","nodeType":"VariableDeclaration","scope":3476,"src":"15314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"end","nameLocation":"15345:3:18","nodeType":"VariableDeclaration","scope":3476,"src":"15337:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:18"},"returnParameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"success","nameLocation":"15383:7:18","nodeType":"VariableDeclaration","scope":3476,"src":"15378:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3381,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3384,"mutability":"mutable","name":"value","nameLocation":"15400:5:18","nodeType":"VariableDeclaration","scope":3476,"src":"15392:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3383,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:18"},"scope":3715,"src":"15251:889:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3535,"nodeType":"Block","src":"16209:461:18","statements":[{"assignments":[3484],"declarations":[{"constant":false,"id":3484,"mutability":"mutable","name":"value","nameLocation":"16225:5:18","nodeType":"VariableDeclaration","scope":3535,"src":"16219:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3483,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3489,"initialValue":{"arguments":[{"id":3487,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"16239:3:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3485,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:18","typeDescriptions":{}}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:18"},{"id":3532,"nodeType":"UncheckedBlock","src":"16403:238:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"16431:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:18","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"16445:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:18","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"16491:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"16505:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:18","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"16552:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"16566:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:18","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3524,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3523,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:18","memberName":"max","nodeType":"MemberAccess","src":"16615:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3482,"id":3528,"nodeType":"Return","src":"16608:22:18"},"id":3529,"nodeType":"IfStatement","src":"16548:82:18","trueBody":{"expression":{"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"16578:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:18","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3522,"nodeType":"ExpressionStatement","src":"16578:11:18"}},"id":3530,"nodeType":"IfStatement","src":"16487:143:18","trueBody":{"expression":{"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"16518:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:18","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3511,"nodeType":"ExpressionStatement","src":"16518:11:18"}},"id":3531,"nodeType":"IfStatement","src":"16427:203:18","trueBody":{"expression":{"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"16457:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3500,"nodeType":"ExpressionStatement","src":"16457:11:18"}}]},{"expression":{"id":3533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"16658:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3482,"id":3534,"nodeType":"Return","src":"16651:12:18"}]},"id":3536,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:18","nodeType":"FunctionDefinition","parameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"chr","nameLocation":"16175:3:18","nodeType":"VariableDeclaration","scope":3536,"src":"16168:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3477,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:18"},"returnParameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3536,"src":"16202:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3480,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:18"},"scope":3715,"src":"16146:524:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3701,"nodeType":"Block","src":"17336:1331:18","statements":[{"assignments":[3545],"declarations":[{"constant":false,"id":3545,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:18","nodeType":"VariableDeclaration","scope":3701,"src":"17346:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3544,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3550,"initialValue":{"arguments":[{"id":3548,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"17374:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3546,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:18","typeDescriptions":{}}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:18"},{"assignments":[3552],"declarations":[{"constant":false,"id":3552,"mutability":"mutable","name":"output","nameLocation":"17403:6:18","nodeType":"VariableDeclaration","scope":3701,"src":"17390:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3551,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3560,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3556,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"17426:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:18","memberName":"length","nodeType":"MemberAccess","src":"17426:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3553,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:18"},{"assignments":[3562],"declarations":[{"constant":false,"id":3562,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:18","nodeType":"VariableDeclaration","scope":3701,"src":"17473:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3564,"initialValue":{"hexValue":"30","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:18"},{"body":{"id":3693,"nodeType":"Block","src":"17548:854:18","statements":[{"assignments":[3576],"declarations":[{"constant":false,"id":3576,"mutability":"mutable","name":"char","nameLocation":"17569:4:18","nodeType":"VariableDeclaration","scope":3693,"src":"17562:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3575,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3584,"initialValue":{"arguments":[{"arguments":[{"id":3580,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"17606:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"17614:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3579,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"17583:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3577,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:18","typeDescriptions":{}}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:18"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3585,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"17637:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3589,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"17672:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3587,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:18","typeDescriptions":{}}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3691,"nodeType":"Block","src":"18330:62:18","statements":[{"expression":{"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3684,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"18348:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3687,"indexExpression":{"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:18","subExpression":{"id":3685,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"18355:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3688,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"18373:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3690,"nodeType":"ExpressionStatement","src":"18348:29:18"}]},"id":3692,"nodeType":"IfStatement","src":"17631:761:18","trueBody":{"id":3683,"nodeType":"Block","src":"17687:637:18","statements":[{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3598,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"17705:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3601,"indexExpression":{"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:18","subExpression":{"id":3599,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"17712:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3604,"nodeType":"ExpressionStatement","src":"17705:29:18"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3605,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"17756:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3615,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"17825:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3625,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"17894:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"17963:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"18032:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:18","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3655,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"18101:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:18","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"18171:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3676,"nodeType":"IfStatement","src":"18167:143:18","trueBody":{"id":3675,"nodeType":"Block","src":"18185:125:18","statements":[{"expression":{"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3668,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"18263:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3671,"indexExpression":{"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:18","subExpression":{"id":3669,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"18270:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3674,"nodeType":"ExpressionStatement","src":"18263:28:18"}]}},"id":3677,"nodeType":"IfStatement","src":"18097:213:18","trueBody":{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3658,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"18115:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3661,"indexExpression":{"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:18","subExpression":{"id":3659,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"18122:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3664,"nodeType":"ExpressionStatement","src":"18115:29:18"}},"id":3678,"nodeType":"IfStatement","src":"18028:282:18","trueBody":{"expression":{"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3648,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"18046:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3651,"indexExpression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:18","subExpression":{"id":3649,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"18053:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3654,"nodeType":"ExpressionStatement","src":"18046:28:18"}},"id":3679,"nodeType":"IfStatement","src":"17959:351:18","trueBody":{"expression":{"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3638,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"17977:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3641,"indexExpression":{"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:18","subExpression":{"id":3639,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"17984:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3644,"nodeType":"ExpressionStatement","src":"17977:28:18"}},"id":3680,"nodeType":"IfStatement","src":"17890:420:18","trueBody":{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3628,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"17908:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3631,"indexExpression":{"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:18","subExpression":{"id":3629,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"17915:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3634,"nodeType":"ExpressionStatement","src":"17908:28:18"}},"id":3681,"nodeType":"IfStatement","src":"17821:489:18","trueBody":{"expression":{"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3618,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"17839:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3621,"indexExpression":{"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:18","subExpression":{"id":3619,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"17846:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3624,"nodeType":"ExpressionStatement","src":"17839:28:18"}},"id":3682,"nodeType":"IfStatement","src":"17752:558:18","trueBody":{"expression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3608,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"17770:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3611,"indexExpression":{"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:18","subExpression":{"id":3609,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"17777:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3614,"nodeType":"ExpressionStatement","src":"17770:28:18"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3568,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"17524:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3569,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"17528:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:18","memberName":"length","nodeType":"MemberAccess","src":"17528:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3694,"initializationExpression":{"assignments":[3566],"declarations":[{"constant":false,"id":3566,"mutability":"mutable","name":"i","nameLocation":"17521:1:18","nodeType":"VariableDeclaration","scope":3694,"src":"17513:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3567,"nodeType":"VariableDeclarationStatement","src":"17513:9:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:18","subExpression":{"id":3572,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"17545:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3574,"nodeType":"ExpressionStatement","src":"17543:3:18"},"nodeType":"ForStatement","src":"17508:894:18"},{"AST":{"nativeSrc":"18500:129:18","nodeType":"YulBlock","src":"18500:129:18","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:18","nodeType":"YulIdentifier","src":"18521:6:18"},{"name":"outputLength","nativeSrc":"18529:12:18","nodeType":"YulIdentifier","src":"18529:12:18"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:18","nodeType":"YulIdentifier","src":"18514:6:18"},"nativeSrc":"18514:28:18","nodeType":"YulFunctionCall","src":"18514:28:18"},"nativeSrc":"18514:28:18","nodeType":"YulExpressionStatement","src":"18514:28:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:18","nodeType":"YulLiteral","src":"18562:4:18","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:18","nodeType":"YulIdentifier","src":"18572:6:18"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:18","nodeType":"YulLiteral","src":"18584:1:18","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:18","nodeType":"YulLiteral","src":"18591:1:18","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:18","nodeType":"YulIdentifier","src":"18598:12:18"},{"kind":"number","nativeSrc":"18612:2:18","nodeType":"YulLiteral","src":"18612:2:18","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:18","nodeType":"YulIdentifier","src":"18594:3:18"},"nativeSrc":"18594:21:18","nodeType":"YulFunctionCall","src":"18594:21:18"}],"functionName":{"name":"shr","nativeSrc":"18587:3:18","nodeType":"YulIdentifier","src":"18587:3:18"},"nativeSrc":"18587:29:18","nodeType":"YulFunctionCall","src":"18587:29:18"}],"functionName":{"name":"shl","nativeSrc":"18580:3:18","nodeType":"YulIdentifier","src":"18580:3:18"},"nativeSrc":"18580:37:18","nodeType":"YulFunctionCall","src":"18580:37:18"}],"functionName":{"name":"add","nativeSrc":"18568:3:18","nodeType":"YulIdentifier","src":"18568:3:18"},"nativeSrc":"18568:50:18","nodeType":"YulFunctionCall","src":"18568:50:18"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:18","nodeType":"YulIdentifier","src":"18555:6:18"},"nativeSrc":"18555:64:18","nodeType":"YulFunctionCall","src":"18555:64:18"},"nativeSrc":"18555:64:18","nodeType":"YulExpressionStatement","src":"18555:64:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3552,"isOffset":false,"isSlot":false,"src":"18521:6:18","valueSize":1},{"declaration":3552,"isOffset":false,"isSlot":false,"src":"18572:6:18","valueSize":1},{"declaration":3562,"isOffset":false,"isSlot":false,"src":"18529:12:18","valueSize":1},{"declaration":3562,"isOffset":false,"isSlot":false,"src":"18598:12:18","valueSize":1}],"flags":["memory-safe"],"id":3695,"nodeType":"InlineAssembly","src":"18475:154:18"},{"expression":{"arguments":[{"id":3698,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"18653:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3696,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:18","typeDescriptions":{}}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3543,"id":3700,"nodeType":"Return","src":"18639:21:18"}]},"documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"16676:576:18","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3702,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:18","nodeType":"FunctionDefinition","parameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"input","nameLocation":"17291:5:18","nodeType":"VariableDeclaration","scope":3702,"src":"17277:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3538,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:18"},"returnParameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3702,"src":"17321:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3541,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:18"},"scope":3715,"src":"17257:1410:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3713,"nodeType":"Block","src":"19052:225:18","statements":[{"AST":{"nativeSrc":"19201:70:18","nodeType":"YulBlock","src":"19201:70:18","statements":[{"nativeSrc":"19215:46:18","nodeType":"YulAssignment","src":"19215:46:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:18","nodeType":"YulIdentifier","src":"19238:6:18"},{"kind":"number","nativeSrc":"19246:4:18","nodeType":"YulLiteral","src":"19246:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:18","nodeType":"YulIdentifier","src":"19234:3:18"},"nativeSrc":"19234:17:18","nodeType":"YulFunctionCall","src":"19234:17:18"},{"name":"offset","nativeSrc":"19253:6:18","nodeType":"YulIdentifier","src":"19253:6:18"}],"functionName":{"name":"add","nativeSrc":"19230:3:18","nodeType":"YulIdentifier","src":"19230:3:18"},"nativeSrc":"19230:30:18","nodeType":"YulFunctionCall","src":"19230:30:18"}],"functionName":{"name":"mload","nativeSrc":"19224:5:18","nodeType":"YulIdentifier","src":"19224:5:18"},"nativeSrc":"19224:37:18","nodeType":"YulFunctionCall","src":"19224:37:18"},"variableNames":[{"name":"value","nativeSrc":"19215:5:18","nodeType":"YulIdentifier","src":"19215:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3705,"isOffset":false,"isSlot":false,"src":"19238:6:18","valueSize":1},{"declaration":3707,"isOffset":false,"isSlot":false,"src":"19253:6:18","valueSize":1},{"declaration":3710,"isOffset":false,"isSlot":false,"src":"19215:5:18","valueSize":1}],"flags":["memory-safe"],"id":3712,"nodeType":"InlineAssembly","src":"19176:95:18"}]},"documentation":{"id":3703,"nodeType":"StructuredDocumentation","src":"18673:268:18","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3714,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:18","nodeType":"FunctionDefinition","parameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:18","nodeType":"VariableDeclaration","scope":3714,"src":"18978:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3704,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3707,"mutability":"mutable","name":"offset","nameLocation":"19007:6:18","nodeType":"VariableDeclaration","scope":3714,"src":"18999:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:18"},"returnParameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"value","nameLocation":"19045:5:18","nodeType":"VariableDeclaration","scope":3714,"src":"19037:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:18"},"scope":3715,"src":"18946:331:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3716,"src":"297:18982:18","usedErrors":[2373,2376,2379],"usedEvents":[]}],"src":"101:19179:18"},"id":18},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3739],"IERC165":[3751]},"id":3740,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3717,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3740,"sourceUnit":3752,"src":"140:38:19","symbolAliases":[{"foreign":{"id":3718,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"148:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3721,"name":"IERC165","nameLocations":["688:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3751,"src":"688:7:19"},"id":3722,"nodeType":"InheritanceSpecifier","src":"688:7:19"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3720,"nodeType":"StructuredDocumentation","src":"180:479:19","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3739,"linearizedBaseContracts":[3739,3751],"name":"ERC165","nameLocation":"678:6:19","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3750],"body":{"id":3737,"nodeType":"Block","src":"812:64:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"829:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3732,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"849:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3751_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3751_$","typeString":"type(contract IERC165)"}],"id":3731,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3751","typeString":"type(contract IERC165)"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:19","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3729,"id":3736,"nodeType":"Return","src":"822:47:19"}]},"documentation":{"id":3723,"nodeType":"StructuredDocumentation","src":"702:23:19","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":3738,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:19","nodeType":"FunctionDefinition","parameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:19","nodeType":"VariableDeclaration","scope":3738,"src":"757:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3724,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:19"},"returnParameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3738,"src":"806:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3727,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:19"},"scope":3739,"src":"730:146:19","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3740,"src":"660:218:19","usedErrors":[],"usedEvents":[]}],"src":"114:765:19"},"id":19},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3751]},"id":3752,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3741,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"142:280:20","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3751,"linearizedBaseContracts":[3751],"name":"IERC165","nameLocation":"433:7:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3743,"nodeType":"StructuredDocumentation","src":"447:340:20","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3750,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:20","nodeType":"FunctionDefinition","parameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:20","nodeType":"VariableDeclaration","scope":3750,"src":"819:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3744,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:20"},"returnParameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3750,"src":"862:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3747,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:20"},"scope":3751,"src":"792:76:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3752,"src":"423:447:20","usedErrors":[],"usedEvents":[]}],"src":"115:756:20"},"id":20},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5372],"Panic":[2205],"SafeCast":[7137]},"id":5373,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3753,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3755,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5373,"sourceUnit":2206,"src":"129:35:21","symbolAliases":[{"foreign":{"id":3754,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"137:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3757,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5373,"sourceUnit":7138,"src":"165:40:21","symbolAliases":[{"foreign":{"id":3756,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"173:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3758,"nodeType":"StructuredDocumentation","src":"207:73:21","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5372,"linearizedBaseContracts":[5372],"name":"Math","nameLocation":"289:4:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3763,"members":[{"id":3759,"name":"Floor","nameLocation":"324:5:21","nodeType":"EnumValue","src":"324:5:21"},{"id":3760,"name":"Ceil","nameLocation":"367:4:21","nodeType":"EnumValue","src":"367:4:21"},{"id":3761,"name":"Trunc","nameLocation":"409:5:21","nodeType":"EnumValue","src":"409:5:21"},{"id":3762,"name":"Expand","nameLocation":"439:6:21","nodeType":"EnumValue","src":"439:6:21"}],"name":"Rounding","nameLocation":"305:8:21","nodeType":"EnumDefinition","src":"300:169:21"},{"body":{"id":3776,"nodeType":"Block","src":"731:112:21","statements":[{"AST":{"nativeSrc":"766:71:21","nodeType":"YulBlock","src":"766:71:21","statements":[{"nativeSrc":"780:16:21","nodeType":"YulAssignment","src":"780:16:21","value":{"arguments":[{"name":"a","nativeSrc":"791:1:21","nodeType":"YulIdentifier","src":"791:1:21"},{"name":"b","nativeSrc":"794:1:21","nodeType":"YulIdentifier","src":"794:1:21"}],"functionName":{"name":"add","nativeSrc":"787:3:21","nodeType":"YulIdentifier","src":"787:3:21"},"nativeSrc":"787:9:21","nodeType":"YulFunctionCall","src":"787:9:21"},"variableNames":[{"name":"low","nativeSrc":"780:3:21","nodeType":"YulIdentifier","src":"780:3:21"}]},{"nativeSrc":"809:18:21","nodeType":"YulAssignment","src":"809:18:21","value":{"arguments":[{"name":"low","nativeSrc":"820:3:21","nodeType":"YulIdentifier","src":"820:3:21"},{"name":"a","nativeSrc":"825:1:21","nodeType":"YulIdentifier","src":"825:1:21"}],"functionName":{"name":"lt","nativeSrc":"817:2:21","nodeType":"YulIdentifier","src":"817:2:21"},"nativeSrc":"817:10:21","nodeType":"YulFunctionCall","src":"817:10:21"},"variableNames":[{"name":"high","nativeSrc":"809:4:21","nodeType":"YulIdentifier","src":"809:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3766,"isOffset":false,"isSlot":false,"src":"791:1:21","valueSize":1},{"declaration":3766,"isOffset":false,"isSlot":false,"src":"825:1:21","valueSize":1},{"declaration":3768,"isOffset":false,"isSlot":false,"src":"794:1:21","valueSize":1},{"declaration":3771,"isOffset":false,"isSlot":false,"src":"809:4:21","valueSize":1},{"declaration":3773,"isOffset":false,"isSlot":false,"src":"780:3:21","valueSize":1},{"declaration":3773,"isOffset":false,"isSlot":false,"src":"820:3:21","valueSize":1}],"flags":["memory-safe"],"id":3775,"nodeType":"InlineAssembly","src":"741:96:21"}]},"documentation":{"id":3764,"nodeType":"StructuredDocumentation","src":"475:163:21","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3777,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:21","nodeType":"FunctionDefinition","parameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"a","nameLocation":"667:1:21","nodeType":"VariableDeclaration","scope":3777,"src":"659:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3768,"mutability":"mutable","name":"b","nameLocation":"678:1:21","nodeType":"VariableDeclaration","scope":3777,"src":"670:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:21"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"high","nameLocation":"712:4:21","nodeType":"VariableDeclaration","scope":3777,"src":"704:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3773,"mutability":"mutable","name":"low","nameLocation":"726:3:21","nodeType":"VariableDeclaration","scope":3777,"src":"718:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:21"},"scope":5372,"src":"643:200:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3790,"nodeType":"Block","src":"1115:462:21","statements":[{"AST":{"nativeSrc":"1437:134:21","nodeType":"YulBlock","src":"1437:134:21","statements":[{"nativeSrc":"1451:30:21","nodeType":"YulVariableDeclaration","src":"1451:30:21","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:21","nodeType":"YulIdentifier","src":"1468:1:21"},{"name":"b","nativeSrc":"1471:1:21","nodeType":"YulIdentifier","src":"1471:1:21"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:21","nodeType":"YulLiteral","src":"1478:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:21","nodeType":"YulIdentifier","src":"1474:3:21"},"nativeSrc":"1474:6:21","nodeType":"YulFunctionCall","src":"1474:6:21"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:21","nodeType":"YulIdentifier","src":"1461:6:21"},"nativeSrc":"1461:20:21","nodeType":"YulFunctionCall","src":"1461:20:21"},"variables":[{"name":"mm","nativeSrc":"1455:2:21","nodeType":"YulTypedName","src":"1455:2:21","type":""}]},{"nativeSrc":"1494:16:21","nodeType":"YulAssignment","src":"1494:16:21","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:21","nodeType":"YulIdentifier","src":"1505:1:21"},{"name":"b","nativeSrc":"1508:1:21","nodeType":"YulIdentifier","src":"1508:1:21"}],"functionName":{"name":"mul","nativeSrc":"1501:3:21","nodeType":"YulIdentifier","src":"1501:3:21"},"nativeSrc":"1501:9:21","nodeType":"YulFunctionCall","src":"1501:9:21"},"variableNames":[{"name":"low","nativeSrc":"1494:3:21","nodeType":"YulIdentifier","src":"1494:3:21"}]},{"nativeSrc":"1523:38:21","nodeType":"YulAssignment","src":"1523:38:21","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:21","nodeType":"YulIdentifier","src":"1539:2:21"},{"name":"low","nativeSrc":"1543:3:21","nodeType":"YulIdentifier","src":"1543:3:21"}],"functionName":{"name":"sub","nativeSrc":"1535:3:21","nodeType":"YulIdentifier","src":"1535:3:21"},"nativeSrc":"1535:12:21","nodeType":"YulFunctionCall","src":"1535:12:21"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:21","nodeType":"YulIdentifier","src":"1552:2:21"},{"name":"low","nativeSrc":"1556:3:21","nodeType":"YulIdentifier","src":"1556:3:21"}],"functionName":{"name":"lt","nativeSrc":"1549:2:21","nodeType":"YulIdentifier","src":"1549:2:21"},"nativeSrc":"1549:11:21","nodeType":"YulFunctionCall","src":"1549:11:21"}],"functionName":{"name":"sub","nativeSrc":"1531:3:21","nodeType":"YulIdentifier","src":"1531:3:21"},"nativeSrc":"1531:30:21","nodeType":"YulFunctionCall","src":"1531:30:21"},"variableNames":[{"name":"high","nativeSrc":"1523:4:21","nodeType":"YulIdentifier","src":"1523:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3780,"isOffset":false,"isSlot":false,"src":"1468:1:21","valueSize":1},{"declaration":3780,"isOffset":false,"isSlot":false,"src":"1505:1:21","valueSize":1},{"declaration":3782,"isOffset":false,"isSlot":false,"src":"1471:1:21","valueSize":1},{"declaration":3782,"isOffset":false,"isSlot":false,"src":"1508:1:21","valueSize":1},{"declaration":3785,"isOffset":false,"isSlot":false,"src":"1523:4:21","valueSize":1},{"declaration":3787,"isOffset":false,"isSlot":false,"src":"1494:3:21","valueSize":1},{"declaration":3787,"isOffset":false,"isSlot":false,"src":"1543:3:21","valueSize":1},{"declaration":3787,"isOffset":false,"isSlot":false,"src":"1556:3:21","valueSize":1}],"flags":["memory-safe"],"id":3789,"nodeType":"InlineAssembly","src":"1412:159:21"}]},"documentation":{"id":3778,"nodeType":"StructuredDocumentation","src":"849:173:21","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3791,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:21","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"a","nameLocation":"1051:1:21","nodeType":"VariableDeclaration","scope":3791,"src":"1043:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"b","nameLocation":"1062:1:21","nodeType":"VariableDeclaration","scope":3791,"src":"1054:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:21"},"returnParameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"high","nameLocation":"1096:4:21","nodeType":"VariableDeclaration","scope":3791,"src":"1088:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"low","nameLocation":"1110:3:21","nodeType":"VariableDeclaration","scope":3791,"src":"1102:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:21"},"scope":5372,"src":"1027:550:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3825,"nodeType":"Block","src":"1784:149:21","statements":[{"id":3824,"nodeType":"UncheckedBlock","src":"1794:133:21","statements":[{"assignments":[3804],"declarations":[{"constant":false,"id":3804,"mutability":"mutable","name":"c","nameLocation":"1826:1:21","nodeType":"VariableDeclaration","scope":3824,"src":"1818:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3808,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3805,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"1830:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3806,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"1834:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:21"},{"expression":{"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3809,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"1849:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3810,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"1859:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3811,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"1864:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3814,"nodeType":"ExpressionStatement","src":"1849:16:21"},{"expression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"1879:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3816,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"1888:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3819,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"1908:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3817,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"1892:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"1892:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3823,"nodeType":"ExpressionStatement","src":"1879:37:21"}]}]},"documentation":{"id":3792,"nodeType":"StructuredDocumentation","src":"1583:105:21","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3826,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:21","nodeType":"FunctionDefinition","parameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"a","nameLocation":"1717:1:21","nodeType":"VariableDeclaration","scope":3826,"src":"1709:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3796,"mutability":"mutable","name":"b","nameLocation":"1728:1:21","nodeType":"VariableDeclaration","scope":3826,"src":"1720:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:21"},"returnParameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"success","nameLocation":"1759:7:21","nodeType":"VariableDeclaration","scope":3826,"src":"1754:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3798,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"result","nameLocation":"1776:6:21","nodeType":"VariableDeclaration","scope":3826,"src":"1768:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:21"},"scope":5372,"src":"1693:240:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3860,"nodeType":"Block","src":"2143:149:21","statements":[{"id":3859,"nodeType":"UncheckedBlock","src":"2153:133:21","statements":[{"assignments":[3839],"declarations":[{"constant":false,"id":3839,"mutability":"mutable","name":"c","nameLocation":"2185:1:21","nodeType":"VariableDeclaration","scope":3859,"src":"2177:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3843,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3840,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"2189:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3841,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"2193:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:21"},{"expression":{"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3844,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"2208:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3845,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"2218:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"2223:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3849,"nodeType":"ExpressionStatement","src":"2208:16:21"},{"expression":{"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"2238:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3851,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"2247:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3854,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"2267:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3852,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"2251:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"2251:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3858,"nodeType":"ExpressionStatement","src":"2238:37:21"}]}]},"documentation":{"id":3827,"nodeType":"StructuredDocumentation","src":"1939:108:21","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3861,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:21","nodeType":"FunctionDefinition","parameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"a","nameLocation":"2076:1:21","nodeType":"VariableDeclaration","scope":3861,"src":"2068:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"b","nameLocation":"2087:1:21","nodeType":"VariableDeclaration","scope":3861,"src":"2079:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:21"},"returnParameters":{"id":3837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"success","nameLocation":"2118:7:21","nodeType":"VariableDeclaration","scope":3861,"src":"2113:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3833,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3836,"mutability":"mutable","name":"result","nameLocation":"2135:6:21","nodeType":"VariableDeclaration","scope":3861,"src":"2127:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:21"},"scope":5372,"src":"2052:240:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3890,"nodeType":"Block","src":"2505:391:21","statements":[{"id":3889,"nodeType":"UncheckedBlock","src":"2515:375:21","statements":[{"assignments":[3874],"declarations":[{"constant":false,"id":3874,"mutability":"mutable","name":"c","nameLocation":"2547:1:21","nodeType":"VariableDeclaration","scope":3889,"src":"2539:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3878,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3875,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"2551:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3876,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"2555:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:21"},{"AST":{"nativeSrc":"2595:188:21","nodeType":"YulBlock","src":"2595:188:21","statements":[{"nativeSrc":"2727:42:21","nodeType":"YulAssignment","src":"2727:42:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:21","nodeType":"YulIdentifier","src":"2748:1:21"},{"name":"a","nativeSrc":"2751:1:21","nodeType":"YulIdentifier","src":"2751:1:21"}],"functionName":{"name":"div","nativeSrc":"2744:3:21","nodeType":"YulIdentifier","src":"2744:3:21"},"nativeSrc":"2744:9:21","nodeType":"YulFunctionCall","src":"2744:9:21"},{"name":"b","nativeSrc":"2755:1:21","nodeType":"YulIdentifier","src":"2755:1:21"}],"functionName":{"name":"eq","nativeSrc":"2741:2:21","nodeType":"YulIdentifier","src":"2741:2:21"},"nativeSrc":"2741:16:21","nodeType":"YulFunctionCall","src":"2741:16:21"},{"arguments":[{"name":"a","nativeSrc":"2766:1:21","nodeType":"YulIdentifier","src":"2766:1:21"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:21","nodeType":"YulIdentifier","src":"2759:6:21"},"nativeSrc":"2759:9:21","nodeType":"YulFunctionCall","src":"2759:9:21"}],"functionName":{"name":"or","nativeSrc":"2738:2:21","nodeType":"YulIdentifier","src":"2738:2:21"},"nativeSrc":"2738:31:21","nodeType":"YulFunctionCall","src":"2738:31:21"},"variableNames":[{"name":"success","nativeSrc":"2727:7:21","nodeType":"YulIdentifier","src":"2727:7:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3864,"isOffset":false,"isSlot":false,"src":"2751:1:21","valueSize":1},{"declaration":3864,"isOffset":false,"isSlot":false,"src":"2766:1:21","valueSize":1},{"declaration":3866,"isOffset":false,"isSlot":false,"src":"2755:1:21","valueSize":1},{"declaration":3874,"isOffset":false,"isSlot":false,"src":"2748:1:21","valueSize":1},{"declaration":3869,"isOffset":false,"isSlot":false,"src":"2727:7:21","valueSize":1}],"flags":["memory-safe"],"id":3879,"nodeType":"InlineAssembly","src":"2570:213:21"},{"expression":{"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"2842:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3881,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"2851:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3884,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"2871:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3882,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"2855:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"2855:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3888,"nodeType":"ExpressionStatement","src":"2842:37:21"}]}]},"documentation":{"id":3862,"nodeType":"StructuredDocumentation","src":"2298:111:21","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3891,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:21","nodeType":"FunctionDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"a","nameLocation":"2438:1:21","nodeType":"VariableDeclaration","scope":3891,"src":"2430:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"b","nameLocation":"2449:1:21","nodeType":"VariableDeclaration","scope":3891,"src":"2441:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:21"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"success","nameLocation":"2480:7:21","nodeType":"VariableDeclaration","scope":3891,"src":"2475:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3868,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3871,"mutability":"mutable","name":"result","nameLocation":"2497:6:21","nodeType":"VariableDeclaration","scope":3891,"src":"2489:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:21"},"scope":5372,"src":"2414:482:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3911,"nodeType":"Block","src":"3111:231:21","statements":[{"id":3910,"nodeType":"UncheckedBlock","src":"3121:215:21","statements":[{"expression":{"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3903,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"3145:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"3155:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3908,"nodeType":"ExpressionStatement","src":"3145:15:21"},{"AST":{"nativeSrc":"3199:127:21","nodeType":"YulBlock","src":"3199:127:21","statements":[{"nativeSrc":"3293:19:21","nodeType":"YulAssignment","src":"3293:19:21","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:21","nodeType":"YulIdentifier","src":"3307:1:21"},{"name":"b","nativeSrc":"3310:1:21","nodeType":"YulIdentifier","src":"3310:1:21"}],"functionName":{"name":"div","nativeSrc":"3303:3:21","nodeType":"YulIdentifier","src":"3303:3:21"},"nativeSrc":"3303:9:21","nodeType":"YulFunctionCall","src":"3303:9:21"},"variableNames":[{"name":"result","nativeSrc":"3293:6:21","nodeType":"YulIdentifier","src":"3293:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3894,"isOffset":false,"isSlot":false,"src":"3307:1:21","valueSize":1},{"declaration":3896,"isOffset":false,"isSlot":false,"src":"3310:1:21","valueSize":1},{"declaration":3901,"isOffset":false,"isSlot":false,"src":"3293:6:21","valueSize":1}],"flags":["memory-safe"],"id":3909,"nodeType":"InlineAssembly","src":"3174:152:21"}]}]},"documentation":{"id":3892,"nodeType":"StructuredDocumentation","src":"2902:113:21","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3912,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:21","nodeType":"FunctionDefinition","parameters":{"id":3897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"a","nameLocation":"3044:1:21","nodeType":"VariableDeclaration","scope":3912,"src":"3036:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3896,"mutability":"mutable","name":"b","nameLocation":"3055:1:21","nodeType":"VariableDeclaration","scope":3912,"src":"3047:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:21"},"returnParameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"success","nameLocation":"3086:7:21","nodeType":"VariableDeclaration","scope":3912,"src":"3081:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3898,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"result","nameLocation":"3103:6:21","nodeType":"VariableDeclaration","scope":3912,"src":"3095:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:21"},"scope":5372,"src":"3020:322:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3932,"nodeType":"Block","src":"3567:231:21","statements":[{"id":3931,"nodeType":"UncheckedBlock","src":"3577:215:21","statements":[{"expression":{"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3924,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"3601:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"3611:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3929,"nodeType":"ExpressionStatement","src":"3601:15:21"},{"AST":{"nativeSrc":"3655:127:21","nodeType":"YulBlock","src":"3655:127:21","statements":[{"nativeSrc":"3749:19:21","nodeType":"YulAssignment","src":"3749:19:21","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:21","nodeType":"YulIdentifier","src":"3763:1:21"},{"name":"b","nativeSrc":"3766:1:21","nodeType":"YulIdentifier","src":"3766:1:21"}],"functionName":{"name":"mod","nativeSrc":"3759:3:21","nodeType":"YulIdentifier","src":"3759:3:21"},"nativeSrc":"3759:9:21","nodeType":"YulFunctionCall","src":"3759:9:21"},"variableNames":[{"name":"result","nativeSrc":"3749:6:21","nodeType":"YulIdentifier","src":"3749:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3915,"isOffset":false,"isSlot":false,"src":"3763:1:21","valueSize":1},{"declaration":3917,"isOffset":false,"isSlot":false,"src":"3766:1:21","valueSize":1},{"declaration":3922,"isOffset":false,"isSlot":false,"src":"3749:6:21","valueSize":1}],"flags":["memory-safe"],"id":3930,"nodeType":"InlineAssembly","src":"3630:152:21"}]}]},"documentation":{"id":3913,"nodeType":"StructuredDocumentation","src":"3348:123:21","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3933,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:21","nodeType":"FunctionDefinition","parameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"a","nameLocation":"3500:1:21","nodeType":"VariableDeclaration","scope":3933,"src":"3492:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"b","nameLocation":"3511:1:21","nodeType":"VariableDeclaration","scope":3933,"src":"3503:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:21"},"returnParameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3920,"mutability":"mutable","name":"success","nameLocation":"3542:7:21","nodeType":"VariableDeclaration","scope":3933,"src":"3537:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3919,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3922,"mutability":"mutable","name":"result","nameLocation":"3559:6:21","nodeType":"VariableDeclaration","scope":3933,"src":"3551:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:21"},"scope":5372,"src":"3476:322:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3962,"nodeType":"Block","src":"3989:122:21","statements":[{"assignments":[3944,3946],"declarations":[{"constant":false,"id":3944,"mutability":"mutable","name":"success","nameLocation":"4005:7:21","nodeType":"VariableDeclaration","scope":3962,"src":"4000:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3943,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3946,"mutability":"mutable","name":"result","nameLocation":"4022:6:21","nodeType":"VariableDeclaration","scope":3962,"src":"4014:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3951,"initialValue":{"arguments":[{"id":3948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"4039:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3949,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"4042:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3947,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"4032:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:21"},{"expression":{"arguments":[{"id":3953,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"4069:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"4078:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3955,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:21","memberName":"max","nodeType":"MemberAccess","src":"4086:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3952,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"4061:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3942,"id":3961,"nodeType":"Return","src":"4054:50:21"}]},"documentation":{"id":3934,"nodeType":"StructuredDocumentation","src":"3804:103:21","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3963,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:21","nodeType":"FunctionDefinition","parameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"a","nameLocation":"3943:1:21","nodeType":"VariableDeclaration","scope":3963,"src":"3935:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3938,"mutability":"mutable","name":"b","nameLocation":"3954:1:21","nodeType":"VariableDeclaration","scope":3963,"src":"3946:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:21"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3963,"src":"3980:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:21"},"scope":5372,"src":"3912:199:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3982,"nodeType":"Block","src":"4294:73:21","statements":[{"assignments":[null,3974],"declarations":[null,{"constant":false,"id":3974,"mutability":"mutable","name":"result","nameLocation":"4315:6:21","nodeType":"VariableDeclaration","scope":3982,"src":"4307:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3979,"initialValue":{"arguments":[{"id":3976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"4332:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3977,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"4335:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3975,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"4325:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:21"},{"expression":{"id":3980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"4354:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3972,"id":3981,"nodeType":"Return","src":"4347:13:21"}]},"documentation":{"id":3964,"nodeType":"StructuredDocumentation","src":"4117:95:21","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3983,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:21","nodeType":"FunctionDefinition","parameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"a","nameLocation":"4248:1:21","nodeType":"VariableDeclaration","scope":3983,"src":"4240:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"b","nameLocation":"4259:1:21","nodeType":"VariableDeclaration","scope":3983,"src":"4251:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:21"},"returnParameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3983,"src":"4285:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:21"},"scope":5372,"src":"4217:150:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4012,"nodeType":"Block","src":"4564:122:21","statements":[{"assignments":[3994,3996],"declarations":[{"constant":false,"id":3994,"mutability":"mutable","name":"success","nameLocation":"4580:7:21","nodeType":"VariableDeclaration","scope":4012,"src":"4575:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3993,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3996,"mutability":"mutable","name":"result","nameLocation":"4597:6:21","nodeType":"VariableDeclaration","scope":4012,"src":"4589:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3995,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4001,"initialValue":{"arguments":[{"id":3998,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"4614:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3999,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"4617:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3997,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"4607:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:21"},{"expression":{"arguments":[{"id":4003,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"4644:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"4653:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4005,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:21","memberName":"max","nodeType":"MemberAccess","src":"4661:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4002,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"4636:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3992,"id":4011,"nodeType":"Return","src":"4629:50:21"}]},"documentation":{"id":3984,"nodeType":"StructuredDocumentation","src":"4373:109:21","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4013,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:21","nodeType":"FunctionDefinition","parameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"a","nameLocation":"4518:1:21","nodeType":"VariableDeclaration","scope":4013,"src":"4510:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3985,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3988,"mutability":"mutable","name":"b","nameLocation":"4529:1:21","nodeType":"VariableDeclaration","scope":4013,"src":"4521:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:21"},"returnParameters":{"id":3992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4013,"src":"4555:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:21"},"scope":5372,"src":"4487:199:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4039,"nodeType":"Block","src":"5158:207:21","statements":[{"id":4038,"nodeType":"UncheckedBlock","src":"5168:191:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"5306:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"5312:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"5316:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4032,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"5337:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4030,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"5321:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"5321:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4024,"id":4037,"nodeType":"Return","src":"5299:49:21"}]}]},"documentation":{"id":4014,"nodeType":"StructuredDocumentation","src":"4692:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4040,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:21","nodeType":"FunctionDefinition","parameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"condition","nameLocation":"5093:9:21","nodeType":"VariableDeclaration","scope":4040,"src":"5088:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4015,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4018,"mutability":"mutable","name":"a","nameLocation":"5112:1:21","nodeType":"VariableDeclaration","scope":4040,"src":"5104:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4020,"mutability":"mutable","name":"b","nameLocation":"5123:1:21","nodeType":"VariableDeclaration","scope":4040,"src":"5115:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:21"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4040,"src":"5149:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:21"},"scope":5372,"src":"5071:294:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4058,"nodeType":"Block","src":"5502:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4051,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"5527:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4052,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"5531:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4054,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"5534:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4055,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"5537:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4050,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"5519:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4049,"id":4057,"nodeType":"Return","src":"5512:27:21"}]},"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"5371:59:21","text":" @dev Returns the largest of two numbers."},"id":4059,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:21","nodeType":"FunctionDefinition","parameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"a","nameLocation":"5456:1:21","nodeType":"VariableDeclaration","scope":4059,"src":"5448:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"b","nameLocation":"5467:1:21","nodeType":"VariableDeclaration","scope":4059,"src":"5459:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:21"},"returnParameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4059,"src":"5493:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:21"},"scope":5372,"src":"5435:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4077,"nodeType":"Block","src":"5684:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4070,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"5709:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4071,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"5713:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"5716:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4074,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"5719:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4069,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"5701:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4068,"id":4076,"nodeType":"Return","src":"5694:27:21"}]},"documentation":{"id":4060,"nodeType":"StructuredDocumentation","src":"5552:60:21","text":" @dev Returns the smallest of two numbers."},"id":4078,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:21","nodeType":"FunctionDefinition","parameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"a","nameLocation":"5638:1:21","nodeType":"VariableDeclaration","scope":4078,"src":"5630:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4064,"mutability":"mutable","name":"b","nameLocation":"5649:1:21","nodeType":"VariableDeclaration","scope":4078,"src":"5641:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:21"},"returnParameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4078,"src":"5675:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4066,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:21"},"scope":5372,"src":"5617:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4100,"nodeType":"Block","src":"5912:82:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"5967:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4089,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"5971:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4092,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"5977:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4093,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"5981:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4087,"id":4099,"nodeType":"Return","src":"5959:28:21"}]},"documentation":{"id":4079,"nodeType":"StructuredDocumentation","src":"5734:102:21","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4101,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:21","nodeType":"FunctionDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"a","nameLocation":"5866:1:21","nodeType":"VariableDeclaration","scope":4101,"src":"5858:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4080,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4083,"mutability":"mutable","name":"b","nameLocation":"5877:1:21","nodeType":"VariableDeclaration","scope":4101,"src":"5869:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:21"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4101,"src":"5903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:21"},"scope":5372,"src":"5841:153:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4141,"nodeType":"Block","src":"6286:633:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"6300:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4122,"nodeType":"IfStatement","src":"6296:150:21","trueBody":{"id":4121,"nodeType":"Block","src":"6308:138:21","statements":[{"expression":{"arguments":[{"expression":{"id":4117,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"6412:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2205_$","typeString":"type(library Panic)"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"6412:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4114,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"6400:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2205_$","typeString":"type(library Panic)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2204,"src":"6400:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4120,"nodeType":"ExpressionStatement","src":"6400:35:21"}]}},{"id":4140,"nodeType":"UncheckedBlock","src":"6829:84:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"6876:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4123,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"6860:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"6860:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4129,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"6887:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4133,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"6896:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4110,"id":4139,"nodeType":"Return","src":"6853:49:21"}]}]},"documentation":{"id":4102,"nodeType":"StructuredDocumentation","src":"6000:210:21","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4142,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:21","nodeType":"FunctionDefinition","parameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"a","nameLocation":"6240:1:21","nodeType":"VariableDeclaration","scope":4142,"src":"6232:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4103,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4106,"mutability":"mutable","name":"b","nameLocation":"6251:1:21","nodeType":"VariableDeclaration","scope":4142,"src":"6243:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4105,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:21"},"returnParameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4142,"src":"6277:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:21"},"scope":5372,"src":"6215:704:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4277,"nodeType":"Block","src":"7340:3585:21","statements":[{"id":4276,"nodeType":"UncheckedBlock","src":"7350:3569:21","statements":[{"assignments":[4155,4157],"declarations":[{"constant":false,"id":4155,"mutability":"mutable","name":"high","nameLocation":"7383:4:21","nodeType":"VariableDeclaration","scope":4276,"src":"7375:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4154,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4157,"mutability":"mutable","name":"low","nameLocation":"7397:3:21","nodeType":"VariableDeclaration","scope":4276,"src":"7389:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4156,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4162,"initialValue":{"arguments":[{"id":4159,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"7411:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4160,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"7414:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4158,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"7404:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4163,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"7498:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4171,"nodeType":"IfStatement","src":"7494:365:21","trueBody":{"id":4170,"nodeType":"Block","src":"7509:350:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4166,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"7827:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4167,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"7833:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4153,"id":4169,"nodeType":"Return","src":"7820:24:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4172,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"7969:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4173,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"7984:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4190,"nodeType":"IfStatement","src":"7965:142:21","trueBody":{"id":4189,"nodeType":"Block","src":"7990:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4179,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"8028:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4182,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"8046:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2205_$","typeString":"type(library Panic)"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"8046:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4184,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"8070:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2205_$","typeString":"type(library Panic)"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2168,"src":"8070:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4178,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"8020:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4175,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"8008:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2205_$","typeString":"type(library Panic)"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2204,"src":"8008:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4188,"nodeType":"ExpressionStatement","src":"8008:84:21"}]}},{"assignments":[4192],"declarations":[{"constant":false,"id":4192,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:21","nodeType":"VariableDeclaration","scope":4276,"src":"8359:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4193,"nodeType":"VariableDeclarationStatement","src":"8359:17:21"},{"AST":{"nativeSrc":"8415:283:21","nodeType":"YulBlock","src":"8415:283:21","statements":[{"nativeSrc":"8484:38:21","nodeType":"YulAssignment","src":"8484:38:21","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:21","nodeType":"YulIdentifier","src":"8504:1:21"},{"name":"y","nativeSrc":"8507:1:21","nodeType":"YulIdentifier","src":"8507:1:21"},{"name":"denominator","nativeSrc":"8510:11:21","nodeType":"YulIdentifier","src":"8510:11:21"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:21","nodeType":"YulIdentifier","src":"8497:6:21"},"nativeSrc":"8497:25:21","nodeType":"YulFunctionCall","src":"8497:25:21"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:21","nodeType":"YulIdentifier","src":"8484:9:21"}]},{"nativeSrc":"8604:37:21","nodeType":"YulAssignment","src":"8604:37:21","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:21","nodeType":"YulIdentifier","src":"8616:4:21"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:21","nodeType":"YulIdentifier","src":"8625:9:21"},{"name":"low","nativeSrc":"8636:3:21","nodeType":"YulIdentifier","src":"8636:3:21"}],"functionName":{"name":"gt","nativeSrc":"8622:2:21","nodeType":"YulIdentifier","src":"8622:2:21"},"nativeSrc":"8622:18:21","nodeType":"YulFunctionCall","src":"8622:18:21"}],"functionName":{"name":"sub","nativeSrc":"8612:3:21","nodeType":"YulIdentifier","src":"8612:3:21"},"nativeSrc":"8612:29:21","nodeType":"YulFunctionCall","src":"8612:29:21"},"variableNames":[{"name":"high","nativeSrc":"8604:4:21","nodeType":"YulIdentifier","src":"8604:4:21"}]},{"nativeSrc":"8658:26:21","nodeType":"YulAssignment","src":"8658:26:21","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:21","nodeType":"YulIdentifier","src":"8669:3:21"},{"name":"remainder","nativeSrc":"8674:9:21","nodeType":"YulIdentifier","src":"8674:9:21"}],"functionName":{"name":"sub","nativeSrc":"8665:3:21","nodeType":"YulIdentifier","src":"8665:3:21"},"nativeSrc":"8665:19:21","nodeType":"YulFunctionCall","src":"8665:19:21"},"variableNames":[{"name":"low","nativeSrc":"8658:3:21","nodeType":"YulIdentifier","src":"8658:3:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4149,"isOffset":false,"isSlot":false,"src":"8510:11:21","valueSize":1},{"declaration":4155,"isOffset":false,"isSlot":false,"src":"8604:4:21","valueSize":1},{"declaration":4155,"isOffset":false,"isSlot":false,"src":"8616:4:21","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"8636:3:21","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"8658:3:21","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"8669:3:21","valueSize":1},{"declaration":4192,"isOffset":false,"isSlot":false,"src":"8484:9:21","valueSize":1},{"declaration":4192,"isOffset":false,"isSlot":false,"src":"8625:9:21","valueSize":1},{"declaration":4192,"isOffset":false,"isSlot":false,"src":"8674:9:21","valueSize":1},{"declaration":4145,"isOffset":false,"isSlot":false,"src":"8504:1:21","valueSize":1},{"declaration":4147,"isOffset":false,"isSlot":false,"src":"8507:1:21","valueSize":1}],"flags":["memory-safe"],"id":4194,"nodeType":"InlineAssembly","src":"8390:308:21"},{"assignments":[4196],"declarations":[{"constant":false,"id":4196,"mutability":"mutable","name":"twos","nameLocation":"8910:4:21","nodeType":"VariableDeclaration","scope":4276,"src":"8902:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4203,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"8917:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4199,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"8936:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:21"},{"AST":{"nativeSrc":"8987:359:21","nodeType":"YulBlock","src":"8987:359:21","statements":[{"nativeSrc":"9052:37:21","nodeType":"YulAssignment","src":"9052:37:21","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:21","nodeType":"YulIdentifier","src":"9071:11:21"},{"name":"twos","nativeSrc":"9084:4:21","nodeType":"YulIdentifier","src":"9084:4:21"}],"functionName":{"name":"div","nativeSrc":"9067:3:21","nodeType":"YulIdentifier","src":"9067:3:21"},"nativeSrc":"9067:22:21","nodeType":"YulFunctionCall","src":"9067:22:21"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:21","nodeType":"YulIdentifier","src":"9052:11:21"}]},{"nativeSrc":"9153:21:21","nodeType":"YulAssignment","src":"9153:21:21","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:21","nodeType":"YulIdentifier","src":"9164:3:21"},{"name":"twos","nativeSrc":"9169:4:21","nodeType":"YulIdentifier","src":"9169:4:21"}],"functionName":{"name":"div","nativeSrc":"9160:3:21","nodeType":"YulIdentifier","src":"9160:3:21"},"nativeSrc":"9160:14:21","nodeType":"YulFunctionCall","src":"9160:14:21"},"variableNames":[{"name":"low","nativeSrc":"9153:3:21","nodeType":"YulIdentifier","src":"9153:3:21"}]},{"nativeSrc":"9293:39:21","nodeType":"YulAssignment","src":"9293:39:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:21","nodeType":"YulLiteral","src":"9313:1:21","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:21","nodeType":"YulIdentifier","src":"9316:4:21"}],"functionName":{"name":"sub","nativeSrc":"9309:3:21","nodeType":"YulIdentifier","src":"9309:3:21"},"nativeSrc":"9309:12:21","nodeType":"YulFunctionCall","src":"9309:12:21"},{"name":"twos","nativeSrc":"9323:4:21","nodeType":"YulIdentifier","src":"9323:4:21"}],"functionName":{"name":"div","nativeSrc":"9305:3:21","nodeType":"YulIdentifier","src":"9305:3:21"},"nativeSrc":"9305:23:21","nodeType":"YulFunctionCall","src":"9305:23:21"},{"kind":"number","nativeSrc":"9330:1:21","nodeType":"YulLiteral","src":"9330:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:21","nodeType":"YulIdentifier","src":"9301:3:21"},"nativeSrc":"9301:31:21","nodeType":"YulFunctionCall","src":"9301:31:21"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:21","nodeType":"YulIdentifier","src":"9293:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4149,"isOffset":false,"isSlot":false,"src":"9052:11:21","valueSize":1},{"declaration":4149,"isOffset":false,"isSlot":false,"src":"9071:11:21","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"9153:3:21","valueSize":1},{"declaration":4157,"isOffset":false,"isSlot":false,"src":"9164:3:21","valueSize":1},{"declaration":4196,"isOffset":false,"isSlot":false,"src":"9084:4:21","valueSize":1},{"declaration":4196,"isOffset":false,"isSlot":false,"src":"9169:4:21","valueSize":1},{"declaration":4196,"isOffset":false,"isSlot":false,"src":"9293:4:21","valueSize":1},{"declaration":4196,"isOffset":false,"isSlot":false,"src":"9316:4:21","valueSize":1},{"declaration":4196,"isOffset":false,"isSlot":false,"src":"9323:4:21","valueSize":1}],"flags":["memory-safe"],"id":4204,"nodeType":"InlineAssembly","src":"8962:384:21"},{"expression":{"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4205,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"9409:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"9416:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4207,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"9423:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4210,"nodeType":"ExpressionStatement","src":"9409:18:21"},{"assignments":[4212],"declarations":[{"constant":false,"id":4212,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:21","nodeType":"VariableDeclaration","scope":4276,"src":"9762:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4219,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4214,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"9785:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:21"},{"expression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4220,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10018:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"10033:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4223,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10047:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4227,"nodeType":"ExpressionStatement","src":"10018:36:21"},{"expression":{"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10088:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4230,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"10103:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4231,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10117:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4235,"nodeType":"ExpressionStatement","src":"10088:36:21"},{"expression":{"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4236,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10160:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4238,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"10175:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4239,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10189:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4243,"nodeType":"ExpressionStatement","src":"10160:36:21"},{"expression":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4244,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10231:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"10246:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4247,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10260:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4251,"nodeType":"ExpressionStatement","src":"10231:36:21"},{"expression":{"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4252,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10304:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"10319:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4255,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10333:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4259,"nodeType":"ExpressionStatement","src":"10304:36:21"},{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4260,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4262,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"10393:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4263,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10407:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4267,"nodeType":"ExpressionStatement","src":"10378:36:21"},{"expression":{"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"10859:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4269,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"10868:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4270,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"10874:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4273,"nodeType":"ExpressionStatement","src":"10859:22:21"},{"expression":{"id":4274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"10902:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4153,"id":4275,"nodeType":"Return","src":"10895:13:21"}]}]},"documentation":{"id":4143,"nodeType":"StructuredDocumentation","src":"6925:312:21","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4278,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:21","nodeType":"FunctionDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"x","nameLocation":"7266:1:21","nodeType":"VariableDeclaration","scope":4278,"src":"7258:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"y","nameLocation":"7277:1:21","nodeType":"VariableDeclaration","scope":4278,"src":"7269:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4146,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4149,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:21","nodeType":"VariableDeclaration","scope":4278,"src":"7280:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:21"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"result","nameLocation":"7332:6:21","nodeType":"VariableDeclaration","scope":4278,"src":"7324:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:21"},"scope":5372,"src":"7242:3683:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4314,"nodeType":"Block","src":"11164:128:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4294,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"11188:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4295,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"11191:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4296,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"11194:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4293,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4278,4315],"referencedDeclaration":4278,"src":"11181:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4301,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"11242:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}],"id":4300,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"11225:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3763_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4304,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"11262:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4305,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"11265:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4306,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"11268:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4303,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4298,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"11209:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"11209:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4292,"id":4313,"nodeType":"Return","src":"11174:111:21"}]},"documentation":{"id":4279,"nodeType":"StructuredDocumentation","src":"10931:118:21","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4315,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:21","nodeType":"FunctionDefinition","parameters":{"id":4289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"x","nameLocation":"11078:1:21","nodeType":"VariableDeclaration","scope":4315,"src":"11070:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"y","nameLocation":"11089:1:21","nodeType":"VariableDeclaration","scope":4315,"src":"11081:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4282,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4285,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:21","nodeType":"VariableDeclaration","scope":4315,"src":"11092:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4288,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:21","nodeType":"VariableDeclaration","scope":4315,"src":"11113:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"},"typeName":{"id":4287,"nodeType":"UserDefinedTypeName","pathNode":{"id":4286,"name":"Rounding","nameLocations":["11113:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3763,"src":"11113:8:21"},"referencedDeclaration":3763,"src":"11113:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:21"},"returnParameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4315,"src":"11155:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4290,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:21"},"scope":5372,"src":"11054:238:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4364,"nodeType":"Block","src":"11500:245:21","statements":[{"id":4363,"nodeType":"UncheckedBlock","src":"11510:229:21","statements":[{"assignments":[4328,4330],"declarations":[{"constant":false,"id":4328,"mutability":"mutable","name":"high","nameLocation":"11543:4:21","nodeType":"VariableDeclaration","scope":4363,"src":"11535:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4330,"mutability":"mutable","name":"low","nameLocation":"11557:3:21","nodeType":"VariableDeclaration","scope":4363,"src":"11549:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4335,"initialValue":{"arguments":[{"id":4332,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"11571:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4333,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"11574:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4331,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"11564:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4336,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"11594:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4338,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"11607:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4349,"nodeType":"IfStatement","src":"11590:86:21","trueBody":{"id":4348,"nodeType":"Block","src":"11610:66:21","statements":[{"expression":{"arguments":[{"expression":{"id":4344,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"11640:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2205_$","typeString":"type(library Panic)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2168,"src":"11640:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4341,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"11628:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2205_$","typeString":"type(library Panic)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2204,"src":"11628:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4347,"nodeType":"ExpressionStatement","src":"11628:33:21"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"11697:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4352,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"11712:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"11719:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4358,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"11726:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4326,"id":4362,"nodeType":"Return","src":"11689:39:21"}]}]},"documentation":{"id":4316,"nodeType":"StructuredDocumentation","src":"11298:111:21","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4365,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:21","nodeType":"FunctionDefinition","parameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"x","nameLocation":"11438:1:21","nodeType":"VariableDeclaration","scope":4365,"src":"11430:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4320,"mutability":"mutable","name":"y","nameLocation":"11449:1:21","nodeType":"VariableDeclaration","scope":4365,"src":"11441:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"n","nameLocation":"11458:1:21","nodeType":"VariableDeclaration","scope":4365,"src":"11452:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4321,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:21"},"returnParameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"result","nameLocation":"11492:6:21","nodeType":"VariableDeclaration","scope":4365,"src":"11484:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:21"},"scope":5372,"src":"11414:331:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4403,"nodeType":"Block","src":"11963:113:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4381,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"11987:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4382,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"11990:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4383,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"11993:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4380,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4365,4404],"referencedDeclaration":4365,"src":"11980:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4388,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"12031:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}],"id":4387,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"12014:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3763_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4391,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"12051:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4392,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"12054:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4394,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"12062:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4390,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4385,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"11998:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"11998:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4379,"id":4402,"nodeType":"Return","src":"11973:96:21"}]},"documentation":{"id":4366,"nodeType":"StructuredDocumentation","src":"11751:109:21","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4404,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:21","nodeType":"FunctionDefinition","parameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"x","nameLocation":"11889:1:21","nodeType":"VariableDeclaration","scope":4404,"src":"11881:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4370,"mutability":"mutable","name":"y","nameLocation":"11900:1:21","nodeType":"VariableDeclaration","scope":4404,"src":"11892:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4372,"mutability":"mutable","name":"n","nameLocation":"11909:1:21","nodeType":"VariableDeclaration","scope":4404,"src":"11903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4371,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4375,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:21","nodeType":"VariableDeclaration","scope":4404,"src":"11912:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"},"typeName":{"id":4374,"nodeType":"UserDefinedTypeName","pathNode":{"id":4373,"name":"Rounding","nameLocations":["11912:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3763,"src":"11912:8:21"},"referencedDeclaration":3763,"src":"11912:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:21"},"returnParameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4404,"src":"11954:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4377,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:21"},"scope":5372,"src":"11865:211:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4500,"nodeType":"Block","src":"12710:1849:21","statements":[{"id":4499,"nodeType":"UncheckedBlock","src":"12720:1833:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4414,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"12748:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4419,"nodeType":"IfStatement","src":"12744:20:21","trueBody":{"expression":{"hexValue":"30","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4413,"id":4418,"nodeType":"Return","src":"12756:8:21"}},{"assignments":[4421],"declarations":[{"constant":false,"id":4421,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:21","nodeType":"VariableDeclaration","scope":4499,"src":"13235:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4420,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4425,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"13255:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4423,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"13259:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:21"},{"assignments":[4427],"declarations":[{"constant":false,"id":4427,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:21","nodeType":"VariableDeclaration","scope":4499,"src":"13274:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4429,"initialValue":{"id":4428,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"13288:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:21"},{"assignments":[4431],"declarations":[{"constant":false,"id":4431,"mutability":"mutable","name":"x","nameLocation":"13432:1:21","nodeType":"VariableDeclaration","scope":4499,"src":"13425:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4430,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4433,"initialValue":{"hexValue":"30","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:21"},{"assignments":[4435],"declarations":[{"constant":false,"id":4435,"mutability":"mutable","name":"y","nameLocation":"13458:1:21","nodeType":"VariableDeclaration","scope":4499,"src":"13451:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4434,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4437,"initialValue":{"hexValue":"31","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:21"},{"body":{"id":4474,"nodeType":"Block","src":"13501:882:21","statements":[{"assignments":[4442],"declarations":[{"constant":false,"id":4442,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:21","nodeType":"VariableDeclaration","scope":4474,"src":"13519:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4441,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4446,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4443,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"13538:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4444,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"13544:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:21"},{"expression":{"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4447,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"13573:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4448,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"13578:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4449,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4450,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"13678:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4451,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"13923:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4452,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"13929:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4453,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"13941:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4458,"nodeType":"ExpressionStatement","src":"13572:395:21"},{"expression":{"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4459,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"13987:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4460,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"13990:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4461,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4462,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"14072:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4463,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"14326:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4464,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"14330:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4467,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"14341:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4465,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:21","typeDescriptions":{}}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4473,"nodeType":"ExpressionStatement","src":"13986:382:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4438,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"13485:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4475,"nodeType":"WhileStatement","src":"13478:905:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"14401:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4481,"nodeType":"IfStatement","src":"14397:22:21","trueBody":{"expression":{"hexValue":"30","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4413,"id":4480,"nodeType":"Return","src":"14411:8:21"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"14470:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4486,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"14477:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:21","subExpression":{"id":4489,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"14490:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:21","typeDescriptions":{}}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4495,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"14502:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4493,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:21","typeDescriptions":{}}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4482,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"14462:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4413,"id":4498,"nodeType":"Return","src":"14455:50:21"}]}]},"documentation":{"id":4405,"nodeType":"StructuredDocumentation","src":"12082:553:21","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4501,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:21","nodeType":"FunctionDefinition","parameters":{"id":4410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4407,"mutability":"mutable","name":"a","nameLocation":"12664:1:21","nodeType":"VariableDeclaration","scope":4501,"src":"12656:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4409,"mutability":"mutable","name":"n","nameLocation":"12675:1:21","nodeType":"VariableDeclaration","scope":4501,"src":"12667:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4408,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:21"},"returnParameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4501,"src":"12701:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4411,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:21"},"scope":5372,"src":"12640:1919:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4521,"nodeType":"Block","src":"15159:82:21","statements":[{"id":4520,"nodeType":"UncheckedBlock","src":"15169:66:21","statements":[{"expression":{"arguments":[{"id":4513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"15212:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4514,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"15215:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4517,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"15222:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4511,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"15200:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5372_$","typeString":"type(library Math)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:21","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4558,"src":"15200:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4510,"id":4519,"nodeType":"Return","src":"15193:31:21"}]}]},"documentation":{"id":4502,"nodeType":"StructuredDocumentation","src":"14565:514:21","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4522,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:21","nodeType":"FunctionDefinition","parameters":{"id":4507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"a","nameLocation":"15113:1:21","nodeType":"VariableDeclaration","scope":4522,"src":"15105:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4503,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4506,"mutability":"mutable","name":"p","nameLocation":"15124:1:21","nodeType":"VariableDeclaration","scope":4522,"src":"15116:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4505,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:21"},"returnParameters":{"id":4510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4522,"src":"15150:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4508,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:21"},"scope":5372,"src":"15084:157:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4557,"nodeType":"Block","src":"16011:174:21","statements":[{"assignments":[4535,4537],"declarations":[{"constant":false,"id":4535,"mutability":"mutable","name":"success","nameLocation":"16027:7:21","nodeType":"VariableDeclaration","scope":4557,"src":"16022:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4534,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4537,"mutability":"mutable","name":"result","nameLocation":"16044:6:21","nodeType":"VariableDeclaration","scope":4557,"src":"16036:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4536,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4543,"initialValue":{"arguments":[{"id":4539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"16064:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4540,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"16067:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4541,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"16070:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4538,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4582,4664],"referencedDeclaration":4582,"src":"16054:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:21"},{"condition":{"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:21","subExpression":{"id":4544,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"16087:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4554,"nodeType":"IfStatement","src":"16082:74:21","trueBody":{"id":4553,"nodeType":"Block","src":"16096:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":4549,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"16122:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2205_$","typeString":"type(library Panic)"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"16122:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4546,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"16110:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2205_$","typeString":"type(library Panic)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2204,"src":"16110:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4552,"nodeType":"ExpressionStatement","src":"16110:35:21"}]}},{"expression":{"id":4555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"16172:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4533,"id":4556,"nodeType":"Return","src":"16165:13:21"}]},"documentation":{"id":4523,"nodeType":"StructuredDocumentation","src":"15247:678:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4558,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:21","nodeType":"FunctionDefinition","parameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"b","nameLocation":"15954:1:21","nodeType":"VariableDeclaration","scope":4558,"src":"15946:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4527,"mutability":"mutable","name":"e","nameLocation":"15965:1:21","nodeType":"VariableDeclaration","scope":4558,"src":"15957:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4526,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4529,"mutability":"mutable","name":"m","nameLocation":"15976:1:21","nodeType":"VariableDeclaration","scope":4558,"src":"15968:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4528,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:21"},"returnParameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4558,"src":"16002:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:21"},"scope":5372,"src":"15930:255:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4581,"nodeType":"Block","src":"17039:1493:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"17053:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4579,"nodeType":"IfStatement","src":"17049:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4571,"id":4578,"nodeType":"Return","src":"17061:17:21"}},{"AST":{"nativeSrc":"17113:1413:21","nodeType":"YulBlock","src":"17113:1413:21","statements":[{"nativeSrc":"17127:22:21","nodeType":"YulVariableDeclaration","src":"17127:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:21","nodeType":"YulLiteral","src":"17144:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:21","nodeType":"YulIdentifier","src":"17138:5:21"},"nativeSrc":"17138:11:21","nodeType":"YulFunctionCall","src":"17138:11:21"},"variables":[{"name":"ptr","nativeSrc":"17131:3:21","nodeType":"YulTypedName","src":"17131:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:21","nodeType":"YulIdentifier","src":"18057:3:21"},{"kind":"number","nativeSrc":"18062:4:21","nodeType":"YulLiteral","src":"18062:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:21","nodeType":"YulIdentifier","src":"18050:6:21"},"nativeSrc":"18050:17:21","nodeType":"YulFunctionCall","src":"18050:17:21"},"nativeSrc":"18050:17:21","nodeType":"YulExpressionStatement","src":"18050:17:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:21","nodeType":"YulIdentifier","src":"18091:3:21"},{"kind":"number","nativeSrc":"18096:4:21","nodeType":"YulLiteral","src":"18096:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:21","nodeType":"YulIdentifier","src":"18087:3:21"},"nativeSrc":"18087:14:21","nodeType":"YulFunctionCall","src":"18087:14:21"},{"kind":"number","nativeSrc":"18103:4:21","nodeType":"YulLiteral","src":"18103:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:21","nodeType":"YulIdentifier","src":"18080:6:21"},"nativeSrc":"18080:28:21","nodeType":"YulFunctionCall","src":"18080:28:21"},"nativeSrc":"18080:28:21","nodeType":"YulExpressionStatement","src":"18080:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:21","nodeType":"YulIdentifier","src":"18132:3:21"},{"kind":"number","nativeSrc":"18137:4:21","nodeType":"YulLiteral","src":"18137:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:21","nodeType":"YulIdentifier","src":"18128:3:21"},"nativeSrc":"18128:14:21","nodeType":"YulFunctionCall","src":"18128:14:21"},{"kind":"number","nativeSrc":"18144:4:21","nodeType":"YulLiteral","src":"18144:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:21","nodeType":"YulIdentifier","src":"18121:6:21"},"nativeSrc":"18121:28:21","nodeType":"YulFunctionCall","src":"18121:28:21"},"nativeSrc":"18121:28:21","nodeType":"YulExpressionStatement","src":"18121:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:21","nodeType":"YulIdentifier","src":"18173:3:21"},{"kind":"number","nativeSrc":"18178:4:21","nodeType":"YulLiteral","src":"18178:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:21","nodeType":"YulIdentifier","src":"18169:3:21"},"nativeSrc":"18169:14:21","nodeType":"YulFunctionCall","src":"18169:14:21"},{"name":"b","nativeSrc":"18185:1:21","nodeType":"YulIdentifier","src":"18185:1:21"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:21","nodeType":"YulIdentifier","src":"18162:6:21"},"nativeSrc":"18162:25:21","nodeType":"YulFunctionCall","src":"18162:25:21"},"nativeSrc":"18162:25:21","nodeType":"YulExpressionStatement","src":"18162:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:21","nodeType":"YulIdentifier","src":"18211:3:21"},{"kind":"number","nativeSrc":"18216:4:21","nodeType":"YulLiteral","src":"18216:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:21","nodeType":"YulIdentifier","src":"18207:3:21"},"nativeSrc":"18207:14:21","nodeType":"YulFunctionCall","src":"18207:14:21"},{"name":"e","nativeSrc":"18223:1:21","nodeType":"YulIdentifier","src":"18223:1:21"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:21","nodeType":"YulIdentifier","src":"18200:6:21"},"nativeSrc":"18200:25:21","nodeType":"YulFunctionCall","src":"18200:25:21"},"nativeSrc":"18200:25:21","nodeType":"YulExpressionStatement","src":"18200:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:21","nodeType":"YulIdentifier","src":"18249:3:21"},{"kind":"number","nativeSrc":"18254:4:21","nodeType":"YulLiteral","src":"18254:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:21","nodeType":"YulIdentifier","src":"18245:3:21"},"nativeSrc":"18245:14:21","nodeType":"YulFunctionCall","src":"18245:14:21"},{"name":"m","nativeSrc":"18261:1:21","nodeType":"YulIdentifier","src":"18261:1:21"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:21","nodeType":"YulIdentifier","src":"18238:6:21"},"nativeSrc":"18238:25:21","nodeType":"YulFunctionCall","src":"18238:25:21"},"nativeSrc":"18238:25:21","nodeType":"YulExpressionStatement","src":"18238:25:21"},{"nativeSrc":"18425:57:21","nodeType":"YulAssignment","src":"18425:57:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:21","nodeType":"YulIdentifier","src":"18447:3:21"},"nativeSrc":"18447:5:21","nodeType":"YulFunctionCall","src":"18447:5:21"},{"kind":"number","nativeSrc":"18454:4:21","nodeType":"YulLiteral","src":"18454:4:21","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:21","nodeType":"YulIdentifier","src":"18460:3:21"},{"kind":"number","nativeSrc":"18465:4:21","nodeType":"YulLiteral","src":"18465:4:21","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:21","nodeType":"YulLiteral","src":"18471:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:21","nodeType":"YulLiteral","src":"18477:4:21","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:21","nodeType":"YulIdentifier","src":"18436:10:21"},"nativeSrc":"18436:46:21","nodeType":"YulFunctionCall","src":"18436:46:21"},"variableNames":[{"name":"success","nativeSrc":"18425:7:21","nodeType":"YulIdentifier","src":"18425:7:21"}]},{"nativeSrc":"18495:21:21","nodeType":"YulAssignment","src":"18495:21:21","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:21","nodeType":"YulLiteral","src":"18511:4:21","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:21","nodeType":"YulIdentifier","src":"18505:5:21"},"nativeSrc":"18505:11:21","nodeType":"YulFunctionCall","src":"18505:11:21"},"variableNames":[{"name":"result","nativeSrc":"18495:6:21","nodeType":"YulIdentifier","src":"18495:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4561,"isOffset":false,"isSlot":false,"src":"18185:1:21","valueSize":1},{"declaration":4563,"isOffset":false,"isSlot":false,"src":"18223:1:21","valueSize":1},{"declaration":4565,"isOffset":false,"isSlot":false,"src":"18261:1:21","valueSize":1},{"declaration":4570,"isOffset":false,"isSlot":false,"src":"18495:6:21","valueSize":1},{"declaration":4568,"isOffset":false,"isSlot":false,"src":"18425:7:21","valueSize":1}],"flags":["memory-safe"],"id":4580,"nodeType":"InlineAssembly","src":"17088:1438:21"}]},"documentation":{"id":4559,"nodeType":"StructuredDocumentation","src":"16191:738:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4582,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:21","nodeType":"FunctionDefinition","parameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"mutability":"mutable","name":"b","nameLocation":"16961:1:21","nodeType":"VariableDeclaration","scope":4582,"src":"16953:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4563,"mutability":"mutable","name":"e","nameLocation":"16972:1:21","nodeType":"VariableDeclaration","scope":4582,"src":"16964:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4562,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4565,"mutability":"mutable","name":"m","nameLocation":"16983:1:21","nodeType":"VariableDeclaration","scope":4582,"src":"16975:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:21"},"returnParameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"mutability":"mutable","name":"success","nameLocation":"17014:7:21","nodeType":"VariableDeclaration","scope":4582,"src":"17009:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4567,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4570,"mutability":"mutable","name":"result","nameLocation":"17031:6:21","nodeType":"VariableDeclaration","scope":4582,"src":"17023:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:21"},"scope":5372,"src":"16934:1598:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4617,"nodeType":"Block","src":"18729:179:21","statements":[{"assignments":[4595,4597],"declarations":[{"constant":false,"id":4595,"mutability":"mutable","name":"success","nameLocation":"18745:7:21","nodeType":"VariableDeclaration","scope":4617,"src":"18740:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4594,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4597,"mutability":"mutable","name":"result","nameLocation":"18767:6:21","nodeType":"VariableDeclaration","scope":4617,"src":"18754:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4596,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4603,"initialValue":{"arguments":[{"id":4599,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"18787:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4600,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"18790:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4601,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"18793:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4598,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4582,4664],"referencedDeclaration":4664,"src":"18777:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:21"},{"condition":{"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:21","subExpression":{"id":4604,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"18810:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4614,"nodeType":"IfStatement","src":"18805:74:21","trueBody":{"id":4613,"nodeType":"Block","src":"18819:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":4609,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"18845:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2205_$","typeString":"type(library Panic)"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"18845:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4606,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"18833:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2205_$","typeString":"type(library Panic)"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2204,"src":"18833:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4612,"nodeType":"ExpressionStatement","src":"18833:35:21"}]}},{"expression":{"id":4615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"18895:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4593,"id":4616,"nodeType":"Return","src":"18888:13:21"}]},"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"18538:85:21","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4618,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:21","nodeType":"FunctionDefinition","parameters":{"id":4590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"b","nameLocation":"18657:1:21","nodeType":"VariableDeclaration","scope":4618,"src":"18644:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4584,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4587,"mutability":"mutable","name":"e","nameLocation":"18673:1:21","nodeType":"VariableDeclaration","scope":4618,"src":"18660:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4586,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4589,"mutability":"mutable","name":"m","nameLocation":"18689:1:21","nodeType":"VariableDeclaration","scope":4618,"src":"18676:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4588,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:21"},"returnParameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4618,"src":"18715:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4591,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:21"},"scope":5372,"src":"18628:280:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4663,"nodeType":"Block","src":"19162:771:21","statements":[{"condition":{"arguments":[{"id":4633,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"19187:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4632,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"19176:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4642,"nodeType":"IfStatement","src":"19172:47:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4636,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4631,"id":4641,"nodeType":"Return","src":"19191:28:21"}},{"assignments":[4644],"declarations":[{"constant":false,"id":4644,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:21","nodeType":"VariableDeclaration","scope":4663,"src":"19230:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4647,"initialValue":{"expression":{"id":4645,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"19245:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:21","memberName":"length","nodeType":"MemberAccess","src":"19245:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:21"},{"expression":{"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"19335:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4651,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"19361:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:21","memberName":"length","nodeType":"MemberAccess","src":"19361:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4653,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"19371:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:21","memberName":"length","nodeType":"MemberAccess","src":"19371:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4655,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"19381:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4656,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"19387:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4657,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4623,"src":"19390:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4658,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"19393:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4649,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4661,"nodeType":"ExpressionStatement","src":"19335:60:21"},{"AST":{"nativeSrc":"19431:496:21","nodeType":"YulBlock","src":"19431:496:21","statements":[{"nativeSrc":"19445:32:21","nodeType":"YulVariableDeclaration","src":"19445:32:21","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:21","nodeType":"YulIdentifier","src":"19464:6:21"},{"kind":"number","nativeSrc":"19472:4:21","nodeType":"YulLiteral","src":"19472:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:21","nodeType":"YulIdentifier","src":"19460:3:21"},"nativeSrc":"19460:17:21","nodeType":"YulFunctionCall","src":"19460:17:21"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:21","nodeType":"YulTypedName","src":"19449:7:21","type":""}]},{"nativeSrc":"19567:73:21","nodeType":"YulAssignment","src":"19567:73:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:21","nodeType":"YulIdentifier","src":"19589:3:21"},"nativeSrc":"19589:5:21","nodeType":"YulFunctionCall","src":"19589:5:21"},{"kind":"number","nativeSrc":"19596:4:21","nodeType":"YulLiteral","src":"19596:4:21","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:21","nodeType":"YulIdentifier","src":"19602:7:21"},{"arguments":[{"name":"result","nativeSrc":"19617:6:21","nodeType":"YulIdentifier","src":"19617:6:21"}],"functionName":{"name":"mload","nativeSrc":"19611:5:21","nodeType":"YulIdentifier","src":"19611:5:21"},"nativeSrc":"19611:13:21","nodeType":"YulFunctionCall","src":"19611:13:21"},{"name":"dataPtr","nativeSrc":"19626:7:21","nodeType":"YulIdentifier","src":"19626:7:21"},{"name":"mLen","nativeSrc":"19635:4:21","nodeType":"YulIdentifier","src":"19635:4:21"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:21","nodeType":"YulIdentifier","src":"19578:10:21"},"nativeSrc":"19578:62:21","nodeType":"YulFunctionCall","src":"19578:62:21"},"variableNames":[{"name":"success","nativeSrc":"19567:7:21","nodeType":"YulIdentifier","src":"19567:7:21"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:21","nodeType":"YulIdentifier","src":"19796:6:21"},{"name":"mLen","nativeSrc":"19804:4:21","nodeType":"YulIdentifier","src":"19804:4:21"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:21","nodeType":"YulIdentifier","src":"19789:6:21"},"nativeSrc":"19789:20:21","nodeType":"YulFunctionCall","src":"19789:20:21"},"nativeSrc":"19789:20:21","nodeType":"YulExpressionStatement","src":"19789:20:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:21","nodeType":"YulLiteral","src":"19892:4:21","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:21","nodeType":"YulIdentifier","src":"19902:7:21"},{"name":"mLen","nativeSrc":"19911:4:21","nodeType":"YulIdentifier","src":"19911:4:21"}],"functionName":{"name":"add","nativeSrc":"19898:3:21","nodeType":"YulIdentifier","src":"19898:3:21"},"nativeSrc":"19898:18:21","nodeType":"YulFunctionCall","src":"19898:18:21"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:21","nodeType":"YulIdentifier","src":"19885:6:21"},"nativeSrc":"19885:32:21","nodeType":"YulFunctionCall","src":"19885:32:21"},"nativeSrc":"19885:32:21","nodeType":"YulExpressionStatement","src":"19885:32:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":4644,"isOffset":false,"isSlot":false,"src":"19635:4:21","valueSize":1},{"declaration":4644,"isOffset":false,"isSlot":false,"src":"19804:4:21","valueSize":1},{"declaration":4644,"isOffset":false,"isSlot":false,"src":"19911:4:21","valueSize":1},{"declaration":4630,"isOffset":false,"isSlot":false,"src":"19464:6:21","valueSize":1},{"declaration":4630,"isOffset":false,"isSlot":false,"src":"19617:6:21","valueSize":1},{"declaration":4630,"isOffset":false,"isSlot":false,"src":"19796:6:21","valueSize":1},{"declaration":4628,"isOffset":false,"isSlot":false,"src":"19567:7:21","valueSize":1}],"flags":["memory-safe"],"id":4662,"nodeType":"InlineAssembly","src":"19406:521:21"}]},"documentation":{"id":4619,"nodeType":"StructuredDocumentation","src":"18914:88:21","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4664,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:21","nodeType":"FunctionDefinition","parameters":{"id":4626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4621,"mutability":"mutable","name":"b","nameLocation":"19048:1:21","nodeType":"VariableDeclaration","scope":4664,"src":"19035:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4620,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4623,"mutability":"mutable","name":"e","nameLocation":"19072:1:21","nodeType":"VariableDeclaration","scope":4664,"src":"19059:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4622,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4625,"mutability":"mutable","name":"m","nameLocation":"19096:1:21","nodeType":"VariableDeclaration","scope":4664,"src":"19083:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4624,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:21"},"returnParameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"success","nameLocation":"19132:7:21","nodeType":"VariableDeclaration","scope":4664,"src":"19127:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4627,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"result","nameLocation":"19154:6:21","nodeType":"VariableDeclaration","scope":4664,"src":"19141:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4629,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:21"},"scope":5372,"src":"19007:926:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4696,"nodeType":"Block","src":"20088:176:21","statements":[{"body":{"id":4692,"nodeType":"Block","src":"20145:92:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4683,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"20163:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4685,"indexExpression":{"id":4684,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"20173:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4691,"nodeType":"IfStatement","src":"20159:68:21","trueBody":{"id":4690,"nodeType":"Block","src":"20182:45:21","statements":[{"expression":{"hexValue":"66616c7365","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4671,"id":4689,"nodeType":"Return","src":"20200:12:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"20118:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4677,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"20122:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:21","memberName":"length","nodeType":"MemberAccess","src":"20122:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4693,"initializationExpression":{"assignments":[4673],"declarations":[{"constant":false,"id":4673,"mutability":"mutable","name":"i","nameLocation":"20111:1:21","nodeType":"VariableDeclaration","scope":4693,"src":"20103:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4675,"initialValue":{"hexValue":"30","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:21","subExpression":{"id":4680,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"20142:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4682,"nodeType":"ExpressionStatement","src":"20140:3:21"},"nodeType":"ForStatement","src":"20098:139:21"},{"expression":{"hexValue":"74727565","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4671,"id":4695,"nodeType":"Return","src":"20246:11:21"}]},"documentation":{"id":4665,"nodeType":"StructuredDocumentation","src":"19939:72:21","text":" @dev Returns whether the provided byte array is zero."},"id":4697,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:21","nodeType":"FunctionDefinition","parameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:21","nodeType":"VariableDeclaration","scope":4697,"src":"20036:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4666,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:21"},"returnParameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4697,"src":"20082:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4669,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:21"},"scope":5372,"src":"20016:248:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4915,"nodeType":"Block","src":"20624:5124:21","statements":[{"id":4914,"nodeType":"UncheckedBlock","src":"20634:5108:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4705,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"20728:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4711,"nodeType":"IfStatement","src":"20724:53:21","trueBody":{"id":4710,"nodeType":"Block","src":"20736:41:21","statements":[{"expression":{"id":4708,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"20761:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4704,"id":4709,"nodeType":"Return","src":"20754:8:21"}]}},{"assignments":[4713],"declarations":[{"constant":false,"id":4713,"mutability":"mutable","name":"aa","nameLocation":"21712:2:21","nodeType":"VariableDeclaration","scope":4914,"src":"21704:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4712,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4715,"initialValue":{"id":4714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"21717:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:21"},{"assignments":[4717],"declarations":[{"constant":false,"id":4717,"mutability":"mutable","name":"xn","nameLocation":"21740:2:21","nodeType":"VariableDeclaration","scope":4914,"src":"21732:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4719,"initialValue":{"hexValue":"31","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"21765:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4735,"nodeType":"IfStatement","src":"21761:92:21","trueBody":{"id":4734,"nodeType":"Block","src":"21783:70:21","statements":[{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4726,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"21801:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"21801:10:21"},{"expression":{"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"21829:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4733,"nodeType":"ExpressionStatement","src":"21829:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4736,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"21870:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4751,"nodeType":"IfStatement","src":"21866:90:21","trueBody":{"id":4750,"nodeType":"Block","src":"21887:69:21","statements":[{"expression":{"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4742,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"21905:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4745,"nodeType":"ExpressionStatement","src":"21905:9:21"},{"expression":{"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4746,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"21932:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4749,"nodeType":"ExpressionStatement","src":"21932:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"21973:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4767,"nodeType":"IfStatement","src":"21969:90:21","trueBody":{"id":4766,"nodeType":"Block","src":"21990:69:21","statements":[{"expression":{"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4758,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"22008:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ExpressionStatement","src":"22008:9:21"},{"expression":{"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4762,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"22035:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4765,"nodeType":"ExpressionStatement","src":"22035:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4768,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"22076:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4783,"nodeType":"IfStatement","src":"22072:89:21","trueBody":{"id":4782,"nodeType":"Block","src":"22093:68:21","statements":[{"expression":{"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4774,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"22111:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4777,"nodeType":"ExpressionStatement","src":"22111:9:21"},{"expression":{"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4778,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"22138:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4781,"nodeType":"ExpressionStatement","src":"22138:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4784,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"22178:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4799,"nodeType":"IfStatement","src":"22174:87:21","trueBody":{"id":4798,"nodeType":"Block","src":"22194:67:21","statements":[{"expression":{"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4790,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"22212:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4793,"nodeType":"ExpressionStatement","src":"22212:8:21"},{"expression":{"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4794,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"22238:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4797,"nodeType":"ExpressionStatement","src":"22238:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4800,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"22278:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4815,"nodeType":"IfStatement","src":"22274:87:21","trueBody":{"id":4814,"nodeType":"Block","src":"22294:67:21","statements":[{"expression":{"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4806,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"22312:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4809,"nodeType":"ExpressionStatement","src":"22312:8:21"},{"expression":{"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4810,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"22338:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4813,"nodeType":"ExpressionStatement","src":"22338:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4816,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"22378:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4827,"nodeType":"IfStatement","src":"22374:61:21","trueBody":{"id":4826,"nodeType":"Block","src":"22394:41:21","statements":[{"expression":{"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4822,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"22412:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4825,"nodeType":"ExpressionStatement","src":"22412:8:21"}]}},{"expression":{"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4828,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"22855:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4830,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"22865:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4836,"nodeType":"ExpressionStatement","src":"22855:18:21"},{"expression":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4837,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"24760:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"24766:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4839,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"24771:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4840,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"24775:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4843,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4847,"nodeType":"ExpressionStatement","src":"24760:23:21"},{"expression":{"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4848,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"24869:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"24875:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4850,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"24880:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4851,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"24884:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4858,"nodeType":"ExpressionStatement","src":"24869:23:21"},{"expression":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4859,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"24980:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"24986:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4861,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"24991:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4862,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"24995:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4869,"nodeType":"ExpressionStatement","src":"24980:23:21"},{"expression":{"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4870,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25089:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4871,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25095:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4872,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"25100:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4873,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25104:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4880,"nodeType":"ExpressionStatement","src":"25089:23:21"},{"expression":{"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4881,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25199:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4882,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25205:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"25210:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4884,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25214:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4891,"nodeType":"ExpressionStatement","src":"25199:23:21"},{"expression":{"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4892,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25309:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4893,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25315:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"25320:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4895,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25324:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4902,"nodeType":"ExpressionStatement","src":"25309:23:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25698:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4906,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25719:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4907,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"25724:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4908,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"25728:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4904,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"25703:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"25703:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4704,"id":4913,"nodeType":"Return","src":"25691:40:21"}]}]},"documentation":{"id":4698,"nodeType":"StructuredDocumentation","src":"20270:292:21","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4916,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:21","nodeType":"FunctionDefinition","parameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"a","nameLocation":"20589:1:21","nodeType":"VariableDeclaration","scope":4916,"src":"20581:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:21"},"returnParameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4916,"src":"20615:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4702,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:21"},"scope":5372,"src":"20567:5181:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4949,"nodeType":"Block","src":"25921:171:21","statements":[{"id":4948,"nodeType":"UncheckedBlock","src":"25931:155:21","statements":[{"assignments":[4928],"declarations":[{"constant":false,"id":4928,"mutability":"mutable","name":"result","nameLocation":"25963:6:21","nodeType":"VariableDeclaration","scope":4948,"src":"25955:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4932,"initialValue":{"arguments":[{"id":4930,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"25977:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4929,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4916,4950],"referencedDeclaration":4916,"src":"25972:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"26000:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4937,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"26042:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}],"id":4936,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"26025:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3763_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"26055:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"26064:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"26073:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4934,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"26009:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"26009:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4926,"id":4947,"nodeType":"Return","src":"25993:82:21"}]}]},"documentation":{"id":4917,"nodeType":"StructuredDocumentation","src":"25754:86:21","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4950,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:21","nodeType":"FunctionDefinition","parameters":{"id":4923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4919,"mutability":"mutable","name":"a","nameLocation":"25867:1:21","nodeType":"VariableDeclaration","scope":4950,"src":"25859:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4918,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4922,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:21","nodeType":"VariableDeclaration","scope":4950,"src":"25870:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"},"typeName":{"id":4921,"nodeType":"UserDefinedTypeName","pathNode":{"id":4920,"name":"Rounding","nameLocations":["25870:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3763,"src":"25870:8:21"},"referencedDeclaration":3763,"src":"25870:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:21"},"returnParameters":{"id":4926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4950,"src":"25912:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:21"},"scope":5372,"src":"25845:247:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5040,"nodeType":"Block","src":"26281:2334:21","statements":[{"expression":{"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4958,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"26363:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4961,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"26383:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4959,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"26367:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"26367:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4968,"nodeType":"ExpressionStatement","src":"26363:64:21"},{"expression":{"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4969,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"26503:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"26525:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4973,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"26530:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4970,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"26508:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"26508:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:21","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4982,"nodeType":"ExpressionStatement","src":"26503:56:21"},{"expression":{"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4983,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"26634:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4986,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"26656:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4987,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"26661:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4984,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"26639:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"26639:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4996,"nodeType":"ExpressionStatement","src":"26634:48:21"},{"expression":{"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4997,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"26757:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"26779:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5001,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"26784:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4998,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"26762:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"26762:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5010,"nodeType":"ExpressionStatement","src":"26757:44:21"},{"expression":{"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5011,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"26874:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5014,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"26896:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5015,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"26901:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5012,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"26879:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"26879:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5024,"nodeType":"ExpressionStatement","src":"26874:42:21"},{"expression":{"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5025,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"26988:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"27010:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5029,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"27015:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5026,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"26993:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"26993:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5038,"nodeType":"ExpressionStatement","src":"26988:41:21"},{"AST":{"nativeSrc":"28490:119:21","nodeType":"YulBlock","src":"28490:119:21","statements":[{"nativeSrc":"28504:95:21","nodeType":"YulAssignment","src":"28504:95:21","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:21","nodeType":"YulIdentifier","src":"28512:1:21"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:21","nodeType":"YulIdentifier","src":"28524:1:21"},{"name":"x","nativeSrc":"28527:1:21","nodeType":"YulIdentifier","src":"28527:1:21"}],"functionName":{"name":"shr","nativeSrc":"28520:3:21","nodeType":"YulIdentifier","src":"28520:3:21"},"nativeSrc":"28520:9:21","nodeType":"YulFunctionCall","src":"28520:9:21"},{"kind":"number","nativeSrc":"28531:66:21","nodeType":"YulLiteral","src":"28531:66:21","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:21","nodeType":"YulIdentifier","src":"28515:4:21"},"nativeSrc":"28515:83:21","nodeType":"YulFunctionCall","src":"28515:83:21"}],"functionName":{"name":"or","nativeSrc":"28509:2:21","nodeType":"YulIdentifier","src":"28509:2:21"},"nativeSrc":"28509:90:21","nodeType":"YulFunctionCall","src":"28509:90:21"},"variableNames":[{"name":"r","nativeSrc":"28504:1:21","nodeType":"YulIdentifier","src":"28504:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4956,"isOffset":false,"isSlot":false,"src":"28504:1:21","valueSize":1},{"declaration":4956,"isOffset":false,"isSlot":false,"src":"28512:1:21","valueSize":1},{"declaration":4956,"isOffset":false,"isSlot":false,"src":"28524:1:21","valueSize":1},{"declaration":4953,"isOffset":false,"isSlot":false,"src":"28527:1:21","valueSize":1}],"flags":["memory-safe"],"id":5039,"nodeType":"InlineAssembly","src":"28465:144:21"}]},"documentation":{"id":4951,"nodeType":"StructuredDocumentation","src":"26098:119:21","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5041,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:21","nodeType":"FunctionDefinition","parameters":{"id":4954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"mutability":"mutable","name":"x","nameLocation":"26244:1:21","nodeType":"VariableDeclaration","scope":5041,"src":"26236:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:21"},"returnParameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"r","nameLocation":"26278:1:21","nodeType":"VariableDeclaration","scope":5041,"src":"26270:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:21"},"scope":5372,"src":"26222:2393:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5074,"nodeType":"Block","src":"28848:175:21","statements":[{"id":5073,"nodeType":"UncheckedBlock","src":"28858:159:21","statements":[{"assignments":[5053],"declarations":[{"constant":false,"id":5053,"mutability":"mutable","name":"result","nameLocation":"28890:6:21","nodeType":"VariableDeclaration","scope":5073,"src":"28882:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5052,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5057,"initialValue":{"arguments":[{"id":5055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"28904:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5054,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5041,5075],"referencedDeclaration":5041,"src":"28899:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"28931:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5062,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"28973:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}],"id":5061,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"28956:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3763_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5065,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"28991:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"29000:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5059,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"28940:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"28940:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5051,"id":5072,"nodeType":"Return","src":"28924:82:21"}]}]},"documentation":{"id":5042,"nodeType":"StructuredDocumentation","src":"28621:142:21","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5075,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:21","nodeType":"FunctionDefinition","parameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5044,"mutability":"mutable","name":"value","nameLocation":"28790:5:21","nodeType":"VariableDeclaration","scope":5075,"src":"28782:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5043,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5047,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:21","nodeType":"VariableDeclaration","scope":5075,"src":"28797:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"},"typeName":{"id":5046,"nodeType":"UserDefinedTypeName","pathNode":{"id":5045,"name":"Rounding","nameLocations":["28797:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3763,"src":"28797:8:21"},"referencedDeclaration":3763,"src":"28797:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:21"},"returnParameters":{"id":5051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5075,"src":"28839:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:21"},"scope":5372,"src":"28768:255:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5203,"nodeType":"Block","src":"29216:854:21","statements":[{"assignments":[5084],"declarations":[{"constant":false,"id":5084,"mutability":"mutable","name":"result","nameLocation":"29234:6:21","nodeType":"VariableDeclaration","scope":5203,"src":"29226:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5086,"initialValue":{"hexValue":"30","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:21"},{"id":5200,"nodeType":"UncheckedBlock","src":"29254:787:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29282:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5103,"nodeType":"IfStatement","src":"29278:103:21","trueBody":{"id":5102,"nodeType":"Block","src":"29301:80:21","statements":[{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29319:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5097,"nodeType":"ExpressionStatement","src":"29319:17:21"},{"expression":{"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"29354:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5101,"nodeType":"ExpressionStatement","src":"29354:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29398:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5120,"nodeType":"IfStatement","src":"29394:103:21","trueBody":{"id":5119,"nodeType":"Block","src":"29417:80:21","statements":[{"expression":{"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29435:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5114,"nodeType":"ExpressionStatement","src":"29435:17:21"},{"expression":{"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5115,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"29470:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5118,"nodeType":"ExpressionStatement","src":"29470:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29514:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5137,"nodeType":"IfStatement","src":"29510:103:21","trueBody":{"id":5136,"nodeType":"Block","src":"29533:80:21","statements":[{"expression":{"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29551:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5131,"nodeType":"ExpressionStatement","src":"29551:17:21"},{"expression":{"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"29586:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5135,"nodeType":"ExpressionStatement","src":"29586:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29630:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5154,"nodeType":"IfStatement","src":"29626:100:21","trueBody":{"id":5153,"nodeType":"Block","src":"29648:78:21","statements":[{"expression":{"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29666:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5148,"nodeType":"ExpressionStatement","src":"29666:16:21"},{"expression":{"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"29700:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5152,"nodeType":"ExpressionStatement","src":"29700:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29743:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5171,"nodeType":"IfStatement","src":"29739:100:21","trueBody":{"id":5170,"nodeType":"Block","src":"29761:78:21","statements":[{"expression":{"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29779:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5165,"nodeType":"ExpressionStatement","src":"29779:16:21"},{"expression":{"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"29813:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5169,"nodeType":"ExpressionStatement","src":"29813:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29856:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5188,"nodeType":"IfStatement","src":"29852:100:21","trueBody":{"id":5187,"nodeType":"Block","src":"29874:78:21","statements":[{"expression":{"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29892:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5182,"nodeType":"ExpressionStatement","src":"29892:16:21"},{"expression":{"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"29926:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5186,"nodeType":"ExpressionStatement","src":"29926:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29969:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5199,"nodeType":"IfStatement","src":"29965:66:21","trueBody":{"id":5198,"nodeType":"Block","src":"29987:44:21","statements":[{"expression":{"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"30005:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5197,"nodeType":"ExpressionStatement","src":"30005:11:21"}]}}]},{"expression":{"id":5201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"30057:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5082,"id":5202,"nodeType":"Return","src":"30050:13:21"}]},"documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"29029:120:21","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5204,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:21","nodeType":"FunctionDefinition","parameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"value","nameLocation":"29177:5:21","nodeType":"VariableDeclaration","scope":5204,"src":"29169:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5077,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:21"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5204,"src":"29207:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5080,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:21"},"scope":5372,"src":"29154:916:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5237,"nodeType":"Block","src":"30305:177:21","statements":[{"id":5236,"nodeType":"UncheckedBlock","src":"30315:161:21","statements":[{"assignments":[5216],"declarations":[{"constant":false,"id":5216,"mutability":"mutable","name":"result","nameLocation":"30347:6:21","nodeType":"VariableDeclaration","scope":5236,"src":"30339:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5215,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5220,"initialValue":{"arguments":[{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"30362:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5217,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5204,5238],"referencedDeclaration":5204,"src":"30356:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"30389:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5225,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"30431:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}],"id":5224,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"30414:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3763_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"30450:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"30459:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5222,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"30398:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"30398:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5214,"id":5235,"nodeType":"Return","src":"30382:83:21"}]}]},"documentation":{"id":5205,"nodeType":"StructuredDocumentation","src":"30076:143:21","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5238,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:21","nodeType":"FunctionDefinition","parameters":{"id":5211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"value","nameLocation":"30247:5:21","nodeType":"VariableDeclaration","scope":5238,"src":"30239:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5206,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5210,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:21","nodeType":"VariableDeclaration","scope":5238,"src":"30254:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"},"typeName":{"id":5209,"nodeType":"UserDefinedTypeName","pathNode":{"id":5208,"name":"Rounding","nameLocations":["30254:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3763,"src":"30254:8:21"},"referencedDeclaration":3763,"src":"30254:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:21"},"returnParameters":{"id":5214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5238,"src":"30296:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5212,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:21"},"scope":5372,"src":"30224:258:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5314,"nodeType":"Block","src":"30800:675:21","statements":[{"expression":{"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5246,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"30882:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5249,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"30902:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5247,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"30886:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"30886:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5256,"nodeType":"ExpressionStatement","src":"30882:64:21"},{"expression":{"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5257,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"31022:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5260,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"31044:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5261,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"31049:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5258,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"31027:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"31027:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:21","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5270,"nodeType":"ExpressionStatement","src":"31022:56:21"},{"expression":{"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5271,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"31153:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5274,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"31175:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5275,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"31180:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5272,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"31158:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"31158:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5284,"nodeType":"ExpressionStatement","src":"31153:48:21"},{"expression":{"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5285,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"31276:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5288,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"31298:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5289,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"31303:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5286,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"31281:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"31281:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5298,"nodeType":"ExpressionStatement","src":"31276:44:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5299,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"31426:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5305,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"31453:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5306,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"31458:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5303,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"31436:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"31436:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5245,"id":5313,"nodeType":"Return","src":"31418:50:21"}]},"documentation":{"id":5239,"nodeType":"StructuredDocumentation","src":"30488:246:21","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5315,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:21","nodeType":"FunctionDefinition","parameters":{"id":5242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5241,"mutability":"mutable","name":"x","nameLocation":"30763:1:21","nodeType":"VariableDeclaration","scope":5315,"src":"30755:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5240,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:21"},"returnParameters":{"id":5245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"r","nameLocation":"30797:1:21","nodeType":"VariableDeclaration","scope":5315,"src":"30789:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5243,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:21"},"scope":5372,"src":"30739:736:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5351,"nodeType":"Block","src":"31712:184:21","statements":[{"id":5350,"nodeType":"UncheckedBlock","src":"31722:168:21","statements":[{"assignments":[5327],"declarations":[{"constant":false,"id":5327,"mutability":"mutable","name":"result","nameLocation":"31754:6:21","nodeType":"VariableDeclaration","scope":5350,"src":"31746:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5326,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5331,"initialValue":{"arguments":[{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"31770:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5328,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5315,5352],"referencedDeclaration":5315,"src":"31763:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"31797:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5336,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"31839:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}],"id":5335,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"31822:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3763_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"31858:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"31873:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5333,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"31806:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"31806:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5325,"id":5349,"nodeType":"Return","src":"31790:89:21"}]}]},"documentation":{"id":5316,"nodeType":"StructuredDocumentation","src":"31481:144:21","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5352,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:21","nodeType":"FunctionDefinition","parameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"value","nameLocation":"31654:5:21","nodeType":"VariableDeclaration","scope":5352,"src":"31646:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5321,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:21","nodeType":"VariableDeclaration","scope":5352,"src":"31661:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"},"typeName":{"id":5320,"nodeType":"UserDefinedTypeName","pathNode":{"id":5319,"name":"Rounding","nameLocations":["31661:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3763,"src":"31661:8:21"},"referencedDeclaration":3763,"src":"31661:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:21"},"returnParameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5352,"src":"31703:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5323,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:21"},"scope":5372,"src":"31630:266:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5370,"nodeType":"Block","src":"32094:48:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5363,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"32117:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}],"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5361,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:21","typeDescriptions":{}}},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5360,"id":5369,"nodeType":"Return","src":"32104:31:21"}]},"documentation":{"id":5353,"nodeType":"StructuredDocumentation","src":"31902:113:21","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5371,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:21","nodeType":"FunctionDefinition","parameters":{"id":5357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5356,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:21","nodeType":"VariableDeclaration","scope":5371,"src":"32046:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"},"typeName":{"id":5355,"nodeType":"UserDefinedTypeName","pathNode":{"id":5354,"name":"Rounding","nameLocations":["32046:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3763,"src":"32046:8:21"},"referencedDeclaration":3763,"src":"32046:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3763","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:21"},"returnParameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5371,"src":"32088:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5358,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:21"},"scope":5372,"src":"32020:122:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5373,"src":"281:31863:21","usedErrors":[],"usedEvents":[]}],"src":"103:32042:21"},"id":21},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7137]},"id":7138,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5374,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5375,"nodeType":"StructuredDocumentation","src":"218:550:22","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7137,"linearizedBaseContracts":[7137],"name":"SafeCast","nameLocation":"777:8:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5376,"nodeType":"StructuredDocumentation","src":"792:68:22","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5382,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:22","nodeType":"ErrorDefinition","parameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5378,"mutability":"mutable","name":"bits","nameLocation":"908:4:22","nodeType":"VariableDeclaration","scope":5382,"src":"902:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5377,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5380,"mutability":"mutable","name":"value","nameLocation":"922:5:22","nodeType":"VariableDeclaration","scope":5382,"src":"914:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:22"},"src":"865:64:22"},{"documentation":{"id":5383,"nodeType":"StructuredDocumentation","src":"935:75:22","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5387,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:22","nodeType":"ErrorDefinition","parameters":{"id":5386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5385,"mutability":"mutable","name":"value","nameLocation":"1056:5:22","nodeType":"VariableDeclaration","scope":5387,"src":"1049:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5384,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:22"},"src":"1015:48:22"},{"documentation":{"id":5388,"nodeType":"StructuredDocumentation","src":"1069:67:22","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5394,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:22","nodeType":"ErrorDefinition","parameters":{"id":5393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"bits","nameLocation":"1183:4:22","nodeType":"VariableDeclaration","scope":5394,"src":"1177:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5389,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5392,"mutability":"mutable","name":"value","nameLocation":"1196:5:22","nodeType":"VariableDeclaration","scope":5394,"src":"1189:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5391,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:22"},"src":"1141:62:22"},{"documentation":{"id":5395,"nodeType":"StructuredDocumentation","src":"1209:75:22","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5399,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:22","nodeType":"ErrorDefinition","parameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"value","nameLocation":"1331:5:22","nodeType":"VariableDeclaration","scope":5399,"src":"1323:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:22"},"src":"1289:49:22"},{"body":{"id":5426,"nodeType":"Block","src":"1695:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"1709:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5409,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5408,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:22","memberName":"max","nodeType":"MemberAccess","src":"1717:17:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5420,"nodeType":"IfStatement","src":"1705:105:22","trueBody":{"id":5419,"nodeType":"Block","src":"1736:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"1793:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5414,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"1757:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5418,"nodeType":"RevertStatement","src":"1750:49:22"}]}},{"expression":{"arguments":[{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"1834:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5421,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:22","typeDescriptions":{}}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5406,"id":5425,"nodeType":"Return","src":"1819:21:22"}]},"documentation":{"id":5400,"nodeType":"StructuredDocumentation","src":"1344:280:22","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5427,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:22","nodeType":"FunctionDefinition","parameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"value","nameLocation":"1656:5:22","nodeType":"VariableDeclaration","scope":5427,"src":"1648:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:22"},"returnParameters":{"id":5406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5427,"src":"1686:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5404,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:22"},"scope":7137,"src":"1629:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5454,"nodeType":"Block","src":"2204:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"2218:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5437,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5436,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:22","memberName":"max","nodeType":"MemberAccess","src":"2226:17:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5448,"nodeType":"IfStatement","src":"2214:105:22","trueBody":{"id":5447,"nodeType":"Block","src":"2245:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"2302:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5442,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"2266:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5446,"nodeType":"RevertStatement","src":"2259:49:22"}]}},{"expression":{"arguments":[{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"2343:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5449,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:22","typeDescriptions":{}}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5434,"id":5453,"nodeType":"Return","src":"2328:21:22"}]},"documentation":{"id":5428,"nodeType":"StructuredDocumentation","src":"1853:280:22","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5455,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:22","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"value","nameLocation":"2165:5:22","nodeType":"VariableDeclaration","scope":5455,"src":"2157:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:22"},"returnParameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5455,"src":"2195:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5432,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:22"},"scope":7137,"src":"2138:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5482,"nodeType":"Block","src":"2713:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"2727:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5465,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5464,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:22","memberName":"max","nodeType":"MemberAccess","src":"2735:17:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5476,"nodeType":"IfStatement","src":"2723:105:22","trueBody":{"id":5475,"nodeType":"Block","src":"2754:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"2811:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5470,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"2775:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5474,"nodeType":"RevertStatement","src":"2768:49:22"}]}},{"expression":{"arguments":[{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"2852:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5477,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:22","typeDescriptions":{}}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5462,"id":5481,"nodeType":"Return","src":"2837:21:22"}]},"documentation":{"id":5456,"nodeType":"StructuredDocumentation","src":"2362:280:22","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5483,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:22","nodeType":"FunctionDefinition","parameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"value","nameLocation":"2674:5:22","nodeType":"VariableDeclaration","scope":5483,"src":"2666:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:22"},"returnParameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5483,"src":"2704:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5460,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:22"},"scope":7137,"src":"2647:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5510,"nodeType":"Block","src":"3222:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"3236:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5493,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5492,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:22","memberName":"max","nodeType":"MemberAccess","src":"3244:17:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5504,"nodeType":"IfStatement","src":"3232:105:22","trueBody":{"id":5503,"nodeType":"Block","src":"3263:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"3320:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5498,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"3284:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5502,"nodeType":"RevertStatement","src":"3277:49:22"}]}},{"expression":{"arguments":[{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"3361:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5505,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:22","typeDescriptions":{}}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5490,"id":5509,"nodeType":"Return","src":"3346:21:22"}]},"documentation":{"id":5484,"nodeType":"StructuredDocumentation","src":"2871:280:22","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5511,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:22","nodeType":"FunctionDefinition","parameters":{"id":5487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5486,"mutability":"mutable","name":"value","nameLocation":"3183:5:22","nodeType":"VariableDeclaration","scope":5511,"src":"3175:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:22"},"returnParameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5511,"src":"3213:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5488,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:22"},"scope":7137,"src":"3156:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5538,"nodeType":"Block","src":"3731:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"3745:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5521,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5520,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:22","memberName":"max","nodeType":"MemberAccess","src":"3753:17:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5532,"nodeType":"IfStatement","src":"3741:105:22","trueBody":{"id":5531,"nodeType":"Block","src":"3772:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"3829:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5526,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"3793:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5530,"nodeType":"RevertStatement","src":"3786:49:22"}]}},{"expression":{"arguments":[{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"3870:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5533,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:22","typeDescriptions":{}}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5518,"id":5537,"nodeType":"Return","src":"3855:21:22"}]},"documentation":{"id":5512,"nodeType":"StructuredDocumentation","src":"3380:280:22","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5539,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:22","nodeType":"FunctionDefinition","parameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"value","nameLocation":"3692:5:22","nodeType":"VariableDeclaration","scope":5539,"src":"3684:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:22"},"returnParameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5539,"src":"3722:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5516,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:22"},"scope":7137,"src":"3665:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5566,"nodeType":"Block","src":"4240:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"4254:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5549,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5548,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:22","memberName":"max","nodeType":"MemberAccess","src":"4262:17:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5560,"nodeType":"IfStatement","src":"4250:105:22","trueBody":{"id":5559,"nodeType":"Block","src":"4281:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"4338:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5554,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"4302:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5558,"nodeType":"RevertStatement","src":"4295:49:22"}]}},{"expression":{"arguments":[{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"4379:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5561,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:22","typeDescriptions":{}}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5546,"id":5565,"nodeType":"Return","src":"4364:21:22"}]},"documentation":{"id":5540,"nodeType":"StructuredDocumentation","src":"3889:280:22","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5567,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:22","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"value","nameLocation":"4201:5:22","nodeType":"VariableDeclaration","scope":5567,"src":"4193:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:22"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5567,"src":"4231:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5544,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:22"},"scope":7137,"src":"4174:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5594,"nodeType":"Block","src":"4749:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"4763:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5577,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:22","memberName":"max","nodeType":"MemberAccess","src":"4771:17:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5588,"nodeType":"IfStatement","src":"4759:105:22","trueBody":{"id":5587,"nodeType":"Block","src":"4790:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"4847:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5582,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"4811:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5586,"nodeType":"RevertStatement","src":"4804:49:22"}]}},{"expression":{"arguments":[{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"4888:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5589,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:22","typeDescriptions":{}}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5574,"id":5593,"nodeType":"Return","src":"4873:21:22"}]},"documentation":{"id":5568,"nodeType":"StructuredDocumentation","src":"4398:280:22","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5595,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:22","nodeType":"FunctionDefinition","parameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"value","nameLocation":"4710:5:22","nodeType":"VariableDeclaration","scope":5595,"src":"4702:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:22"},"returnParameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5595,"src":"4740:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5572,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:22"},"scope":7137,"src":"4683:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5622,"nodeType":"Block","src":"5258:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"5272:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5605,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5604,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:22","memberName":"max","nodeType":"MemberAccess","src":"5280:17:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5616,"nodeType":"IfStatement","src":"5268:105:22","trueBody":{"id":5615,"nodeType":"Block","src":"5299:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"5356:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5610,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"5320:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5614,"nodeType":"RevertStatement","src":"5313:49:22"}]}},{"expression":{"arguments":[{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"5397:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5617,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:22","typeDescriptions":{}}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5602,"id":5621,"nodeType":"Return","src":"5382:21:22"}]},"documentation":{"id":5596,"nodeType":"StructuredDocumentation","src":"4907:280:22","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5623,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:22","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"value","nameLocation":"5219:5:22","nodeType":"VariableDeclaration","scope":5623,"src":"5211:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:22"},"returnParameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5623,"src":"5249:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5600,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:22"},"scope":7137,"src":"5192:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5650,"nodeType":"Block","src":"5767:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"5781:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5633,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5632,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:22","memberName":"max","nodeType":"MemberAccess","src":"5789:17:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5644,"nodeType":"IfStatement","src":"5777:105:22","trueBody":{"id":5643,"nodeType":"Block","src":"5808:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"5865:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5638,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"5829:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5642,"nodeType":"RevertStatement","src":"5822:49:22"}]}},{"expression":{"arguments":[{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"5906:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5645,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:22","typeDescriptions":{}}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5630,"id":5649,"nodeType":"Return","src":"5891:21:22"}]},"documentation":{"id":5624,"nodeType":"StructuredDocumentation","src":"5416:280:22","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5651,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:22","nodeType":"FunctionDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"value","nameLocation":"5728:5:22","nodeType":"VariableDeclaration","scope":5651,"src":"5720:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:22"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5651,"src":"5758:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5628,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:22"},"scope":7137,"src":"5701:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5678,"nodeType":"Block","src":"6276:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"6290:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5661,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:22","memberName":"max","nodeType":"MemberAccess","src":"6298:17:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5672,"nodeType":"IfStatement","src":"6286:105:22","trueBody":{"id":5671,"nodeType":"Block","src":"6317:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"6374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5666,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"6338:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5670,"nodeType":"RevertStatement","src":"6331:49:22"}]}},{"expression":{"arguments":[{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"6415:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5673,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:22","typeDescriptions":{}}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5658,"id":5677,"nodeType":"Return","src":"6400:21:22"}]},"documentation":{"id":5652,"nodeType":"StructuredDocumentation","src":"5925:280:22","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5679,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:22","nodeType":"FunctionDefinition","parameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"value","nameLocation":"6237:5:22","nodeType":"VariableDeclaration","scope":5679,"src":"6229:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5653,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:22"},"returnParameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"6267:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5656,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:22"},"scope":7137,"src":"6210:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5706,"nodeType":"Block","src":"6785:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"6799:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5689,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5688,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:22","memberName":"max","nodeType":"MemberAccess","src":"6807:17:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5700,"nodeType":"IfStatement","src":"6795:105:22","trueBody":{"id":5699,"nodeType":"Block","src":"6826:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"6883:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5694,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"6847:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5698,"nodeType":"RevertStatement","src":"6840:49:22"}]}},{"expression":{"arguments":[{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"6924:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5701,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:22","typeDescriptions":{}}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5686,"id":5705,"nodeType":"Return","src":"6909:21:22"}]},"documentation":{"id":5680,"nodeType":"StructuredDocumentation","src":"6434:280:22","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5707,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:22","nodeType":"FunctionDefinition","parameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"value","nameLocation":"6746:5:22","nodeType":"VariableDeclaration","scope":5707,"src":"6738:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:22"},"returnParameters":{"id":5686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5707,"src":"6776:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5684,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:22"},"scope":7137,"src":"6719:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5734,"nodeType":"Block","src":"7294:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"7308:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5717,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5716,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:22","memberName":"max","nodeType":"MemberAccess","src":"7316:17:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5728,"nodeType":"IfStatement","src":"7304:105:22","trueBody":{"id":5727,"nodeType":"Block","src":"7335:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"7392:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5722,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"7356:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5726,"nodeType":"RevertStatement","src":"7349:49:22"}]}},{"expression":{"arguments":[{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"7433:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5729,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:22","typeDescriptions":{}}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5714,"id":5733,"nodeType":"Return","src":"7418:21:22"}]},"documentation":{"id":5708,"nodeType":"StructuredDocumentation","src":"6943:280:22","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5735,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:22","nodeType":"FunctionDefinition","parameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"value","nameLocation":"7255:5:22","nodeType":"VariableDeclaration","scope":5735,"src":"7247:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:22"},"returnParameters":{"id":5714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5735,"src":"7285:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5712,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:22"},"scope":7137,"src":"7228:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5762,"nodeType":"Block","src":"7803:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"7817:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5745,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5744,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:22","memberName":"max","nodeType":"MemberAccess","src":"7825:17:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5756,"nodeType":"IfStatement","src":"7813:105:22","trueBody":{"id":5755,"nodeType":"Block","src":"7844:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"7901:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5750,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"7865:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5754,"nodeType":"RevertStatement","src":"7858:49:22"}]}},{"expression":{"arguments":[{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"7942:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5757,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:22","typeDescriptions":{}}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5742,"id":5761,"nodeType":"Return","src":"7927:21:22"}]},"documentation":{"id":5736,"nodeType":"StructuredDocumentation","src":"7452:280:22","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5763,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:22","nodeType":"FunctionDefinition","parameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"value","nameLocation":"7764:5:22","nodeType":"VariableDeclaration","scope":5763,"src":"7756:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5737,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:22"},"returnParameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5763,"src":"7794:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5740,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:22"},"scope":7137,"src":"7737:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5790,"nodeType":"Block","src":"8312:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"8326:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5773,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5772,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:22","memberName":"max","nodeType":"MemberAccess","src":"8334:17:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5784,"nodeType":"IfStatement","src":"8322:105:22","trueBody":{"id":5783,"nodeType":"Block","src":"8353:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"8410:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5778,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"8374:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5782,"nodeType":"RevertStatement","src":"8367:49:22"}]}},{"expression":{"arguments":[{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"8451:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5785,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:22","typeDescriptions":{}}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5770,"id":5789,"nodeType":"Return","src":"8436:21:22"}]},"documentation":{"id":5764,"nodeType":"StructuredDocumentation","src":"7961:280:22","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5791,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:22","nodeType":"FunctionDefinition","parameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"value","nameLocation":"8273:5:22","nodeType":"VariableDeclaration","scope":5791,"src":"8265:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5765,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:22"},"returnParameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5791,"src":"8303:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5768,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:22"},"scope":7137,"src":"8246:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5818,"nodeType":"Block","src":"8821:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"8835:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5801,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5800,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:22","memberName":"max","nodeType":"MemberAccess","src":"8843:17:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5812,"nodeType":"IfStatement","src":"8831:105:22","trueBody":{"id":5811,"nodeType":"Block","src":"8862:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"8919:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5806,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"8883:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5810,"nodeType":"RevertStatement","src":"8876:49:22"}]}},{"expression":{"arguments":[{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"8960:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5813,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:22","typeDescriptions":{}}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5798,"id":5817,"nodeType":"Return","src":"8945:21:22"}]},"documentation":{"id":5792,"nodeType":"StructuredDocumentation","src":"8470:280:22","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5819,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:22","nodeType":"FunctionDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5794,"mutability":"mutable","name":"value","nameLocation":"8782:5:22","nodeType":"VariableDeclaration","scope":5819,"src":"8774:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5793,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:22"},"returnParameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5819,"src":"8812:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5796,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:22"},"scope":7137,"src":"8755:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5846,"nodeType":"Block","src":"9330:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"9344:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5829,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5828,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:22","memberName":"max","nodeType":"MemberAccess","src":"9352:17:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5840,"nodeType":"IfStatement","src":"9340:105:22","trueBody":{"id":5839,"nodeType":"Block","src":"9371:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"9428:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5834,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"9392:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5838,"nodeType":"RevertStatement","src":"9385:49:22"}]}},{"expression":{"arguments":[{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"9469:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5841,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:22","typeDescriptions":{}}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5826,"id":5845,"nodeType":"Return","src":"9454:21:22"}]},"documentation":{"id":5820,"nodeType":"StructuredDocumentation","src":"8979:280:22","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5847,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:22","nodeType":"FunctionDefinition","parameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"value","nameLocation":"9291:5:22","nodeType":"VariableDeclaration","scope":5847,"src":"9283:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5821,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:22"},"returnParameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5847,"src":"9321:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5824,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:22"},"scope":7137,"src":"9264:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5874,"nodeType":"Block","src":"9839:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"9853:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5857,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5856,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:22","memberName":"max","nodeType":"MemberAccess","src":"9861:17:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5868,"nodeType":"IfStatement","src":"9849:105:22","trueBody":{"id":5867,"nodeType":"Block","src":"9880:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"9937:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5862,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"9901:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5866,"nodeType":"RevertStatement","src":"9894:49:22"}]}},{"expression":{"arguments":[{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"9978:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5869,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:22","typeDescriptions":{}}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5854,"id":5873,"nodeType":"Return","src":"9963:21:22"}]},"documentation":{"id":5848,"nodeType":"StructuredDocumentation","src":"9488:280:22","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5875,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:22","nodeType":"FunctionDefinition","parameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"mutability":"mutable","name":"value","nameLocation":"9800:5:22","nodeType":"VariableDeclaration","scope":5875,"src":"9792:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5849,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:22"},"returnParameters":{"id":5854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5875,"src":"9830:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5852,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:22"},"scope":7137,"src":"9773:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5902,"nodeType":"Block","src":"10348:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10362:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5885,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5884,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:22","memberName":"max","nodeType":"MemberAccess","src":"10370:17:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5896,"nodeType":"IfStatement","src":"10358:105:22","trueBody":{"id":5895,"nodeType":"Block","src":"10389:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10446:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5890,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"10410:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5894,"nodeType":"RevertStatement","src":"10403:49:22"}]}},{"expression":{"arguments":[{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10487:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5897,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:22","typeDescriptions":{}}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5882,"id":5901,"nodeType":"Return","src":"10472:21:22"}]},"documentation":{"id":5876,"nodeType":"StructuredDocumentation","src":"9997:280:22","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5903,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:22","nodeType":"FunctionDefinition","parameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"value","nameLocation":"10309:5:22","nodeType":"VariableDeclaration","scope":5903,"src":"10301:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5877,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:22"},"returnParameters":{"id":5882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5903,"src":"10339:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5880,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:22"},"scope":7137,"src":"10282:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5930,"nodeType":"Block","src":"10857:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"10871:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5913,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:22","memberName":"max","nodeType":"MemberAccess","src":"10879:17:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5924,"nodeType":"IfStatement","src":"10867:105:22","trueBody":{"id":5923,"nodeType":"Block","src":"10898:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"10955:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5918,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"10919:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5922,"nodeType":"RevertStatement","src":"10912:49:22"}]}},{"expression":{"arguments":[{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"10996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5925,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:22","typeDescriptions":{}}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5910,"id":5929,"nodeType":"Return","src":"10981:21:22"}]},"documentation":{"id":5904,"nodeType":"StructuredDocumentation","src":"10506:280:22","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5931,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:22","nodeType":"FunctionDefinition","parameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"value","nameLocation":"10818:5:22","nodeType":"VariableDeclaration","scope":5931,"src":"10810:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5905,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:22"},"returnParameters":{"id":5910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5931,"src":"10848:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5908,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:22"},"scope":7137,"src":"10791:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5958,"nodeType":"Block","src":"11360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"11374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5941,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5940,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:22","memberName":"max","nodeType":"MemberAccess","src":"11382:16:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5952,"nodeType":"IfStatement","src":"11370:103:22","trueBody":{"id":5951,"nodeType":"Block","src":"11400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"11456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5946,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"11421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5950,"nodeType":"RevertStatement","src":"11414:48:22"}]}},{"expression":{"arguments":[{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"11496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5953,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:22","typeDescriptions":{}}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5938,"id":5957,"nodeType":"Return","src":"11482:20:22"}]},"documentation":{"id":5932,"nodeType":"StructuredDocumentation","src":"11015:276:22","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5959,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:22","nodeType":"FunctionDefinition","parameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"value","nameLocation":"11322:5:22","nodeType":"VariableDeclaration","scope":5959,"src":"11314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:22"},"returnParameters":{"id":5938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5959,"src":"11352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5936,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:22"},"scope":7137,"src":"11296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5986,"nodeType":"Block","src":"11860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"11874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5969,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5968,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:22","memberName":"max","nodeType":"MemberAccess","src":"11882:16:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5980,"nodeType":"IfStatement","src":"11870:103:22","trueBody":{"id":5979,"nodeType":"Block","src":"11900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"11956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5974,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"11921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5978,"nodeType":"RevertStatement","src":"11914:48:22"}]}},{"expression":{"arguments":[{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"11996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5981,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:22","typeDescriptions":{}}},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5966,"id":5985,"nodeType":"Return","src":"11982:20:22"}]},"documentation":{"id":5960,"nodeType":"StructuredDocumentation","src":"11515:276:22","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5987,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:22","nodeType":"FunctionDefinition","parameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"value","nameLocation":"11822:5:22","nodeType":"VariableDeclaration","scope":5987,"src":"11814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5961,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:22"},"returnParameters":{"id":5966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5987,"src":"11852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5964,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:22"},"scope":7137,"src":"11796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6014,"nodeType":"Block","src":"12360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"12374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5997,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5996,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:22","memberName":"max","nodeType":"MemberAccess","src":"12382:16:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6008,"nodeType":"IfStatement","src":"12370:103:22","trueBody":{"id":6007,"nodeType":"Block","src":"12400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"12456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6002,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"12421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6006,"nodeType":"RevertStatement","src":"12414:48:22"}]}},{"expression":{"arguments":[{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"12496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6009,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:22","typeDescriptions":{}}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5994,"id":6013,"nodeType":"Return","src":"12482:20:22"}]},"documentation":{"id":5988,"nodeType":"StructuredDocumentation","src":"12015:276:22","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6015,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:22","nodeType":"FunctionDefinition","parameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"value","nameLocation":"12322:5:22","nodeType":"VariableDeclaration","scope":6015,"src":"12314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5989,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:22"},"returnParameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6015,"src":"12352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5992,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:22"},"scope":7137,"src":"12296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6042,"nodeType":"Block","src":"12860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"12874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6025,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6024,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:22","memberName":"max","nodeType":"MemberAccess","src":"12882:16:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6036,"nodeType":"IfStatement","src":"12870:103:22","trueBody":{"id":6035,"nodeType":"Block","src":"12900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"12956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6030,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"12921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6034,"nodeType":"RevertStatement","src":"12914:48:22"}]}},{"expression":{"arguments":[{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"12996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6037,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:22","typeDescriptions":{}}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6022,"id":6041,"nodeType":"Return","src":"12982:20:22"}]},"documentation":{"id":6016,"nodeType":"StructuredDocumentation","src":"12515:276:22","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6043,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6018,"mutability":"mutable","name":"value","nameLocation":"12822:5:22","nodeType":"VariableDeclaration","scope":6043,"src":"12814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6017,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:22"},"returnParameters":{"id":6022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6043,"src":"12852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6020,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:22"},"scope":7137,"src":"12796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6070,"nodeType":"Block","src":"13360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"13374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6053,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6052,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:22","memberName":"max","nodeType":"MemberAccess","src":"13382:16:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6064,"nodeType":"IfStatement","src":"13370:103:22","trueBody":{"id":6063,"nodeType":"Block","src":"13400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"13456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6058,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"13421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6062,"nodeType":"RevertStatement","src":"13414:48:22"}]}},{"expression":{"arguments":[{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"13496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6065,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:22","typeDescriptions":{}}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6050,"id":6069,"nodeType":"Return","src":"13482:20:22"}]},"documentation":{"id":6044,"nodeType":"StructuredDocumentation","src":"13015:276:22","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6071,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"value","nameLocation":"13322:5:22","nodeType":"VariableDeclaration","scope":6071,"src":"13314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6045,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:22"},"returnParameters":{"id":6050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6071,"src":"13352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6048,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:22"},"scope":7137,"src":"13296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6098,"nodeType":"Block","src":"13860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"13874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6081,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6080,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:22","memberName":"max","nodeType":"MemberAccess","src":"13882:16:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6092,"nodeType":"IfStatement","src":"13870:103:22","trueBody":{"id":6091,"nodeType":"Block","src":"13900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"13956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6086,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"13921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6090,"nodeType":"RevertStatement","src":"13914:48:22"}]}},{"expression":{"arguments":[{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"13996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6093,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:22","typeDescriptions":{}}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6078,"id":6097,"nodeType":"Return","src":"13982:20:22"}]},"documentation":{"id":6072,"nodeType":"StructuredDocumentation","src":"13515:276:22","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6099,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"value","nameLocation":"13822:5:22","nodeType":"VariableDeclaration","scope":6099,"src":"13814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6073,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:22"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6099,"src":"13852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6076,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:22"},"scope":7137,"src":"13796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6126,"nodeType":"Block","src":"14360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"14374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6109,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6108,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:22","memberName":"max","nodeType":"MemberAccess","src":"14382:16:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6120,"nodeType":"IfStatement","src":"14370:103:22","trueBody":{"id":6119,"nodeType":"Block","src":"14400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"14456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6114,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"14421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6118,"nodeType":"RevertStatement","src":"14414:48:22"}]}},{"expression":{"arguments":[{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"14496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6121,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:22","typeDescriptions":{}}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6106,"id":6125,"nodeType":"Return","src":"14482:20:22"}]},"documentation":{"id":6100,"nodeType":"StructuredDocumentation","src":"14015:276:22","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6127,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6102,"mutability":"mutable","name":"value","nameLocation":"14322:5:22","nodeType":"VariableDeclaration","scope":6127,"src":"14314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6101,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:22"},"returnParameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6127,"src":"14352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6104,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:22"},"scope":7137,"src":"14296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6154,"nodeType":"Block","src":"14860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"14874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6137,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6136,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:22","memberName":"max","nodeType":"MemberAccess","src":"14882:16:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6148,"nodeType":"IfStatement","src":"14870:103:22","trueBody":{"id":6147,"nodeType":"Block","src":"14900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"14956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6142,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"14921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6146,"nodeType":"RevertStatement","src":"14914:48:22"}]}},{"expression":{"arguments":[{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"14996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6149,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:22","typeDescriptions":{}}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6134,"id":6153,"nodeType":"Return","src":"14982:20:22"}]},"documentation":{"id":6128,"nodeType":"StructuredDocumentation","src":"14515:276:22","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6155,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"value","nameLocation":"14822:5:22","nodeType":"VariableDeclaration","scope":6155,"src":"14814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6129,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:22"},"returnParameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6155,"src":"14852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6132,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:22"},"scope":7137,"src":"14796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6182,"nodeType":"Block","src":"15360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"15374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6165,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6164,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:22","memberName":"max","nodeType":"MemberAccess","src":"15382:16:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6176,"nodeType":"IfStatement","src":"15370:103:22","trueBody":{"id":6175,"nodeType":"Block","src":"15400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"15456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6170,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"15421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6174,"nodeType":"RevertStatement","src":"15414:48:22"}]}},{"expression":{"arguments":[{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"15496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6177,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:22","typeDescriptions":{}}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6162,"id":6181,"nodeType":"Return","src":"15482:20:22"}]},"documentation":{"id":6156,"nodeType":"StructuredDocumentation","src":"15015:276:22","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6183,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6158,"mutability":"mutable","name":"value","nameLocation":"15322:5:22","nodeType":"VariableDeclaration","scope":6183,"src":"15314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:22"},"returnParameters":{"id":6162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6183,"src":"15352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6160,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:22"},"scope":7137,"src":"15296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6210,"nodeType":"Block","src":"15860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"15874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6193,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6192,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:22","memberName":"max","nodeType":"MemberAccess","src":"15882:16:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6204,"nodeType":"IfStatement","src":"15870:103:22","trueBody":{"id":6203,"nodeType":"Block","src":"15900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"15956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6198,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"15921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6202,"nodeType":"RevertStatement","src":"15914:48:22"}]}},{"expression":{"arguments":[{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"15996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6205,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:22","typeDescriptions":{}}},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6190,"id":6209,"nodeType":"Return","src":"15982:20:22"}]},"documentation":{"id":6184,"nodeType":"StructuredDocumentation","src":"15515:276:22","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6211,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:22","nodeType":"FunctionDefinition","parameters":{"id":6187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6186,"mutability":"mutable","name":"value","nameLocation":"15822:5:22","nodeType":"VariableDeclaration","scope":6211,"src":"15814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6185,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:22"},"returnParameters":{"id":6190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6211,"src":"15852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6188,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:22"},"scope":7137,"src":"15796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6238,"nodeType":"Block","src":"16360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"16374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6221,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6220,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:22","memberName":"max","nodeType":"MemberAccess","src":"16382:16:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6232,"nodeType":"IfStatement","src":"16370:103:22","trueBody":{"id":6231,"nodeType":"Block","src":"16400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"16456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6226,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"16421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6230,"nodeType":"RevertStatement","src":"16414:48:22"}]}},{"expression":{"arguments":[{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"16496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6233,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:22","typeDescriptions":{}}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6218,"id":6237,"nodeType":"Return","src":"16482:20:22"}]},"documentation":{"id":6212,"nodeType":"StructuredDocumentation","src":"16015:276:22","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6239,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:22","nodeType":"FunctionDefinition","parameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"value","nameLocation":"16322:5:22","nodeType":"VariableDeclaration","scope":6239,"src":"16314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6213,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:22"},"returnParameters":{"id":6218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6239,"src":"16352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6216,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:22"},"scope":7137,"src":"16296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6266,"nodeType":"Block","src":"16854:146:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"16868:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6249,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6248,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:22","memberName":"max","nodeType":"MemberAccess","src":"16876:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6260,"nodeType":"IfStatement","src":"16864:101:22","trueBody":{"id":6259,"nodeType":"Block","src":"16893:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"16948:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6254,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"16914:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6258,"nodeType":"RevertStatement","src":"16907:47:22"}]}},{"expression":{"arguments":[{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"16987:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6261,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:22","typeDescriptions":{}}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6246,"id":6265,"nodeType":"Return","src":"16974:19:22"}]},"documentation":{"id":6240,"nodeType":"StructuredDocumentation","src":"16515:272:22","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6267,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:22","nodeType":"FunctionDefinition","parameters":{"id":6243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6242,"mutability":"mutable","name":"value","nameLocation":"16817:5:22","nodeType":"VariableDeclaration","scope":6267,"src":"16809:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6241,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:22"},"returnParameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6267,"src":"16847:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6244,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:22"},"scope":7137,"src":"16792:208:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6289,"nodeType":"Block","src":"17236:128:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"17250:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6283,"nodeType":"IfStatement","src":"17246:81:22","trueBody":{"id":6282,"nodeType":"Block","src":"17261:66:22","statements":[{"errorCall":{"arguments":[{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"17310:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6278,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"17282:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6281,"nodeType":"RevertStatement","src":"17275:41:22"}]}},{"expression":{"arguments":[{"id":6286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"17351:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6284,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:22","typeDescriptions":{}}},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6274,"id":6288,"nodeType":"Return","src":"17336:21:22"}]},"documentation":{"id":6268,"nodeType":"StructuredDocumentation","src":"17006:160:22","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6290,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:22","nodeType":"FunctionDefinition","parameters":{"id":6271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6270,"mutability":"mutable","name":"value","nameLocation":"17197:5:22","nodeType":"VariableDeclaration","scope":6290,"src":"17190:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6269,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:22"},"returnParameters":{"id":6274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6290,"src":"17227:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6272,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:22"},"scope":7137,"src":"17171:193:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6315,"nodeType":"Block","src":"17761:150:22","statements":[{"expression":{"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"17771:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"17791:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6299,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:22","typeDescriptions":{}}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6304,"nodeType":"ExpressionStatement","src":"17771:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"17811:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"17825:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6314,"nodeType":"IfStatement","src":"17807:98:22","trueBody":{"id":6313,"nodeType":"Block","src":"17832:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"17888:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6308,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"17853:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6312,"nodeType":"RevertStatement","src":"17846:48:22"}]}}]},"documentation":{"id":6291,"nodeType":"StructuredDocumentation","src":"17370:312:22","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6316,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:22","nodeType":"FunctionDefinition","parameters":{"id":6294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6293,"mutability":"mutable","name":"value","nameLocation":"17712:5:22","nodeType":"VariableDeclaration","scope":6316,"src":"17705:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6292,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:22"},"returnParameters":{"id":6297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6296,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:22","nodeType":"VariableDeclaration","scope":6316,"src":"17742:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6295,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:22"},"scope":7137,"src":"17687:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6341,"nodeType":"Block","src":"18308:150:22","statements":[{"expression":{"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6324,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"18318:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"18338:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6325,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:22","typeDescriptions":{}}},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6330,"nodeType":"ExpressionStatement","src":"18318:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6331,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"18358:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"18372:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6340,"nodeType":"IfStatement","src":"18354:98:22","trueBody":{"id":6339,"nodeType":"Block","src":"18379:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"18435:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6334,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"18400:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6338,"nodeType":"RevertStatement","src":"18393:48:22"}]}}]},"documentation":{"id":6317,"nodeType":"StructuredDocumentation","src":"17917:312:22","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6342,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:22","nodeType":"FunctionDefinition","parameters":{"id":6320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6319,"mutability":"mutable","name":"value","nameLocation":"18259:5:22","nodeType":"VariableDeclaration","scope":6342,"src":"18252:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6318,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:22"},"returnParameters":{"id":6323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:22","nodeType":"VariableDeclaration","scope":6342,"src":"18289:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6321,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:22"},"scope":7137,"src":"18234:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6367,"nodeType":"Block","src":"18855:150:22","statements":[{"expression":{"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"18865:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"18885:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6351,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:22","typeDescriptions":{}}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6356,"nodeType":"ExpressionStatement","src":"18865:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6357,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"18905:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"18919:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6366,"nodeType":"IfStatement","src":"18901:98:22","trueBody":{"id":6365,"nodeType":"Block","src":"18926:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"18982:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6360,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"18947:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6364,"nodeType":"RevertStatement","src":"18940:48:22"}]}}]},"documentation":{"id":6343,"nodeType":"StructuredDocumentation","src":"18464:312:22","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6368,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:22","nodeType":"FunctionDefinition","parameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"value","nameLocation":"18806:5:22","nodeType":"VariableDeclaration","scope":6368,"src":"18799:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6344,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:22"},"returnParameters":{"id":6349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:22","nodeType":"VariableDeclaration","scope":6368,"src":"18836:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6347,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:22"},"scope":7137,"src":"18781:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6393,"nodeType":"Block","src":"19402:150:22","statements":[{"expression":{"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6376,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"19412:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"19432:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6377,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:22","typeDescriptions":{}}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6382,"nodeType":"ExpressionStatement","src":"19412:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"19452:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"19466:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6392,"nodeType":"IfStatement","src":"19448:98:22","trueBody":{"id":6391,"nodeType":"Block","src":"19473:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"19529:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6386,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"19494:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6390,"nodeType":"RevertStatement","src":"19487:48:22"}]}}]},"documentation":{"id":6369,"nodeType":"StructuredDocumentation","src":"19011:312:22","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6394,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:22","nodeType":"FunctionDefinition","parameters":{"id":6372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6371,"mutability":"mutable","name":"value","nameLocation":"19353:5:22","nodeType":"VariableDeclaration","scope":6394,"src":"19346:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6370,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:22"},"returnParameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:22","nodeType":"VariableDeclaration","scope":6394,"src":"19383:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6373,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:22"},"scope":7137,"src":"19328:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6419,"nodeType":"Block","src":"19949:150:22","statements":[{"expression":{"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6402,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"19959:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"19979:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6403,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:22","typeDescriptions":{}}},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6408,"nodeType":"ExpressionStatement","src":"19959:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"19999:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"20013:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6418,"nodeType":"IfStatement","src":"19995:98:22","trueBody":{"id":6417,"nodeType":"Block","src":"20020:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"20076:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6412,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"20041:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6416,"nodeType":"RevertStatement","src":"20034:48:22"}]}}]},"documentation":{"id":6395,"nodeType":"StructuredDocumentation","src":"19558:312:22","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6420,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:22","nodeType":"FunctionDefinition","parameters":{"id":6398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6397,"mutability":"mutable","name":"value","nameLocation":"19900:5:22","nodeType":"VariableDeclaration","scope":6420,"src":"19893:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6396,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:22"},"returnParameters":{"id":6401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6400,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:22","nodeType":"VariableDeclaration","scope":6420,"src":"19930:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6399,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:22"},"scope":7137,"src":"19875:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6445,"nodeType":"Block","src":"20496:150:22","statements":[{"expression":{"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6428,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"20506:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"20526:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6429,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:22","typeDescriptions":{}}},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6434,"nodeType":"ExpressionStatement","src":"20506:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6435,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"20546:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"20560:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6444,"nodeType":"IfStatement","src":"20542:98:22","trueBody":{"id":6443,"nodeType":"Block","src":"20567:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"20623:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6438,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"20588:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6442,"nodeType":"RevertStatement","src":"20581:48:22"}]}}]},"documentation":{"id":6421,"nodeType":"StructuredDocumentation","src":"20105:312:22","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6446,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:22","nodeType":"FunctionDefinition","parameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6423,"mutability":"mutable","name":"value","nameLocation":"20447:5:22","nodeType":"VariableDeclaration","scope":6446,"src":"20440:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6422,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:22"},"returnParameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6426,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:22","nodeType":"VariableDeclaration","scope":6446,"src":"20477:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6425,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:22"},"scope":7137,"src":"20422:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6471,"nodeType":"Block","src":"21043:150:22","statements":[{"expression":{"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6454,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"21053:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"21073:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6455,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:22","typeDescriptions":{}}},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6460,"nodeType":"ExpressionStatement","src":"21053:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6461,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"21093:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"21107:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6470,"nodeType":"IfStatement","src":"21089:98:22","trueBody":{"id":6469,"nodeType":"Block","src":"21114:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"21170:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6464,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"21135:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6468,"nodeType":"RevertStatement","src":"21128:48:22"}]}}]},"documentation":{"id":6447,"nodeType":"StructuredDocumentation","src":"20652:312:22","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6472,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:22","nodeType":"FunctionDefinition","parameters":{"id":6450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6449,"mutability":"mutable","name":"value","nameLocation":"20994:5:22","nodeType":"VariableDeclaration","scope":6472,"src":"20987:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6448,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:22"},"returnParameters":{"id":6453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6452,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:22","nodeType":"VariableDeclaration","scope":6472,"src":"21024:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6451,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:22"},"scope":7137,"src":"20969:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6497,"nodeType":"Block","src":"21590:150:22","statements":[{"expression":{"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"21600:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"21620:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6481,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:22","typeDescriptions":{}}},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6486,"nodeType":"ExpressionStatement","src":"21600:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6487,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"21640:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"21654:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6496,"nodeType":"IfStatement","src":"21636:98:22","trueBody":{"id":6495,"nodeType":"Block","src":"21661:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"21717:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6490,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"21682:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6494,"nodeType":"RevertStatement","src":"21675:48:22"}]}}]},"documentation":{"id":6473,"nodeType":"StructuredDocumentation","src":"21199:312:22","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6498,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:22","nodeType":"FunctionDefinition","parameters":{"id":6476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6475,"mutability":"mutable","name":"value","nameLocation":"21541:5:22","nodeType":"VariableDeclaration","scope":6498,"src":"21534:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6474,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:22"},"returnParameters":{"id":6479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6478,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:22","nodeType":"VariableDeclaration","scope":6498,"src":"21571:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6477,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:22"},"scope":7137,"src":"21516:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6523,"nodeType":"Block","src":"22137:150:22","statements":[{"expression":{"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"22147:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"22167:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6507,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:22","typeDescriptions":{}}},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6512,"nodeType":"ExpressionStatement","src":"22147:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"22187:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"22201:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6522,"nodeType":"IfStatement","src":"22183:98:22","trueBody":{"id":6521,"nodeType":"Block","src":"22208:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"22264:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6516,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"22229:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6520,"nodeType":"RevertStatement","src":"22222:48:22"}]}}]},"documentation":{"id":6499,"nodeType":"StructuredDocumentation","src":"21746:312:22","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6524,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:22","nodeType":"FunctionDefinition","parameters":{"id":6502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"mutability":"mutable","name":"value","nameLocation":"22088:5:22","nodeType":"VariableDeclaration","scope":6524,"src":"22081:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6500,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:22"},"returnParameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:22","nodeType":"VariableDeclaration","scope":6524,"src":"22118:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6503,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:22"},"scope":7137,"src":"22063:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6549,"nodeType":"Block","src":"22684:150:22","statements":[{"expression":{"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"22694:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"22714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6533,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:22","typeDescriptions":{}}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6538,"nodeType":"ExpressionStatement","src":"22694:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6539,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"22734:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"22748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6548,"nodeType":"IfStatement","src":"22730:98:22","trueBody":{"id":6547,"nodeType":"Block","src":"22755:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"22811:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6542,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"22776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6546,"nodeType":"RevertStatement","src":"22769:48:22"}]}}]},"documentation":{"id":6525,"nodeType":"StructuredDocumentation","src":"22293:312:22","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6550,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:22","nodeType":"FunctionDefinition","parameters":{"id":6528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6527,"mutability":"mutable","name":"value","nameLocation":"22635:5:22","nodeType":"VariableDeclaration","scope":6550,"src":"22628:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6526,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:22"},"returnParameters":{"id":6531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6530,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:22","nodeType":"VariableDeclaration","scope":6550,"src":"22665:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6529,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:22"},"scope":7137,"src":"22610:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6575,"nodeType":"Block","src":"23231:150:22","statements":[{"expression":{"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"23241:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"23261:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6559,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:22","typeDescriptions":{}}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6564,"nodeType":"ExpressionStatement","src":"23241:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"23281:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"23295:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6574,"nodeType":"IfStatement","src":"23277:98:22","trueBody":{"id":6573,"nodeType":"Block","src":"23302:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"23358:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6568,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"23323:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6572,"nodeType":"RevertStatement","src":"23316:48:22"}]}}]},"documentation":{"id":6551,"nodeType":"StructuredDocumentation","src":"22840:312:22","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6576,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:22","nodeType":"FunctionDefinition","parameters":{"id":6554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6553,"mutability":"mutable","name":"value","nameLocation":"23182:5:22","nodeType":"VariableDeclaration","scope":6576,"src":"23175:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6552,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:22"},"returnParameters":{"id":6557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6556,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:22","nodeType":"VariableDeclaration","scope":6576,"src":"23212:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6555,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:22"},"scope":7137,"src":"23157:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6601,"nodeType":"Block","src":"23778:150:22","statements":[{"expression":{"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"23788:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"23808:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6585,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:22","typeDescriptions":{}}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6590,"nodeType":"ExpressionStatement","src":"23788:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6591,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"23828:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"23842:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6600,"nodeType":"IfStatement","src":"23824:98:22","trueBody":{"id":6599,"nodeType":"Block","src":"23849:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"23905:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6594,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"23870:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6598,"nodeType":"RevertStatement","src":"23863:48:22"}]}}]},"documentation":{"id":6577,"nodeType":"StructuredDocumentation","src":"23387:312:22","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6602,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:22","nodeType":"FunctionDefinition","parameters":{"id":6580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"mutability":"mutable","name":"value","nameLocation":"23729:5:22","nodeType":"VariableDeclaration","scope":6602,"src":"23722:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6578,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:22"},"returnParameters":{"id":6583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6582,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:22","nodeType":"VariableDeclaration","scope":6602,"src":"23759:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6581,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:22"},"scope":7137,"src":"23704:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6627,"nodeType":"Block","src":"24325:150:22","statements":[{"expression":{"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"24335:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"24355:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6611,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:22","typeDescriptions":{}}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6616,"nodeType":"ExpressionStatement","src":"24335:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"24375:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"24389:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6626,"nodeType":"IfStatement","src":"24371:98:22","trueBody":{"id":6625,"nodeType":"Block","src":"24396:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"24452:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6620,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"24417:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6624,"nodeType":"RevertStatement","src":"24410:48:22"}]}}]},"documentation":{"id":6603,"nodeType":"StructuredDocumentation","src":"23934:312:22","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:22","nodeType":"FunctionDefinition","parameters":{"id":6606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6605,"mutability":"mutable","name":"value","nameLocation":"24276:5:22","nodeType":"VariableDeclaration","scope":6628,"src":"24269:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6604,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:22"},"returnParameters":{"id":6609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6608,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:22","nodeType":"VariableDeclaration","scope":6628,"src":"24306:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6607,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:22"},"scope":7137,"src":"24251:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6653,"nodeType":"Block","src":"24872:150:22","statements":[{"expression":{"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"24882:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"24902:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6637,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:22","typeDescriptions":{}}},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6642,"nodeType":"ExpressionStatement","src":"24882:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6643,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"24922:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"24936:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6652,"nodeType":"IfStatement","src":"24918:98:22","trueBody":{"id":6651,"nodeType":"Block","src":"24943:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"24999:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6646,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"24964:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6650,"nodeType":"RevertStatement","src":"24957:48:22"}]}}]},"documentation":{"id":6629,"nodeType":"StructuredDocumentation","src":"24481:312:22","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6654,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:22","nodeType":"FunctionDefinition","parameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"value","nameLocation":"24823:5:22","nodeType":"VariableDeclaration","scope":6654,"src":"24816:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6630,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:22"},"returnParameters":{"id":6635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6634,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:22","nodeType":"VariableDeclaration","scope":6654,"src":"24853:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6633,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:22"},"scope":7137,"src":"24798:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6679,"nodeType":"Block","src":"25419:150:22","statements":[{"expression":{"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"25429:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"25449:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6663,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:22","typeDescriptions":{}}},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6668,"nodeType":"ExpressionStatement","src":"25429:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6669,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"25469:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"25483:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6678,"nodeType":"IfStatement","src":"25465:98:22","trueBody":{"id":6677,"nodeType":"Block","src":"25490:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"25546:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6672,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"25511:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6676,"nodeType":"RevertStatement","src":"25504:48:22"}]}}]},"documentation":{"id":6655,"nodeType":"StructuredDocumentation","src":"25028:312:22","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6680,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:22","nodeType":"FunctionDefinition","parameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"value","nameLocation":"25370:5:22","nodeType":"VariableDeclaration","scope":6680,"src":"25363:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6656,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:22"},"returnParameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:22","nodeType":"VariableDeclaration","scope":6680,"src":"25400:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6659,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:22"},"scope":7137,"src":"25345:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6705,"nodeType":"Block","src":"25966:150:22","statements":[{"expression":{"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"25976:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"25996:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6689,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:22","typeDescriptions":{}}},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6694,"nodeType":"ExpressionStatement","src":"25976:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"26016:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"26030:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6704,"nodeType":"IfStatement","src":"26012:98:22","trueBody":{"id":6703,"nodeType":"Block","src":"26037:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"26093:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6698,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"26058:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6702,"nodeType":"RevertStatement","src":"26051:48:22"}]}}]},"documentation":{"id":6681,"nodeType":"StructuredDocumentation","src":"25575:312:22","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6706,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:22","nodeType":"FunctionDefinition","parameters":{"id":6684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6683,"mutability":"mutable","name":"value","nameLocation":"25917:5:22","nodeType":"VariableDeclaration","scope":6706,"src":"25910:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6682,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:22"},"returnParameters":{"id":6687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6686,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:22","nodeType":"VariableDeclaration","scope":6706,"src":"25947:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6685,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:22"},"scope":7137,"src":"25892:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6731,"nodeType":"Block","src":"26513:150:22","statements":[{"expression":{"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6714,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"26523:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"26543:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6715,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:22","typeDescriptions":{}}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6720,"nodeType":"ExpressionStatement","src":"26523:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"26563:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"26577:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6730,"nodeType":"IfStatement","src":"26559:98:22","trueBody":{"id":6729,"nodeType":"Block","src":"26584:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"26640:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6724,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"26605:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6728,"nodeType":"RevertStatement","src":"26598:48:22"}]}}]},"documentation":{"id":6707,"nodeType":"StructuredDocumentation","src":"26122:312:22","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6732,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:22","nodeType":"FunctionDefinition","parameters":{"id":6710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6709,"mutability":"mutable","name":"value","nameLocation":"26464:5:22","nodeType":"VariableDeclaration","scope":6732,"src":"26457:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6708,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:22"},"returnParameters":{"id":6713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6712,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:22","nodeType":"VariableDeclaration","scope":6732,"src":"26494:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6711,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:22"},"scope":7137,"src":"26439:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6757,"nodeType":"Block","src":"27060:150:22","statements":[{"expression":{"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6740,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"27070:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"27090:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6741,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:22","typeDescriptions":{}}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6746,"nodeType":"ExpressionStatement","src":"27070:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6747,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"27110:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"27124:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6756,"nodeType":"IfStatement","src":"27106:98:22","trueBody":{"id":6755,"nodeType":"Block","src":"27131:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"27187:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6750,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27152:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6754,"nodeType":"RevertStatement","src":"27145:48:22"}]}}]},"documentation":{"id":6733,"nodeType":"StructuredDocumentation","src":"26669:312:22","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6758,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:22","nodeType":"FunctionDefinition","parameters":{"id":6736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"mutability":"mutable","name":"value","nameLocation":"27011:5:22","nodeType":"VariableDeclaration","scope":6758,"src":"27004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6734,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:22"},"returnParameters":{"id":6739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:22","nodeType":"VariableDeclaration","scope":6758,"src":"27041:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6737,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:22"},"scope":7137,"src":"26986:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6783,"nodeType":"Block","src":"27607:150:22","statements":[{"expression":{"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"27617:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"27637:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6767,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:22","typeDescriptions":{}}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6772,"nodeType":"ExpressionStatement","src":"27617:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"27657:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"27671:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6782,"nodeType":"IfStatement","src":"27653:98:22","trueBody":{"id":6781,"nodeType":"Block","src":"27678:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"27734:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6776,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"27699:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6780,"nodeType":"RevertStatement","src":"27692:48:22"}]}}]},"documentation":{"id":6759,"nodeType":"StructuredDocumentation","src":"27216:312:22","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6784,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:22","nodeType":"FunctionDefinition","parameters":{"id":6762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6761,"mutability":"mutable","name":"value","nameLocation":"27558:5:22","nodeType":"VariableDeclaration","scope":6784,"src":"27551:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6760,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:22"},"returnParameters":{"id":6765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6764,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:22","nodeType":"VariableDeclaration","scope":6784,"src":"27588:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6763,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:22"},"scope":7137,"src":"27533:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6809,"nodeType":"Block","src":"28147:148:22","statements":[{"expression":{"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6792,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"28157:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"28176:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6793,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:22","typeDescriptions":{}}},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6798,"nodeType":"ExpressionStatement","src":"28157:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"28196:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"28210:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6808,"nodeType":"IfStatement","src":"28192:97:22","trueBody":{"id":6807,"nodeType":"Block","src":"28217:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"28272:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6802,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"28238:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6806,"nodeType":"RevertStatement","src":"28231:47:22"}]}}]},"documentation":{"id":6785,"nodeType":"StructuredDocumentation","src":"27763:307:22","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6810,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:22","nodeType":"FunctionDefinition","parameters":{"id":6788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6787,"mutability":"mutable","name":"value","nameLocation":"28099:5:22","nodeType":"VariableDeclaration","scope":6810,"src":"28092:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6786,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:22"},"returnParameters":{"id":6791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6790,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:22","nodeType":"VariableDeclaration","scope":6810,"src":"28129:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6789,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:22"},"scope":7137,"src":"28075:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6835,"nodeType":"Block","src":"28685:148:22","statements":[{"expression":{"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6818,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"28695:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"28714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6819,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:22","typeDescriptions":{}}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6824,"nodeType":"ExpressionStatement","src":"28695:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"28734:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"28748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6834,"nodeType":"IfStatement","src":"28730:97:22","trueBody":{"id":6833,"nodeType":"Block","src":"28755:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"28810:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6828,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"28776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6832,"nodeType":"RevertStatement","src":"28769:47:22"}]}}]},"documentation":{"id":6811,"nodeType":"StructuredDocumentation","src":"28301:307:22","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6836,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:22","nodeType":"FunctionDefinition","parameters":{"id":6814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6813,"mutability":"mutable","name":"value","nameLocation":"28637:5:22","nodeType":"VariableDeclaration","scope":6836,"src":"28630:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6812,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:22"},"returnParameters":{"id":6817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6816,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:22","nodeType":"VariableDeclaration","scope":6836,"src":"28667:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6815,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:22"},"scope":7137,"src":"28613:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6861,"nodeType":"Block","src":"29223:148:22","statements":[{"expression":{"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"29233:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"29252:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6845,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:22","typeDescriptions":{}}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6850,"nodeType":"ExpressionStatement","src":"29233:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"29272:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"29286:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6860,"nodeType":"IfStatement","src":"29268:97:22","trueBody":{"id":6859,"nodeType":"Block","src":"29293:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"29348:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6854,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"29314:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6858,"nodeType":"RevertStatement","src":"29307:47:22"}]}}]},"documentation":{"id":6837,"nodeType":"StructuredDocumentation","src":"28839:307:22","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6862,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:22","nodeType":"FunctionDefinition","parameters":{"id":6840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6839,"mutability":"mutable","name":"value","nameLocation":"29175:5:22","nodeType":"VariableDeclaration","scope":6862,"src":"29168:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6838,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:22"},"returnParameters":{"id":6843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6842,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:22","nodeType":"VariableDeclaration","scope":6862,"src":"29205:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6841,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:22"},"scope":7137,"src":"29151:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6887,"nodeType":"Block","src":"29761:148:22","statements":[{"expression":{"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6870,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"29771:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"29790:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6871,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:22","typeDescriptions":{}}},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6876,"nodeType":"ExpressionStatement","src":"29771:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6877,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"29810:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"29824:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6886,"nodeType":"IfStatement","src":"29806:97:22","trueBody":{"id":6885,"nodeType":"Block","src":"29831:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"29886:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6880,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"29852:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6884,"nodeType":"RevertStatement","src":"29845:47:22"}]}}]},"documentation":{"id":6863,"nodeType":"StructuredDocumentation","src":"29377:307:22","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6888,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:22","nodeType":"FunctionDefinition","parameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"value","nameLocation":"29713:5:22","nodeType":"VariableDeclaration","scope":6888,"src":"29706:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6864,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:22"},"returnParameters":{"id":6869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6868,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:22","nodeType":"VariableDeclaration","scope":6888,"src":"29743:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6867,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:22"},"scope":7137,"src":"29689:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6913,"nodeType":"Block","src":"30299:148:22","statements":[{"expression":{"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6896,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"30309:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"30328:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6897,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:22","typeDescriptions":{}}},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6902,"nodeType":"ExpressionStatement","src":"30309:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"30348:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"30362:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6912,"nodeType":"IfStatement","src":"30344:97:22","trueBody":{"id":6911,"nodeType":"Block","src":"30369:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"30424:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6906,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"30390:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6910,"nodeType":"RevertStatement","src":"30383:47:22"}]}}]},"documentation":{"id":6889,"nodeType":"StructuredDocumentation","src":"29915:307:22","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6914,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:22","nodeType":"FunctionDefinition","parameters":{"id":6892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6891,"mutability":"mutable","name":"value","nameLocation":"30251:5:22","nodeType":"VariableDeclaration","scope":6914,"src":"30244:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6890,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:22"},"returnParameters":{"id":6895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6894,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:22","nodeType":"VariableDeclaration","scope":6914,"src":"30281:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6893,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:22"},"scope":7137,"src":"30227:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6939,"nodeType":"Block","src":"30837:148:22","statements":[{"expression":{"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6922,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"30847:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"30866:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6923,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:22","typeDescriptions":{}}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6928,"nodeType":"ExpressionStatement","src":"30847:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"30886:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"30900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6938,"nodeType":"IfStatement","src":"30882:97:22","trueBody":{"id":6937,"nodeType":"Block","src":"30907:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"30962:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6932,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"30928:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6936,"nodeType":"RevertStatement","src":"30921:47:22"}]}}]},"documentation":{"id":6915,"nodeType":"StructuredDocumentation","src":"30453:307:22","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6940,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:22","nodeType":"FunctionDefinition","parameters":{"id":6918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6917,"mutability":"mutable","name":"value","nameLocation":"30789:5:22","nodeType":"VariableDeclaration","scope":6940,"src":"30782:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6916,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:22"},"returnParameters":{"id":6921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6920,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:22","nodeType":"VariableDeclaration","scope":6940,"src":"30819:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6919,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:22"},"scope":7137,"src":"30765:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6965,"nodeType":"Block","src":"31375:148:22","statements":[{"expression":{"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6948,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"31385:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"31404:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6949,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:22","typeDescriptions":{}}},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6954,"nodeType":"ExpressionStatement","src":"31385:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6946,"src":"31424:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"31438:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6964,"nodeType":"IfStatement","src":"31420:97:22","trueBody":{"id":6963,"nodeType":"Block","src":"31445:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"31500:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6958,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"31466:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6962,"nodeType":"RevertStatement","src":"31459:47:22"}]}}]},"documentation":{"id":6941,"nodeType":"StructuredDocumentation","src":"30991:307:22","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6966,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:22","nodeType":"FunctionDefinition","parameters":{"id":6944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6943,"mutability":"mutable","name":"value","nameLocation":"31327:5:22","nodeType":"VariableDeclaration","scope":6966,"src":"31320:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6942,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:22"},"returnParameters":{"id":6947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6946,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:22","nodeType":"VariableDeclaration","scope":6966,"src":"31357:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6945,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:22"},"scope":7137,"src":"31303:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6991,"nodeType":"Block","src":"31913:148:22","statements":[{"expression":{"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6974,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"31923:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"31942:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6975,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:22","typeDescriptions":{}}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6980,"nodeType":"ExpressionStatement","src":"31923:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6981,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"31962:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"31976:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6990,"nodeType":"IfStatement","src":"31958:97:22","trueBody":{"id":6989,"nodeType":"Block","src":"31983:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"32038:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6984,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"32004:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6988,"nodeType":"RevertStatement","src":"31997:47:22"}]}}]},"documentation":{"id":6967,"nodeType":"StructuredDocumentation","src":"31529:307:22","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6992,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:22","nodeType":"FunctionDefinition","parameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6969,"mutability":"mutable","name":"value","nameLocation":"31865:5:22","nodeType":"VariableDeclaration","scope":6992,"src":"31858:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6968,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:22"},"returnParameters":{"id":6973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6972,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:22","nodeType":"VariableDeclaration","scope":6992,"src":"31895:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6971,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:22"},"scope":7137,"src":"31841:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7017,"nodeType":"Block","src":"32451:148:22","statements":[{"expression":{"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7000,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"32461:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"32480:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7001,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:22","typeDescriptions":{}}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7006,"nodeType":"ExpressionStatement","src":"32461:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"32500:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"32514:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7016,"nodeType":"IfStatement","src":"32496:97:22","trueBody":{"id":7015,"nodeType":"Block","src":"32521:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"32576:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7010,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"32542:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7014,"nodeType":"RevertStatement","src":"32535:47:22"}]}}]},"documentation":{"id":6993,"nodeType":"StructuredDocumentation","src":"32067:307:22","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7018,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:22","nodeType":"FunctionDefinition","parameters":{"id":6996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6995,"mutability":"mutable","name":"value","nameLocation":"32403:5:22","nodeType":"VariableDeclaration","scope":7018,"src":"32396:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6994,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:22"},"returnParameters":{"id":6999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6998,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:22","nodeType":"VariableDeclaration","scope":7018,"src":"32433:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6997,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:22"},"scope":7137,"src":"32379:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7043,"nodeType":"Block","src":"32989:148:22","statements":[{"expression":{"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7026,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"32999:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"33018:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7027,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:22","typeDescriptions":{}}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7032,"nodeType":"ExpressionStatement","src":"32999:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7033,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"33038:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"33052:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7042,"nodeType":"IfStatement","src":"33034:97:22","trueBody":{"id":7041,"nodeType":"Block","src":"33059:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"33114:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7036,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"33080:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7040,"nodeType":"RevertStatement","src":"33073:47:22"}]}}]},"documentation":{"id":7019,"nodeType":"StructuredDocumentation","src":"32605:307:22","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7044,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:22","nodeType":"FunctionDefinition","parameters":{"id":7022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7021,"mutability":"mutable","name":"value","nameLocation":"32941:5:22","nodeType":"VariableDeclaration","scope":7044,"src":"32934:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7020,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:22"},"returnParameters":{"id":7025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7024,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:22","nodeType":"VariableDeclaration","scope":7044,"src":"32971:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7023,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:22"},"scope":7137,"src":"32917:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7069,"nodeType":"Block","src":"33527:148:22","statements":[{"expression":{"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7052,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"33537:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"33556:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7053,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:22","typeDescriptions":{}}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7058,"nodeType":"ExpressionStatement","src":"33537:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7059,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7050,"src":"33576:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"33590:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7068,"nodeType":"IfStatement","src":"33572:97:22","trueBody":{"id":7067,"nodeType":"Block","src":"33597:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"33652:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7062,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"33618:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7066,"nodeType":"RevertStatement","src":"33611:47:22"}]}}]},"documentation":{"id":7045,"nodeType":"StructuredDocumentation","src":"33143:307:22","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7070,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:22","nodeType":"FunctionDefinition","parameters":{"id":7048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7047,"mutability":"mutable","name":"value","nameLocation":"33479:5:22","nodeType":"VariableDeclaration","scope":7070,"src":"33472:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7046,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:22"},"returnParameters":{"id":7051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7050,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:22","nodeType":"VariableDeclaration","scope":7070,"src":"33509:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7049,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:22"},"scope":7137,"src":"33455:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7095,"nodeType":"Block","src":"34058:146:22","statements":[{"expression":{"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7078,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"34068:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"34086:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7079,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:22","typeDescriptions":{}}},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7084,"nodeType":"ExpressionStatement","src":"34068:24:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7085,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"34106:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"34120:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7094,"nodeType":"IfStatement","src":"34102:96:22","trueBody":{"id":7093,"nodeType":"Block","src":"34127:71:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"34181:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7088,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"34148:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7092,"nodeType":"RevertStatement","src":"34141:46:22"}]}}]},"documentation":{"id":7071,"nodeType":"StructuredDocumentation","src":"33681:302:22","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7096,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:22","nodeType":"FunctionDefinition","parameters":{"id":7074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7073,"mutability":"mutable","name":"value","nameLocation":"34011:5:22","nodeType":"VariableDeclaration","scope":7096,"src":"34004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7072,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:22"},"returnParameters":{"id":7077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7076,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:22","nodeType":"VariableDeclaration","scope":7096,"src":"34041:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7075,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:22"},"scope":7137,"src":"33988:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7125,"nodeType":"Block","src":"34444:250:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"34557:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7108,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7107,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:22","memberName":"max","nodeType":"MemberAccess","src":"34573:16:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7105,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:22","typeDescriptions":{}}},"id":7112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7119,"nodeType":"IfStatement","src":"34553:105:22","trueBody":{"id":7118,"nodeType":"Block","src":"34592:66:22","statements":[{"errorCall":{"arguments":[{"id":7115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"34641:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7114,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"34613:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7117,"nodeType":"RevertStatement","src":"34606:41:22"}]}},{"expression":{"arguments":[{"id":7122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"34681:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7120,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:22","typeDescriptions":{}}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7103,"id":7124,"nodeType":"Return","src":"34667:20:22"}]},"documentation":{"id":7097,"nodeType":"StructuredDocumentation","src":"34210:165:22","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7126,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:22","nodeType":"FunctionDefinition","parameters":{"id":7100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7099,"mutability":"mutable","name":"value","nameLocation":"34406:5:22","nodeType":"VariableDeclaration","scope":7126,"src":"34398:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7098,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:22"},"returnParameters":{"id":7103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7126,"src":"34436:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7101,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:22"},"scope":7137,"src":"34380:314:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7135,"nodeType":"Block","src":"34853:87:22","statements":[{"AST":{"nativeSrc":"34888:46:22","nodeType":"YulBlock","src":"34888:46:22","statements":[{"nativeSrc":"34902:22:22","nodeType":"YulAssignment","src":"34902:22:22","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:22","nodeType":"YulIdentifier","src":"34921:1:22"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:22","nodeType":"YulIdentifier","src":"34914:6:22"},"nativeSrc":"34914:9:22","nodeType":"YulFunctionCall","src":"34914:9:22"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:22","nodeType":"YulIdentifier","src":"34907:6:22"},"nativeSrc":"34907:17:22","nodeType":"YulFunctionCall","src":"34907:17:22"},"variableNames":[{"name":"u","nativeSrc":"34902:1:22","nodeType":"YulIdentifier","src":"34902:1:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7129,"isOffset":false,"isSlot":false,"src":"34921:1:22","valueSize":1},{"declaration":7132,"isOffset":false,"isSlot":false,"src":"34902:1:22","valueSize":1}],"flags":["memory-safe"],"id":7134,"nodeType":"InlineAssembly","src":"34863:71:22"}]},"documentation":{"id":7127,"nodeType":"StructuredDocumentation","src":"34700:90:22","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7136,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:22","nodeType":"FunctionDefinition","parameters":{"id":7130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7129,"mutability":"mutable","name":"b","nameLocation":"34816:1:22","nodeType":"VariableDeclaration","scope":7136,"src":"34811:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7128,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:22"},"returnParameters":{"id":7133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7132,"mutability":"mutable","name":"u","nameLocation":"34850:1:22","nodeType":"VariableDeclaration","scope":7136,"src":"34842:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7131,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:22"},"scope":7137,"src":"34795:145:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7138,"src":"769:34173:22","usedErrors":[5382,5387,5394,5399],"usedEvents":[]}],"src":"192:34751:22"},"id":22},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7137],"SignedMath":[7281]},"id":7282,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7139,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7282,"sourceUnit":7138,"src":"135:40:23","symbolAliases":[{"foreign":{"id":7140,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"143:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7142,"nodeType":"StructuredDocumentation","src":"177:80:23","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7281,"linearizedBaseContracts":[7281],"name":"SignedMath","nameLocation":"266:10:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":7171,"nodeType":"Block","src":"746:215:23","statements":[{"id":7170,"nodeType":"UncheckedBlock","src":"756:199:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"894:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7155,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"900:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7156,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"904:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7163,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"932:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7161,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"916:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7137_$","typeString":"type(library SafeCast)"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7136,"src":"916:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7159,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:23","typeDescriptions":{}}},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7153,"id":7169,"nodeType":"Return","src":"887:57:23"}]}]},"documentation":{"id":7143,"nodeType":"StructuredDocumentation","src":"283:374:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7172,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:23","nodeType":"FunctionDefinition","parameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7145,"mutability":"mutable","name":"condition","nameLocation":"684:9:23","nodeType":"VariableDeclaration","scope":7172,"src":"679:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7144,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7147,"mutability":"mutable","name":"a","nameLocation":"702:1:23","nodeType":"VariableDeclaration","scope":7172,"src":"695:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7146,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7149,"mutability":"mutable","name":"b","nameLocation":"712:1:23","nodeType":"VariableDeclaration","scope":7172,"src":"705:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7148,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:23"},"returnParameters":{"id":7153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7172,"src":"738:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7151,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:23"},"scope":7281,"src":"662:299:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7190,"nodeType":"Block","src":"1102:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7183,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"1127:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7184,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"1131:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"1134:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7187,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"1137:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7182,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"1119:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7181,"id":7189,"nodeType":"Return","src":"1112:27:23"}]},"documentation":{"id":7173,"nodeType":"StructuredDocumentation","src":"967:66:23","text":" @dev Returns the largest of two signed numbers."},"id":7191,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:23","nodeType":"FunctionDefinition","parameters":{"id":7178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7175,"mutability":"mutable","name":"a","nameLocation":"1058:1:23","nodeType":"VariableDeclaration","scope":7191,"src":"1051:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7174,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7177,"mutability":"mutable","name":"b","nameLocation":"1068:1:23","nodeType":"VariableDeclaration","scope":7191,"src":"1061:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7176,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:23"},"returnParameters":{"id":7181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7191,"src":"1094:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7179,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:23"},"scope":7281,"src":"1038:108:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7209,"nodeType":"Block","src":"1288:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7202,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"1313:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7203,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"1317:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7205,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"1320:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7206,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"1323:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7201,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"1305:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7200,"id":7208,"nodeType":"Return","src":"1298:27:23"}]},"documentation":{"id":7192,"nodeType":"StructuredDocumentation","src":"1152:67:23","text":" @dev Returns the smallest of two signed numbers."},"id":7210,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:23","nodeType":"FunctionDefinition","parameters":{"id":7197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7194,"mutability":"mutable","name":"a","nameLocation":"1244:1:23","nodeType":"VariableDeclaration","scope":7210,"src":"1237:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7193,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7196,"mutability":"mutable","name":"b","nameLocation":"1254:1:23","nodeType":"VariableDeclaration","scope":7210,"src":"1247:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7195,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:23"},"returnParameters":{"id":7200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7210,"src":"1280:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7198,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:23"},"scope":7281,"src":"1224:108:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7253,"nodeType":"Block","src":"1537:162:23","statements":[{"assignments":[7221],"declarations":[{"constant":false,"id":7221,"mutability":"mutable","name":"x","nameLocation":"1606:1:23","nodeType":"VariableDeclaration","scope":7253,"src":"1599:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7220,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7234,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"1611:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7223,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"1615:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"1622:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7227,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"1626:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:23"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7235,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"1651:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7240,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7221,"src":"1671:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:23","typeDescriptions":{}}},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7236,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:23","typeDescriptions":{}}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"1685:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"1689:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7219,"id":7252,"nodeType":"Return","src":"1644:48:23"}]},"documentation":{"id":7211,"nodeType":"StructuredDocumentation","src":"1338:126:23","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7254,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:23","nodeType":"FunctionDefinition","parameters":{"id":7216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7213,"mutability":"mutable","name":"a","nameLocation":"1493:1:23","nodeType":"VariableDeclaration","scope":7254,"src":"1486:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7212,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7215,"mutability":"mutable","name":"b","nameLocation":"1503:1:23","nodeType":"VariableDeclaration","scope":7254,"src":"1496:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7214,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:23"},"returnParameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7254,"src":"1529:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7217,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:23"},"scope":7281,"src":"1469:230:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7279,"nodeType":"Block","src":"1843:767:23","statements":[{"id":7278,"nodeType":"UncheckedBlock","src":"1853:751:23","statements":[{"assignments":[7263],"declarations":[{"constant":false,"id":7263,"mutability":"mutable","name":"mask","nameLocation":"2424:4:23","nodeType":"VariableDeclaration","scope":7278,"src":"2417:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7262,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7267,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7264,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"2431:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7270,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"2576:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7271,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"2580:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7274,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"2588:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7268,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:23","typeDescriptions":{}}},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7261,"id":7277,"nodeType":"Return","src":"2560:33:23"}]}]},"documentation":{"id":7255,"nodeType":"StructuredDocumentation","src":"1705:78:23","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7280,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:23","nodeType":"FunctionDefinition","parameters":{"id":7258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7257,"mutability":"mutable","name":"n","nameLocation":"1808:1:23","nodeType":"VariableDeclaration","scope":7280,"src":"1801:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7256,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:23"},"returnParameters":{"id":7261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7280,"src":"1834:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:23"},"scope":7281,"src":"1788:822:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7282,"src":"258:2354:23","usedErrors":[],"usedEvents":[]}],"src":"109:2504:23"},"id":23},"contracts/SeiNFT.sol":{"ast":{"absolutePath":"contracts/SeiNFT.sol","exportedSymbols":{"ERC721":[1273],"ERC721Burnable":[1437],"ERC721Enumerable":[1823],"ERC721Pausable":[1858],"ERC721URIStorage":[1986],"Ownable":[147],"SeiNFT":[7473]},"id":7474,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7283,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7285,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7474,"sourceUnit":1274,"src":"59:71:24","symbolAliases":[{"foreign":{"id":7284,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"67:6:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","id":7287,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7474,"sourceUnit":1438,"src":"131:98:24","symbolAliases":[{"foreign":{"id":7286,"name":"ERC721Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"139:14:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":7289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7474,"sourceUnit":1824,"src":"230:102:24","symbolAliases":[{"foreign":{"id":7288,"name":"ERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"238:16:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol","id":7291,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7474,"sourceUnit":1859,"src":"333:98:24","symbolAliases":[{"foreign":{"id":7290,"name":"ERC721Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"341:14:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":7293,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7474,"sourceUnit":1987,"src":"432:102:24","symbolAliases":[{"foreign":{"id":7292,"name":"ERC721URIStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"440:16:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7295,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7474,"sourceUnit":148,"src":"535:67:24","symbolAliases":[{"foreign":{"id":7294,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"543:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7296,"name":"ERC721","nameLocations":["624:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"624:6:24"},"id":7297,"nodeType":"InheritanceSpecifier","src":"624:6:24"},{"baseName":{"id":7298,"name":"ERC721Enumerable","nameLocations":["632:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":1823,"src":"632:16:24"},"id":7299,"nodeType":"InheritanceSpecifier","src":"632:16:24"},{"baseName":{"id":7300,"name":"ERC721URIStorage","nameLocations":["650:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":1986,"src":"650:16:24"},"id":7301,"nodeType":"InheritanceSpecifier","src":"650:16:24"},{"baseName":{"id":7302,"name":"ERC721Pausable","nameLocations":["668:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"668:14:24"},"id":7303,"nodeType":"InheritanceSpecifier","src":"668:14:24"},{"baseName":{"id":7304,"name":"Ownable","nameLocations":["684:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"684:7:24"},"id":7305,"nodeType":"InheritanceSpecifier","src":"684:7:24"},{"baseName":{"id":7306,"name":"ERC721Burnable","nameLocations":["693:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":1437,"src":"693:14:24"},"id":7307,"nodeType":"InheritanceSpecifier","src":"693:14:24"}],"canonicalName":"SeiNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7473,"linearizedBaseContracts":[7473,1437,147,1858,2313,1986,1823,2018,1273,269,2046,175,1390,3739,3751,2153],"name":"SeiNFT","nameLocation":"614:6:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7309,"mutability":"mutable","name":"_nextTokenId","nameLocation":"730:12:24","nodeType":"VariableDeclaration","scope":7473,"src":"714:28:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7308,"name":"uint256","nodeType":"ElementaryTypeName","src":"714:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7311,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"795:13:24","nodeType":"VariableDeclaration","scope":7473,"src":"780:28:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7310,"name":"string","nodeType":"ElementaryTypeName","src":"780:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":7329,"nodeType":"Block","src":"959:45:24","statements":[{"expression":{"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7325,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"969:13:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7326,"name":"baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"985:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"969:28:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7328,"nodeType":"ExpressionStatement","src":"969:28:24"}]},"id":7330,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"536569204e465420436f6c6c656374696f6e","id":7318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"893:20:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_319df81060e8049b7654a0d789b36fb1bba6ea7483d5791780694fedd26ea8ee","typeString":"literal_string \"Sei NFT Collection\""},"value":"Sei NFT Collection"},{"hexValue":"5345494e4654","id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"915:8:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_57382e782efdb3837d1ca43fb788acc0b428d77cfa3247303cb8ffd24d07ee1b","typeString":"literal_string \"SEINFT\""},"value":"SEINFT"}],"id":7320,"kind":"baseConstructorSpecifier","modifierName":{"id":7317,"name":"ERC721","nameLocations":["886:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"886:6:24"},"nodeType":"ModifierInvocation","src":"886:38:24"},{"arguments":[{"id":7322,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"941:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7323,"kind":"baseConstructorSpecifier","modifierName":{"id":7321,"name":"Ownable","nameLocations":["933:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"933:7:24"},"nodeType":"ModifierInvocation","src":"933:21:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7313,"mutability":"mutable","name":"initialOwner","nameLocation":"836:12:24","nodeType":"VariableDeclaration","scope":7330,"src":"828:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7312,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7315,"mutability":"mutable","name":"baseTokenURI","nameLocation":"864:12:24","nodeType":"VariableDeclaration","scope":7330,"src":"850:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7314,"name":"string","nodeType":"ElementaryTypeName","src":"850:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"827:50:24"},"returnParameters":{"id":7324,"nodeType":"ParameterList","parameters":[],"src":"959:0:24"},"scope":7473,"src":"816:188:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7341,"nodeType":"Block","src":"1128:45:24","statements":[{"expression":{"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7337,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"1138:13:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7338,"name":"baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"1154:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1138:28:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7340,"nodeType":"ExpressionStatement","src":"1138:28:24"}]},"functionSelector":"55f804b3","id":7342,"implemented":true,"kind":"function","modifiers":[{"id":7335,"kind":"modifierInvocation","modifierName":{"id":7334,"name":"onlyOwner","nameLocations":["1118:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1118:9:24"},"nodeType":"ModifierInvocation","src":"1118:9:24"}],"name":"setBaseURI","nameLocation":"1072:10:24","nodeType":"FunctionDefinition","parameters":{"id":7333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7332,"mutability":"mutable","name":"baseTokenURI","nameLocation":"1097:12:24","nodeType":"VariableDeclaration","scope":7342,"src":"1083:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7331,"name":"string","nodeType":"ElementaryTypeName","src":"1083:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1082:28:24"},"returnParameters":{"id":7336,"nodeType":"ParameterList","parameters":[],"src":"1128:0:24"},"scope":7473,"src":"1063:110:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[521],"body":{"id":7350,"nodeType":"Block","src":"1284:37:24","statements":[{"expression":{"id":7348,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"1301:13:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7347,"id":7349,"nodeType":"Return","src":"1294:20:24"}]},"id":7351,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"1226:8:24","nodeType":"FunctionDefinition","overrides":{"id":7344,"nodeType":"OverrideSpecifier","overrides":[],"src":"1251:8:24"},"parameters":{"id":7343,"nodeType":"ParameterList","parameters":[],"src":"1234:2:24"},"returnParameters":{"id":7347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7351,"src":"1269:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7345,"name":"string","nodeType":"ElementaryTypeName","src":"1269:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1268:15:24"},"scope":7473,"src":"1217:104:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7359,"nodeType":"Block","src":"1362:25:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7356,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"1372:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1372:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7358,"nodeType":"ExpressionStatement","src":"1372:8:24"}]},"functionSelector":"8456cb59","id":7360,"implemented":true,"kind":"function","modifiers":[{"id":7354,"kind":"modifierInvocation","modifierName":{"id":7353,"name":"onlyOwner","nameLocations":["1352:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1352:9:24"},"nodeType":"ModifierInvocation","src":"1352:9:24"}],"name":"pause","nameLocation":"1337:5:24","nodeType":"FunctionDefinition","parameters":{"id":7352,"nodeType":"ParameterList","parameters":[],"src":"1342:2:24"},"returnParameters":{"id":7355,"nodeType":"ParameterList","parameters":[],"src":"1362:0:24"},"scope":7473,"src":"1328:59:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7368,"nodeType":"Block","src":"1430:27:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7365,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"1440:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1440:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7367,"nodeType":"ExpressionStatement","src":"1440:10:24"}]},"functionSelector":"3f4ba83a","id":7369,"implemented":true,"kind":"function","modifiers":[{"id":7363,"kind":"modifierInvocation","modifierName":{"id":7362,"name":"onlyOwner","nameLocations":["1420:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1420:9:24"},"nodeType":"ModifierInvocation","src":"1420:9:24"}],"name":"unpause","nameLocation":"1403:7:24","nodeType":"FunctionDefinition","parameters":{"id":7361,"nodeType":"ParameterList","parameters":[],"src":"1410:2:24"},"returnParameters":{"id":7364,"nodeType":"ParameterList","parameters":[],"src":"1430:0:24"},"scope":7473,"src":"1394:63:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7397,"nodeType":"Block","src":"1576:141:24","statements":[{"assignments":[7381],"declarations":[{"constant":false,"id":7381,"mutability":"mutable","name":"tokenId","nameLocation":"1594:7:24","nodeType":"VariableDeclaration","scope":7397,"src":"1586:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1586:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7384,"initialValue":{"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1604:14:24","subExpression":{"id":7382,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"1604:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1586:32:24"},{"expression":{"arguments":[{"id":7386,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"1638:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7387,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"1642:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7385,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[951,981],"referencedDeclaration":951,"src":"1628:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1628:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7389,"nodeType":"ExpressionStatement","src":"1628:22:24"},{"expression":{"arguments":[{"id":7391,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"1673:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7392,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"1682:3:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7390,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"1660:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1660:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7394,"nodeType":"ExpressionStatement","src":"1660:26:24"},{"expression":{"id":7395,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"1703:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7379,"id":7396,"nodeType":"Return","src":"1696:14:24"}]},"functionSelector":"d204c45e","id":7398,"implemented":true,"kind":"function","modifiers":[{"id":7376,"kind":"modifierInvocation","modifierName":{"id":7375,"name":"onlyOwner","nameLocations":["1536:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1536:9:24"},"nodeType":"ModifierInvocation","src":"1536:9:24"}],"name":"safeMint","nameLocation":"1473:8:24","nodeType":"FunctionDefinition","parameters":{"id":7374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7371,"mutability":"mutable","name":"to","nameLocation":"1490:2:24","nodeType":"VariableDeclaration","scope":7398,"src":"1482:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7370,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7373,"mutability":"mutable","name":"uri","nameLocation":"1508:3:24","nodeType":"VariableDeclaration","scope":7398,"src":"1494:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7372,"name":"string","nodeType":"ElementaryTypeName","src":"1494:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1481:31:24"},"returnParameters":{"id":7379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7398,"src":"1563:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1562:9:24"},"scope":7473,"src":"1464:253:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[886,1636,1857],"body":{"id":7420,"nodeType":"Block","src":"1959:56:24","statements":[{"expression":{"arguments":[{"id":7415,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"1990:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7416,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"1994:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7417,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"2003:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7413,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1976:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SeiNFT_$7473_$","typeString":"type(contract super SeiNFT)"}},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1982:7:24","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"1976:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1976:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7412,"id":7419,"nodeType":"Return","src":"1969:39:24"}]},"id":7421,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1802:7:24","nodeType":"FunctionDefinition","overrides":{"id":7409,"nodeType":"OverrideSpecifier","overrides":[{"id":7406,"name":"ERC721","nameLocations":["1887:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"1887:6:24"},{"id":7407,"name":"ERC721Enumerable","nameLocations":["1895:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":1823,"src":"1895:16:24"},{"id":7408,"name":"ERC721Pausable","nameLocations":["1913:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"1913:14:24"}],"src":"1878:50:24"},"parameters":{"id":7405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7400,"mutability":"mutable","name":"to","nameLocation":"1818:2:24","nodeType":"VariableDeclaration","scope":7421,"src":"1810:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7399,"name":"address","nodeType":"ElementaryTypeName","src":"1810:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7402,"mutability":"mutable","name":"tokenId","nameLocation":"1830:7:24","nodeType":"VariableDeclaration","scope":7421,"src":"1822:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7401,"name":"uint256","nodeType":"ElementaryTypeName","src":"1822:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7404,"mutability":"mutable","name":"auth","nameLocation":"1847:4:24","nodeType":"VariableDeclaration","scope":7421,"src":"1839:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7403,"name":"address","nodeType":"ElementaryTypeName","src":"1839:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1809:43:24"},"returnParameters":{"id":7412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7421,"src":"1946:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7410,"name":"address","nodeType":"ElementaryTypeName","src":"1946:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1945:9:24"},"scope":7473,"src":"1793:222:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[796,1822],"body":{"id":7438,"nodeType":"Block","src":"2144:55:24","statements":[{"expression":{"arguments":[{"id":7434,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"2177:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"2186:5:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":7431,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2154:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SeiNFT_$7473_$","typeString":"type(contract super SeiNFT)"}},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2160:16:24","memberName":"_increaseBalance","nodeType":"MemberAccess","referencedDeclaration":1822,"src":"2154:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$","typeString":"function (address,uint128)"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7437,"nodeType":"ExpressionStatement","src":"2154:38:24"}]},"id":7439,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"2031:16:24","nodeType":"FunctionDefinition","overrides":{"id":7429,"nodeType":"OverrideSpecifier","overrides":[{"id":7427,"name":"ERC721","nameLocations":["2114:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"2114:6:24"},{"id":7428,"name":"ERC721Enumerable","nameLocations":["2122:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":1823,"src":"2122:16:24"}],"src":"2105:34:24"},"parameters":{"id":7426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7423,"mutability":"mutable","name":"account","nameLocation":"2056:7:24","nodeType":"VariableDeclaration","scope":7439,"src":"2048:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7422,"name":"address","nodeType":"ElementaryTypeName","src":"2048:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7425,"mutability":"mutable","name":"value","nameLocation":"2073:5:24","nodeType":"VariableDeclaration","scope":7439,"src":"2065:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7424,"name":"uint128","nodeType":"ElementaryTypeName","src":"2065:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2047:32:24"},"returnParameters":{"id":7430,"nodeType":"ParameterList","parameters":[],"src":"2144:0:24"},"scope":7473,"src":"2022:177:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[512,1966],"body":{"id":7454,"nodeType":"Block","src":"2348:47:24","statements":[{"expression":{"arguments":[{"id":7451,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"2380:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7449,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2365:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SeiNFT_$7473_$","typeString":"type(contract super SeiNFT)"}},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2371:8:24","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1966,"src":"2365:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7448,"id":7453,"nodeType":"Return","src":"2358:30:24"}]},"functionSelector":"c87b56dd","id":7455,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2215:8:24","nodeType":"FunctionDefinition","overrides":{"id":7445,"nodeType":"OverrideSpecifier","overrides":[{"id":7443,"name":"ERC721","nameLocations":["2286:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"2286:6:24"},{"id":7444,"name":"ERC721URIStorage","nameLocations":["2294:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":1986,"src":"2294:16:24"}],"src":"2277:34:24"},"parameters":{"id":7442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7441,"mutability":"mutable","name":"tokenId","nameLocation":"2232:7:24","nodeType":"VariableDeclaration","scope":7455,"src":"2224:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7440,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2223:17:24"},"returnParameters":{"id":7448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7455,"src":"2329:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7446,"name":"string","nodeType":"ElementaryTypeName","src":"2329:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2328:15:24"},"scope":7473,"src":"2206:189:24","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[417,1501,1909],"body":{"id":7471,"nodeType":"Block","src":"2565:60:24","statements":[{"expression":{"arguments":[{"id":7468,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"2606:11:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7466,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2582:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SeiNFT_$7473_$","typeString":"type(contract super SeiNFT)"}},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2588:17:24","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1909,"src":"2582:23:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2582:36:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7465,"id":7470,"nodeType":"Return","src":"2575:43:24"}]},"functionSelector":"01ffc9a7","id":7472,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2411:17:24","nodeType":"FunctionDefinition","overrides":{"id":7462,"nodeType":"OverrideSpecifier","overrides":[{"id":7459,"name":"ERC721","nameLocations":["2494:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1273,"src":"2494:6:24"},{"id":7460,"name":"ERC721Enumerable","nameLocations":["2502:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":1823,"src":"2502:16:24"},{"id":7461,"name":"ERC721URIStorage","nameLocations":["2520:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":1986,"src":"2520:16:24"}],"src":"2485:52:24"},"parameters":{"id":7458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7457,"mutability":"mutable","name":"interfaceId","nameLocation":"2436:11:24","nodeType":"VariableDeclaration","scope":7472,"src":"2429:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7456,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2429:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2428:20:24"},"returnParameters":{"id":7465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7472,"src":"2555:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7463,"name":"bool","nodeType":"ElementaryTypeName","src":"2555:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2554:6:24"},"scope":7473,"src":"2402:223:24","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7474,"src":"605:2022:24","usedErrors":[13,18,227,232,241,246,251,258,263,268,1474,1477,2227,2230],"usedEvents":[24,167,174,1289,1298,1307,2219,2224]}],"src":"32:2595:24"},"id":24}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ERC721Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xdee1ff07172e443c6600581fc4f11e7830a6d33e4e551752935b835d52a09404\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c503b5573ecd8d18157903b6760e02e8f86b47238c997d6dd04b99df74ef532d\",\"dweb:/ipfs/QmSGcRgfe18dtR4t3erYBSq3W6tPGXHPZ3JKkD1yFJsNsm\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the ERC that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive}, interfere with enumerability and should not be used together with {ERC721Enumerable}.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xe85bdcbce4b8474872045aafb5ed8e3e0a5bd794ded35f76ee9deef25bdc7446\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60872f2d516e70f06d9684386c6b9c0b9d7ff7f4af257be6087efa2c3bb81937\",\"dweb:/ipfs/QmdWgPbs2e8SFNNXPFwTt2xD5N8hniehgGCMHUnY1JDcCw\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xaa3852717be1903bf8b8a66c7ce323f70ac93227769c450f2b332fdd16bd9198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09ce2e4a5b1064a392594c0d5efeb3ccd8eacf431e55a85574cafb6bfb72ba69\",\"dweb:/ipfs/QmUbT5UomYpwwMrNMzzuNcGb4sxuMZ4jz8mMPZewX8mEPn\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol":{"ERC721Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","paused()":"5c975abb","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":\"ERC721Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xc99d280642a1590b7a9a65220b4a606576ad1f51f2773b997eff3d340501c44b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0aebdcae05832b3253bedd5575458fa4b9abca6a203966d72690e62efe98890\",\"dweb:/ipfs/QmbeFZ6X7VksJmRqncuas8cjsYGXPN8FBYtV9PGmpmup8f\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xaa3852717be1903bf8b8a66c7ce323f70ac93227769c450f2b332fdd16bd9198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09ce2e4a5b1064a392594c0d5efeb3ccd8eacf431e55a85574cafb6bfb72ba69\",\"dweb:/ipfs/QmUbT5UomYpwwMrNMzzuNcGb4sxuMZ4jz8mMPZewX8mEPn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b09588a2f572f270015c0893732707caf259545305916e9b865837d6f1ae14364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9588A2F572F270015C08937 ORIGIN PUSH17 0x7CAF259545305916E9B865837D6F1AE143 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"431:1490:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1490:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b09588a2f572f270015c0893732707caf259545305916e9b865837d6f1ae14364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9588A2F572F270015C08937 ORIGIN PUSH17 0x7CAF259545305916E9B865837D6F1AE143 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"431:1490:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d25119d96a0b6c751ed6c6aa81db3c845d0181659d29e3646b022356a5139e5364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 MLOAD NOT 0xD9 PUSH11 0xB6C751ED6C6AA81DB3C84 TSTORE ADD DUP2 PUSH6 0x9D29E3646B02 0x23 JUMP 0xA5 SGT SWAP15 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18982:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d25119d96a0b6c751ed6c6aa81db3c845d0181659d29e3646b022356a5139e5364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 MLOAD NOT 0xD9 PUSH11 0xB6C751ED6C6AA81DB3C84 TSTORE ADD DUP2 PUSH6 0x9D29E3646B02 0x23 JUMP 0xA5 SGT SWAP15 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"297:18982:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e41425f41c1222419b5f7510ef4b5382051038809b54a2c00f0e2d3ac98d815264736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EQ 0x25 DELEGATECALL SHR SLT 0x22 COINBASE SWAP12 PUSH0 PUSH22 0x10EF4B5382051038809B54A2C00F0E2D3AC98D815264 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e41425f41c1222419b5f7510ef4b5382051038809b54a2c00f0e2d3ac98d815264736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 EQ 0x25 DELEGATECALL SHR SLT 0x22 COINBASE SWAP12 PUSH0 PUSH22 0x10EF4B5382051038809B54A2C00F0E2D3AC98D815264 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"281:31863:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP12 0xE7 0x4C 0xDA SSTORE CALLER SWAP14 CALLER POP DUP1 0xCA PUSH0 PUSH11 0x3089CA675C8B749BB38B70 NUMBER INVALID RETURNDATASIZE EXTCODECOPY JUMPDEST SWAP6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP12 0xE7 0x4C 0xDA SSTORE CALLER SWAP14 CALLER POP DUP1 0xCA PUSH0 PUSH11 0x3089CA675C8B749BB38B70 NUMBER INVALID RETURNDATASIZE EXTCODECOPY JUMPDEST SWAP6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/SeiNFT.sol":{"SeiNFT":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"string","name":"baseTokenURI","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"uri","type":"string"}],"name":"safeMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseTokenURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_386":{"entryPoint":null,"id":386,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7330":{"entryPoint":null,"id":7330,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":229,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory":{"entryPoint":341,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":635,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":714,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":577,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":319,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4076:25","nodeType":"YulBlock","src":"0:4076:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"46:95:25","nodeType":"YulBlock","src":"46:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:25","nodeType":"YulLiteral","src":"63:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:25","nodeType":"YulLiteral","src":"70:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:25","nodeType":"YulLiteral","src":"75:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:25","nodeType":"YulIdentifier","src":"66:3:25"},"nativeSrc":"66:20:25","nodeType":"YulFunctionCall","src":"66:20:25"}],"functionName":{"name":"mstore","nativeSrc":"56:6:25","nodeType":"YulIdentifier","src":"56:6:25"},"nativeSrc":"56:31:25","nodeType":"YulFunctionCall","src":"56:31:25"},"nativeSrc":"56:31:25","nodeType":"YulExpressionStatement","src":"56:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:25","nodeType":"YulLiteral","src":"103:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:25","nodeType":"YulLiteral","src":"106:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:25","nodeType":"YulIdentifier","src":"96:6:25"},"nativeSrc":"96:15:25","nodeType":"YulFunctionCall","src":"96:15:25"},"nativeSrc":"96:15:25","nodeType":"YulExpressionStatement","src":"96:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:25","nodeType":"YulLiteral","src":"127:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:25","nodeType":"YulLiteral","src":"130:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:25","nodeType":"YulIdentifier","src":"120:6:25"},"nativeSrc":"120:15:25","nodeType":"YulFunctionCall","src":"120:15:25"},"nativeSrc":"120:15:25","nodeType":"YulExpressionStatement","src":"120:15:25"}]},"name":"panic_error_0x41","nativeSrc":"14:127:25","nodeType":"YulFunctionDefinition","src":"14:127:25"},{"body":{"nativeSrc":"254:1103:25","nodeType":"YulBlock","src":"254:1103:25","statements":[{"body":{"nativeSrc":"300:16:25","nodeType":"YulBlock","src":"300:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"309:1:25","nodeType":"YulLiteral","src":"309:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"312:1:25","nodeType":"YulLiteral","src":"312:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"302:6:25","nodeType":"YulIdentifier","src":"302:6:25"},"nativeSrc":"302:12:25","nodeType":"YulFunctionCall","src":"302:12:25"},"nativeSrc":"302:12:25","nodeType":"YulExpressionStatement","src":"302:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"275:7:25","nodeType":"YulIdentifier","src":"275:7:25"},{"name":"headStart","nativeSrc":"284:9:25","nodeType":"YulIdentifier","src":"284:9:25"}],"functionName":{"name":"sub","nativeSrc":"271:3:25","nodeType":"YulIdentifier","src":"271:3:25"},"nativeSrc":"271:23:25","nodeType":"YulFunctionCall","src":"271:23:25"},{"kind":"number","nativeSrc":"296:2:25","nodeType":"YulLiteral","src":"296:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"267:3:25","nodeType":"YulIdentifier","src":"267:3:25"},"nativeSrc":"267:32:25","nodeType":"YulFunctionCall","src":"267:32:25"},"nativeSrc":"264:52:25","nodeType":"YulIf","src":"264:52:25"},{"nativeSrc":"325:29:25","nodeType":"YulVariableDeclaration","src":"325:29:25","value":{"arguments":[{"name":"headStart","nativeSrc":"344:9:25","nodeType":"YulIdentifier","src":"344:9:25"}],"functionName":{"name":"mload","nativeSrc":"338:5:25","nodeType":"YulIdentifier","src":"338:5:25"},"nativeSrc":"338:16:25","nodeType":"YulFunctionCall","src":"338:16:25"},"variables":[{"name":"value","nativeSrc":"329:5:25","nodeType":"YulTypedName","src":"329:5:25","type":""}]},{"body":{"nativeSrc":"417:16:25","nodeType":"YulBlock","src":"417:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"426:1:25","nodeType":"YulLiteral","src":"426:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"429:1:25","nodeType":"YulLiteral","src":"429:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"419:6:25","nodeType":"YulIdentifier","src":"419:6:25"},"nativeSrc":"419:12:25","nodeType":"YulFunctionCall","src":"419:12:25"},"nativeSrc":"419:12:25","nodeType":"YulExpressionStatement","src":"419:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"376:5:25","nodeType":"YulIdentifier","src":"376:5:25"},{"arguments":[{"name":"value","nativeSrc":"387:5:25","nodeType":"YulIdentifier","src":"387:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"402:3:25","nodeType":"YulLiteral","src":"402:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"407:1:25","nodeType":"YulLiteral","src":"407:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"398:3:25","nodeType":"YulIdentifier","src":"398:3:25"},"nativeSrc":"398:11:25","nodeType":"YulFunctionCall","src":"398:11:25"},{"kind":"number","nativeSrc":"411:1:25","nodeType":"YulLiteral","src":"411:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"394:3:25","nodeType":"YulIdentifier","src":"394:3:25"},"nativeSrc":"394:19:25","nodeType":"YulFunctionCall","src":"394:19:25"}],"functionName":{"name":"and","nativeSrc":"383:3:25","nodeType":"YulIdentifier","src":"383:3:25"},"nativeSrc":"383:31:25","nodeType":"YulFunctionCall","src":"383:31:25"}],"functionName":{"name":"eq","nativeSrc":"373:2:25","nodeType":"YulIdentifier","src":"373:2:25"},"nativeSrc":"373:42:25","nodeType":"YulFunctionCall","src":"373:42:25"}],"functionName":{"name":"iszero","nativeSrc":"366:6:25","nodeType":"YulIdentifier","src":"366:6:25"},"nativeSrc":"366:50:25","nodeType":"YulFunctionCall","src":"366:50:25"},"nativeSrc":"363:70:25","nodeType":"YulIf","src":"363:70:25"},{"nativeSrc":"442:15:25","nodeType":"YulAssignment","src":"442:15:25","value":{"name":"value","nativeSrc":"452:5:25","nodeType":"YulIdentifier","src":"452:5:25"},"variableNames":[{"name":"value0","nativeSrc":"442:6:25","nodeType":"YulIdentifier","src":"442:6:25"}]},{"nativeSrc":"466:39:25","nodeType":"YulVariableDeclaration","src":"466:39:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"490:9:25","nodeType":"YulIdentifier","src":"490:9:25"},{"kind":"number","nativeSrc":"501:2:25","nodeType":"YulLiteral","src":"501:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"486:3:25","nodeType":"YulIdentifier","src":"486:3:25"},"nativeSrc":"486:18:25","nodeType":"YulFunctionCall","src":"486:18:25"}],"functionName":{"name":"mload","nativeSrc":"480:5:25","nodeType":"YulIdentifier","src":"480:5:25"},"nativeSrc":"480:25:25","nodeType":"YulFunctionCall","src":"480:25:25"},"variables":[{"name":"offset","nativeSrc":"470:6:25","nodeType":"YulTypedName","src":"470:6:25","type":""}]},{"body":{"nativeSrc":"548:16:25","nodeType":"YulBlock","src":"548:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"557:1:25","nodeType":"YulLiteral","src":"557:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"560:1:25","nodeType":"YulLiteral","src":"560:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"550:6:25","nodeType":"YulIdentifier","src":"550:6:25"},"nativeSrc":"550:12:25","nodeType":"YulFunctionCall","src":"550:12:25"},"nativeSrc":"550:12:25","nodeType":"YulExpressionStatement","src":"550:12:25"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"520:6:25","nodeType":"YulIdentifier","src":"520:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"536:2:25","nodeType":"YulLiteral","src":"536:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"540:1:25","nodeType":"YulLiteral","src":"540:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"532:3:25","nodeType":"YulIdentifier","src":"532:3:25"},"nativeSrc":"532:10:25","nodeType":"YulFunctionCall","src":"532:10:25"},{"kind":"number","nativeSrc":"544:1:25","nodeType":"YulLiteral","src":"544:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"528:3:25","nodeType":"YulIdentifier","src":"528:3:25"},"nativeSrc":"528:18:25","nodeType":"YulFunctionCall","src":"528:18:25"}],"functionName":{"name":"gt","nativeSrc":"517:2:25","nodeType":"YulIdentifier","src":"517:2:25"},"nativeSrc":"517:30:25","nodeType":"YulFunctionCall","src":"517:30:25"},"nativeSrc":"514:50:25","nodeType":"YulIf","src":"514:50:25"},{"nativeSrc":"573:32:25","nodeType":"YulVariableDeclaration","src":"573:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"587:9:25","nodeType":"YulIdentifier","src":"587:9:25"},{"name":"offset","nativeSrc":"598:6:25","nodeType":"YulIdentifier","src":"598:6:25"}],"functionName":{"name":"add","nativeSrc":"583:3:25","nodeType":"YulIdentifier","src":"583:3:25"},"nativeSrc":"583:22:25","nodeType":"YulFunctionCall","src":"583:22:25"},"variables":[{"name":"_1","nativeSrc":"577:2:25","nodeType":"YulTypedName","src":"577:2:25","type":""}]},{"body":{"nativeSrc":"653:16:25","nodeType":"YulBlock","src":"653:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"662:1:25","nodeType":"YulLiteral","src":"662:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"665:1:25","nodeType":"YulLiteral","src":"665:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"655:6:25","nodeType":"YulIdentifier","src":"655:6:25"},"nativeSrc":"655:12:25","nodeType":"YulFunctionCall","src":"655:12:25"},"nativeSrc":"655:12:25","nodeType":"YulExpressionStatement","src":"655:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"632:2:25","nodeType":"YulIdentifier","src":"632:2:25"},{"kind":"number","nativeSrc":"636:4:25","nodeType":"YulLiteral","src":"636:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"628:3:25","nodeType":"YulIdentifier","src":"628:3:25"},"nativeSrc":"628:13:25","nodeType":"YulFunctionCall","src":"628:13:25"},{"name":"dataEnd","nativeSrc":"643:7:25","nodeType":"YulIdentifier","src":"643:7:25"}],"functionName":{"name":"slt","nativeSrc":"624:3:25","nodeType":"YulIdentifier","src":"624:3:25"},"nativeSrc":"624:27:25","nodeType":"YulFunctionCall","src":"624:27:25"}],"functionName":{"name":"iszero","nativeSrc":"617:6:25","nodeType":"YulIdentifier","src":"617:6:25"},"nativeSrc":"617:35:25","nodeType":"YulFunctionCall","src":"617:35:25"},"nativeSrc":"614:55:25","nodeType":"YulIf","src":"614:55:25"},{"nativeSrc":"678:23:25","nodeType":"YulVariableDeclaration","src":"678:23:25","value":{"arguments":[{"name":"_1","nativeSrc":"698:2:25","nodeType":"YulIdentifier","src":"698:2:25"}],"functionName":{"name":"mload","nativeSrc":"692:5:25","nodeType":"YulIdentifier","src":"692:5:25"},"nativeSrc":"692:9:25","nodeType":"YulFunctionCall","src":"692:9:25"},"variables":[{"name":"length","nativeSrc":"682:6:25","nodeType":"YulTypedName","src":"682:6:25","type":""}]},{"body":{"nativeSrc":"744:22:25","nodeType":"YulBlock","src":"744:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"746:16:25","nodeType":"YulIdentifier","src":"746:16:25"},"nativeSrc":"746:18:25","nodeType":"YulFunctionCall","src":"746:18:25"},"nativeSrc":"746:18:25","nodeType":"YulExpressionStatement","src":"746:18:25"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"716:6:25","nodeType":"YulIdentifier","src":"716:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"732:2:25","nodeType":"YulLiteral","src":"732:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"736:1:25","nodeType":"YulLiteral","src":"736:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"728:3:25","nodeType":"YulIdentifier","src":"728:3:25"},"nativeSrc":"728:10:25","nodeType":"YulFunctionCall","src":"728:10:25"},{"kind":"number","nativeSrc":"740:1:25","nodeType":"YulLiteral","src":"740:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"724:3:25","nodeType":"YulIdentifier","src":"724:3:25"},"nativeSrc":"724:18:25","nodeType":"YulFunctionCall","src":"724:18:25"}],"functionName":{"name":"gt","nativeSrc":"713:2:25","nodeType":"YulIdentifier","src":"713:2:25"},"nativeSrc":"713:30:25","nodeType":"YulFunctionCall","src":"713:30:25"},"nativeSrc":"710:56:25","nodeType":"YulIf","src":"710:56:25"},{"nativeSrc":"775:23:25","nodeType":"YulVariableDeclaration","src":"775:23:25","value":{"arguments":[{"kind":"number","nativeSrc":"795:2:25","nodeType":"YulLiteral","src":"795:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"789:5:25","nodeType":"YulIdentifier","src":"789:5:25"},"nativeSrc":"789:9:25","nodeType":"YulFunctionCall","src":"789:9:25"},"variables":[{"name":"memPtr","nativeSrc":"779:6:25","nodeType":"YulTypedName","src":"779:6:25","type":""}]},{"nativeSrc":"807:85:25","nodeType":"YulVariableDeclaration","src":"807:85:25","value":{"arguments":[{"name":"memPtr","nativeSrc":"829:6:25","nodeType":"YulIdentifier","src":"829:6:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"853:6:25","nodeType":"YulIdentifier","src":"853:6:25"},{"kind":"number","nativeSrc":"861:4:25","nodeType":"YulLiteral","src":"861:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"849:3:25","nodeType":"YulIdentifier","src":"849:3:25"},"nativeSrc":"849:17:25","nodeType":"YulFunctionCall","src":"849:17:25"},{"arguments":[{"kind":"number","nativeSrc":"872:2:25","nodeType":"YulLiteral","src":"872:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"868:3:25","nodeType":"YulIdentifier","src":"868:3:25"},"nativeSrc":"868:7:25","nodeType":"YulFunctionCall","src":"868:7:25"}],"functionName":{"name":"and","nativeSrc":"845:3:25","nodeType":"YulIdentifier","src":"845:3:25"},"nativeSrc":"845:31:25","nodeType":"YulFunctionCall","src":"845:31:25"},{"kind":"number","nativeSrc":"878:2:25","nodeType":"YulLiteral","src":"878:2:25","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"841:3:25","nodeType":"YulIdentifier","src":"841:3:25"},"nativeSrc":"841:40:25","nodeType":"YulFunctionCall","src":"841:40:25"},{"arguments":[{"kind":"number","nativeSrc":"887:2:25","nodeType":"YulLiteral","src":"887:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"883:3:25","nodeType":"YulIdentifier","src":"883:3:25"},"nativeSrc":"883:7:25","nodeType":"YulFunctionCall","src":"883:7:25"}],"functionName":{"name":"and","nativeSrc":"837:3:25","nodeType":"YulIdentifier","src":"837:3:25"},"nativeSrc":"837:54:25","nodeType":"YulFunctionCall","src":"837:54:25"}],"functionName":{"name":"add","nativeSrc":"825:3:25","nodeType":"YulIdentifier","src":"825:3:25"},"nativeSrc":"825:67:25","nodeType":"YulFunctionCall","src":"825:67:25"},"variables":[{"name":"newFreePtr","nativeSrc":"811:10:25","nodeType":"YulTypedName","src":"811:10:25","type":""}]},{"body":{"nativeSrc":"967:22:25","nodeType":"YulBlock","src":"967:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"969:16:25","nodeType":"YulIdentifier","src":"969:16:25"},"nativeSrc":"969:18:25","nodeType":"YulFunctionCall","src":"969:18:25"},"nativeSrc":"969:18:25","nodeType":"YulExpressionStatement","src":"969:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"910:10:25","nodeType":"YulIdentifier","src":"910:10:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"930:2:25","nodeType":"YulLiteral","src":"930:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"934:1:25","nodeType":"YulLiteral","src":"934:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"926:3:25","nodeType":"YulIdentifier","src":"926:3:25"},"nativeSrc":"926:10:25","nodeType":"YulFunctionCall","src":"926:10:25"},{"kind":"number","nativeSrc":"938:1:25","nodeType":"YulLiteral","src":"938:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"922:3:25","nodeType":"YulIdentifier","src":"922:3:25"},"nativeSrc":"922:18:25","nodeType":"YulFunctionCall","src":"922:18:25"}],"functionName":{"name":"gt","nativeSrc":"907:2:25","nodeType":"YulIdentifier","src":"907:2:25"},"nativeSrc":"907:34:25","nodeType":"YulFunctionCall","src":"907:34:25"},{"arguments":[{"name":"newFreePtr","nativeSrc":"946:10:25","nodeType":"YulIdentifier","src":"946:10:25"},{"name":"memPtr","nativeSrc":"958:6:25","nodeType":"YulIdentifier","src":"958:6:25"}],"functionName":{"name":"lt","nativeSrc":"943:2:25","nodeType":"YulIdentifier","src":"943:2:25"},"nativeSrc":"943:22:25","nodeType":"YulFunctionCall","src":"943:22:25"}],"functionName":{"name":"or","nativeSrc":"904:2:25","nodeType":"YulIdentifier","src":"904:2:25"},"nativeSrc":"904:62:25","nodeType":"YulFunctionCall","src":"904:62:25"},"nativeSrc":"901:88:25","nodeType":"YulIf","src":"901:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1005:2:25","nodeType":"YulLiteral","src":"1005:2:25","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1009:10:25","nodeType":"YulIdentifier","src":"1009:10:25"}],"functionName":{"name":"mstore","nativeSrc":"998:6:25","nodeType":"YulIdentifier","src":"998:6:25"},"nativeSrc":"998:22:25","nodeType":"YulFunctionCall","src":"998:22:25"},"nativeSrc":"998:22:25","nodeType":"YulExpressionStatement","src":"998:22:25"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1036:6:25","nodeType":"YulIdentifier","src":"1036:6:25"},{"name":"length","nativeSrc":"1044:6:25","nodeType":"YulIdentifier","src":"1044:6:25"}],"functionName":{"name":"mstore","nativeSrc":"1029:6:25","nodeType":"YulIdentifier","src":"1029:6:25"},"nativeSrc":"1029:22:25","nodeType":"YulFunctionCall","src":"1029:22:25"},"nativeSrc":"1029:22:25","nodeType":"YulExpressionStatement","src":"1029:22:25"},{"body":{"nativeSrc":"1101:16:25","nodeType":"YulBlock","src":"1101:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1110:1:25","nodeType":"YulLiteral","src":"1110:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1113:1:25","nodeType":"YulLiteral","src":"1113:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1103:6:25","nodeType":"YulIdentifier","src":"1103:6:25"},"nativeSrc":"1103:12:25","nodeType":"YulFunctionCall","src":"1103:12:25"},"nativeSrc":"1103:12:25","nodeType":"YulExpressionStatement","src":"1103:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1074:2:25","nodeType":"YulIdentifier","src":"1074:2:25"},{"name":"length","nativeSrc":"1078:6:25","nodeType":"YulIdentifier","src":"1078:6:25"}],"functionName":{"name":"add","nativeSrc":"1070:3:25","nodeType":"YulIdentifier","src":"1070:3:25"},"nativeSrc":"1070:15:25","nodeType":"YulFunctionCall","src":"1070:15:25"},{"kind":"number","nativeSrc":"1087:2:25","nodeType":"YulLiteral","src":"1087:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1066:3:25","nodeType":"YulIdentifier","src":"1066:3:25"},"nativeSrc":"1066:24:25","nodeType":"YulFunctionCall","src":"1066:24:25"},{"name":"dataEnd","nativeSrc":"1092:7:25","nodeType":"YulIdentifier","src":"1092:7:25"}],"functionName":{"name":"gt","nativeSrc":"1063:2:25","nodeType":"YulIdentifier","src":"1063:2:25"},"nativeSrc":"1063:37:25","nodeType":"YulFunctionCall","src":"1063:37:25"},"nativeSrc":"1060:57:25","nodeType":"YulIf","src":"1060:57:25"},{"nativeSrc":"1126:10:25","nodeType":"YulVariableDeclaration","src":"1126:10:25","value":{"kind":"number","nativeSrc":"1135:1:25","nodeType":"YulLiteral","src":"1135:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1130:1:25","nodeType":"YulTypedName","src":"1130:1:25","type":""}]},{"body":{"nativeSrc":"1195:83:25","nodeType":"YulBlock","src":"1195:83:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1224:6:25","nodeType":"YulIdentifier","src":"1224:6:25"},{"name":"i","nativeSrc":"1232:1:25","nodeType":"YulIdentifier","src":"1232:1:25"}],"functionName":{"name":"add","nativeSrc":"1220:3:25","nodeType":"YulIdentifier","src":"1220:3:25"},"nativeSrc":"1220:14:25","nodeType":"YulFunctionCall","src":"1220:14:25"},{"kind":"number","nativeSrc":"1236:2:25","nodeType":"YulLiteral","src":"1236:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1216:3:25","nodeType":"YulIdentifier","src":"1216:3:25"},"nativeSrc":"1216:23:25","nodeType":"YulFunctionCall","src":"1216:23:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1255:2:25","nodeType":"YulIdentifier","src":"1255:2:25"},{"name":"i","nativeSrc":"1259:1:25","nodeType":"YulIdentifier","src":"1259:1:25"}],"functionName":{"name":"add","nativeSrc":"1251:3:25","nodeType":"YulIdentifier","src":"1251:3:25"},"nativeSrc":"1251:10:25","nodeType":"YulFunctionCall","src":"1251:10:25"},{"kind":"number","nativeSrc":"1263:2:25","nodeType":"YulLiteral","src":"1263:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1247:3:25","nodeType":"YulIdentifier","src":"1247:3:25"},"nativeSrc":"1247:19:25","nodeType":"YulFunctionCall","src":"1247:19:25"}],"functionName":{"name":"mload","nativeSrc":"1241:5:25","nodeType":"YulIdentifier","src":"1241:5:25"},"nativeSrc":"1241:26:25","nodeType":"YulFunctionCall","src":"1241:26:25"}],"functionName":{"name":"mstore","nativeSrc":"1209:6:25","nodeType":"YulIdentifier","src":"1209:6:25"},"nativeSrc":"1209:59:25","nodeType":"YulFunctionCall","src":"1209:59:25"},"nativeSrc":"1209:59:25","nodeType":"YulExpressionStatement","src":"1209:59:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1156:1:25","nodeType":"YulIdentifier","src":"1156:1:25"},{"name":"length","nativeSrc":"1159:6:25","nodeType":"YulIdentifier","src":"1159:6:25"}],"functionName":{"name":"lt","nativeSrc":"1153:2:25","nodeType":"YulIdentifier","src":"1153:2:25"},"nativeSrc":"1153:13:25","nodeType":"YulFunctionCall","src":"1153:13:25"},"nativeSrc":"1145:133:25","nodeType":"YulForLoop","post":{"nativeSrc":"1167:19:25","nodeType":"YulBlock","src":"1167:19:25","statements":[{"nativeSrc":"1169:15:25","nodeType":"YulAssignment","src":"1169:15:25","value":{"arguments":[{"name":"i","nativeSrc":"1178:1:25","nodeType":"YulIdentifier","src":"1178:1:25"},{"kind":"number","nativeSrc":"1181:2:25","nodeType":"YulLiteral","src":"1181:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1174:3:25","nodeType":"YulIdentifier","src":"1174:3:25"},"nativeSrc":"1174:10:25","nodeType":"YulFunctionCall","src":"1174:10:25"},"variableNames":[{"name":"i","nativeSrc":"1169:1:25","nodeType":"YulIdentifier","src":"1169:1:25"}]}]},"pre":{"nativeSrc":"1149:3:25","nodeType":"YulBlock","src":"1149:3:25","statements":[]},"src":"1145:133:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1302:6:25","nodeType":"YulIdentifier","src":"1302:6:25"},{"name":"length","nativeSrc":"1310:6:25","nodeType":"YulIdentifier","src":"1310:6:25"}],"functionName":{"name":"add","nativeSrc":"1298:3:25","nodeType":"YulIdentifier","src":"1298:3:25"},"nativeSrc":"1298:19:25","nodeType":"YulFunctionCall","src":"1298:19:25"},{"kind":"number","nativeSrc":"1319:2:25","nodeType":"YulLiteral","src":"1319:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1294:3:25","nodeType":"YulIdentifier","src":"1294:3:25"},"nativeSrc":"1294:28:25","nodeType":"YulFunctionCall","src":"1294:28:25"},{"kind":"number","nativeSrc":"1324:1:25","nodeType":"YulLiteral","src":"1324:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1287:6:25","nodeType":"YulIdentifier","src":"1287:6:25"},"nativeSrc":"1287:39:25","nodeType":"YulFunctionCall","src":"1287:39:25"},"nativeSrc":"1287:39:25","nodeType":"YulExpressionStatement","src":"1287:39:25"},{"nativeSrc":"1335:16:25","nodeType":"YulAssignment","src":"1335:16:25","value":{"name":"memPtr","nativeSrc":"1345:6:25","nodeType":"YulIdentifier","src":"1345:6:25"},"variableNames":[{"name":"value1","nativeSrc":"1335:6:25","nodeType":"YulIdentifier","src":"1335:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory","nativeSrc":"146:1211:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"212:9:25","nodeType":"YulTypedName","src":"212:9:25","type":""},{"name":"dataEnd","nativeSrc":"223:7:25","nodeType":"YulTypedName","src":"223:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"235:6:25","nodeType":"YulTypedName","src":"235:6:25","type":""},{"name":"value1","nativeSrc":"243:6:25","nodeType":"YulTypedName","src":"243:6:25","type":""}],"src":"146:1211:25"},{"body":{"nativeSrc":"1417:325:25","nodeType":"YulBlock","src":"1417:325:25","statements":[{"nativeSrc":"1427:22:25","nodeType":"YulAssignment","src":"1427:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"1441:1:25","nodeType":"YulLiteral","src":"1441:1:25","type":"","value":"1"},{"name":"data","nativeSrc":"1444:4:25","nodeType":"YulIdentifier","src":"1444:4:25"}],"functionName":{"name":"shr","nativeSrc":"1437:3:25","nodeType":"YulIdentifier","src":"1437:3:25"},"nativeSrc":"1437:12:25","nodeType":"YulFunctionCall","src":"1437:12:25"},"variableNames":[{"name":"length","nativeSrc":"1427:6:25","nodeType":"YulIdentifier","src":"1427:6:25"}]},{"nativeSrc":"1458:38:25","nodeType":"YulVariableDeclaration","src":"1458:38:25","value":{"arguments":[{"name":"data","nativeSrc":"1488:4:25","nodeType":"YulIdentifier","src":"1488:4:25"},{"kind":"number","nativeSrc":"1494:1:25","nodeType":"YulLiteral","src":"1494:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1484:3:25","nodeType":"YulIdentifier","src":"1484:3:25"},"nativeSrc":"1484:12:25","nodeType":"YulFunctionCall","src":"1484:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1462:18:25","nodeType":"YulTypedName","src":"1462:18:25","type":""}]},{"body":{"nativeSrc":"1535:31:25","nodeType":"YulBlock","src":"1535:31:25","statements":[{"nativeSrc":"1537:27:25","nodeType":"YulAssignment","src":"1537:27:25","value":{"arguments":[{"name":"length","nativeSrc":"1551:6:25","nodeType":"YulIdentifier","src":"1551:6:25"},{"kind":"number","nativeSrc":"1559:4:25","nodeType":"YulLiteral","src":"1559:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1547:3:25","nodeType":"YulIdentifier","src":"1547:3:25"},"nativeSrc":"1547:17:25","nodeType":"YulFunctionCall","src":"1547:17:25"},"variableNames":[{"name":"length","nativeSrc":"1537:6:25","nodeType":"YulIdentifier","src":"1537:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1515:18:25","nodeType":"YulIdentifier","src":"1515:18:25"}],"functionName":{"name":"iszero","nativeSrc":"1508:6:25","nodeType":"YulIdentifier","src":"1508:6:25"},"nativeSrc":"1508:26:25","nodeType":"YulFunctionCall","src":"1508:26:25"},"nativeSrc":"1505:61:25","nodeType":"YulIf","src":"1505:61:25"},{"body":{"nativeSrc":"1625:111:25","nodeType":"YulBlock","src":"1625:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1646:1:25","nodeType":"YulLiteral","src":"1646:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1653:3:25","nodeType":"YulLiteral","src":"1653:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"1658:10:25","nodeType":"YulLiteral","src":"1658:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1649:3:25","nodeType":"YulIdentifier","src":"1649:3:25"},"nativeSrc":"1649:20:25","nodeType":"YulFunctionCall","src":"1649:20:25"}],"functionName":{"name":"mstore","nativeSrc":"1639:6:25","nodeType":"YulIdentifier","src":"1639:6:25"},"nativeSrc":"1639:31:25","nodeType":"YulFunctionCall","src":"1639:31:25"},"nativeSrc":"1639:31:25","nodeType":"YulExpressionStatement","src":"1639:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1690:1:25","nodeType":"YulLiteral","src":"1690:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"1693:4:25","nodeType":"YulLiteral","src":"1693:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1683:6:25","nodeType":"YulIdentifier","src":"1683:6:25"},"nativeSrc":"1683:15:25","nodeType":"YulFunctionCall","src":"1683:15:25"},"nativeSrc":"1683:15:25","nodeType":"YulExpressionStatement","src":"1683:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1718:1:25","nodeType":"YulLiteral","src":"1718:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1721:4:25","nodeType":"YulLiteral","src":"1721:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1711:6:25","nodeType":"YulIdentifier","src":"1711:6:25"},"nativeSrc":"1711:15:25","nodeType":"YulFunctionCall","src":"1711:15:25"},"nativeSrc":"1711:15:25","nodeType":"YulExpressionStatement","src":"1711:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1581:18:25","nodeType":"YulIdentifier","src":"1581:18:25"},{"arguments":[{"name":"length","nativeSrc":"1604:6:25","nodeType":"YulIdentifier","src":"1604:6:25"},{"kind":"number","nativeSrc":"1612:2:25","nodeType":"YulLiteral","src":"1612:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1601:2:25","nodeType":"YulIdentifier","src":"1601:2:25"},"nativeSrc":"1601:14:25","nodeType":"YulFunctionCall","src":"1601:14:25"}],"functionName":{"name":"eq","nativeSrc":"1578:2:25","nodeType":"YulIdentifier","src":"1578:2:25"},"nativeSrc":"1578:38:25","nodeType":"YulFunctionCall","src":"1578:38:25"},"nativeSrc":"1575:161:25","nodeType":"YulIf","src":"1575:161:25"}]},"name":"extract_byte_array_length","nativeSrc":"1362:380:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1397:4:25","nodeType":"YulTypedName","src":"1397:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1406:6:25","nodeType":"YulTypedName","src":"1406:6:25","type":""}],"src":"1362:380:25"},{"body":{"nativeSrc":"1803:65:25","nodeType":"YulBlock","src":"1803:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1820:1:25","nodeType":"YulLiteral","src":"1820:1:25","type":"","value":"0"},{"name":"ptr","nativeSrc":"1823:3:25","nodeType":"YulIdentifier","src":"1823:3:25"}],"functionName":{"name":"mstore","nativeSrc":"1813:6:25","nodeType":"YulIdentifier","src":"1813:6:25"},"nativeSrc":"1813:14:25","nodeType":"YulFunctionCall","src":"1813:14:25"},"nativeSrc":"1813:14:25","nodeType":"YulExpressionStatement","src":"1813:14:25"},{"nativeSrc":"1836:26:25","nodeType":"YulAssignment","src":"1836:26:25","value":{"arguments":[{"kind":"number","nativeSrc":"1854:1:25","nodeType":"YulLiteral","src":"1854:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1857:4:25","nodeType":"YulLiteral","src":"1857:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1844:9:25","nodeType":"YulIdentifier","src":"1844:9:25"},"nativeSrc":"1844:18:25","nodeType":"YulFunctionCall","src":"1844:18:25"},"variableNames":[{"name":"data","nativeSrc":"1836:4:25","nodeType":"YulIdentifier","src":"1836:4:25"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"1747:121:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1786:3:25","nodeType":"YulTypedName","src":"1786:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1794:4:25","nodeType":"YulTypedName","src":"1794:4:25","type":""}],"src":"1747:121:25"},{"body":{"nativeSrc":"1954:437:25","nodeType":"YulBlock","src":"1954:437:25","statements":[{"body":{"nativeSrc":"1987:398:25","nodeType":"YulBlock","src":"1987:398:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2008:1:25","nodeType":"YulLiteral","src":"2008:1:25","type":"","value":"0"},{"name":"array","nativeSrc":"2011:5:25","nodeType":"YulIdentifier","src":"2011:5:25"}],"functionName":{"name":"mstore","nativeSrc":"2001:6:25","nodeType":"YulIdentifier","src":"2001:6:25"},"nativeSrc":"2001:16:25","nodeType":"YulFunctionCall","src":"2001:16:25"},"nativeSrc":"2001:16:25","nodeType":"YulExpressionStatement","src":"2001:16:25"},{"nativeSrc":"2030:30:25","nodeType":"YulVariableDeclaration","src":"2030:30:25","value":{"arguments":[{"kind":"number","nativeSrc":"2052:1:25","nodeType":"YulLiteral","src":"2052:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2055:4:25","nodeType":"YulLiteral","src":"2055:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2042:9:25","nodeType":"YulIdentifier","src":"2042:9:25"},"nativeSrc":"2042:18:25","nodeType":"YulFunctionCall","src":"2042:18:25"},"variables":[{"name":"data","nativeSrc":"2034:4:25","nodeType":"YulTypedName","src":"2034:4:25","type":""}]},{"nativeSrc":"2073:57:25","nodeType":"YulVariableDeclaration","src":"2073:57:25","value":{"arguments":[{"name":"data","nativeSrc":"2096:4:25","nodeType":"YulIdentifier","src":"2096:4:25"},{"arguments":[{"kind":"number","nativeSrc":"2106:1:25","nodeType":"YulLiteral","src":"2106:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"2113:10:25","nodeType":"YulIdentifier","src":"2113:10:25"},{"kind":"number","nativeSrc":"2125:2:25","nodeType":"YulLiteral","src":"2125:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2109:3:25","nodeType":"YulIdentifier","src":"2109:3:25"},"nativeSrc":"2109:19:25","nodeType":"YulFunctionCall","src":"2109:19:25"}],"functionName":{"name":"shr","nativeSrc":"2102:3:25","nodeType":"YulIdentifier","src":"2102:3:25"},"nativeSrc":"2102:27:25","nodeType":"YulFunctionCall","src":"2102:27:25"}],"functionName":{"name":"add","nativeSrc":"2092:3:25","nodeType":"YulIdentifier","src":"2092:3:25"},"nativeSrc":"2092:38:25","nodeType":"YulFunctionCall","src":"2092:38:25"},"variables":[{"name":"deleteStart","nativeSrc":"2077:11:25","nodeType":"YulTypedName","src":"2077:11:25","type":""}]},{"body":{"nativeSrc":"2167:23:25","nodeType":"YulBlock","src":"2167:23:25","statements":[{"nativeSrc":"2169:19:25","nodeType":"YulAssignment","src":"2169:19:25","value":{"name":"data","nativeSrc":"2184:4:25","nodeType":"YulIdentifier","src":"2184:4:25"},"variableNames":[{"name":"deleteStart","nativeSrc":"2169:11:25","nodeType":"YulIdentifier","src":"2169:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"2149:10:25","nodeType":"YulIdentifier","src":"2149:10:25"},{"kind":"number","nativeSrc":"2161:4:25","nodeType":"YulLiteral","src":"2161:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"2146:2:25","nodeType":"YulIdentifier","src":"2146:2:25"},"nativeSrc":"2146:20:25","nodeType":"YulFunctionCall","src":"2146:20:25"},"nativeSrc":"2143:47:25","nodeType":"YulIf","src":"2143:47:25"},{"nativeSrc":"2203:41:25","nodeType":"YulVariableDeclaration","src":"2203:41:25","value":{"arguments":[{"name":"data","nativeSrc":"2217:4:25","nodeType":"YulIdentifier","src":"2217:4:25"},{"arguments":[{"kind":"number","nativeSrc":"2227:1:25","nodeType":"YulLiteral","src":"2227:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"2234:3:25","nodeType":"YulIdentifier","src":"2234:3:25"},{"kind":"number","nativeSrc":"2239:2:25","nodeType":"YulLiteral","src":"2239:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2230:3:25","nodeType":"YulIdentifier","src":"2230:3:25"},"nativeSrc":"2230:12:25","nodeType":"YulFunctionCall","src":"2230:12:25"}],"functionName":{"name":"shr","nativeSrc":"2223:3:25","nodeType":"YulIdentifier","src":"2223:3:25"},"nativeSrc":"2223:20:25","nodeType":"YulFunctionCall","src":"2223:20:25"}],"functionName":{"name":"add","nativeSrc":"2213:3:25","nodeType":"YulIdentifier","src":"2213:3:25"},"nativeSrc":"2213:31:25","nodeType":"YulFunctionCall","src":"2213:31:25"},"variables":[{"name":"_1","nativeSrc":"2207:2:25","nodeType":"YulTypedName","src":"2207:2:25","type":""}]},{"nativeSrc":"2257:24:25","nodeType":"YulVariableDeclaration","src":"2257:24:25","value":{"name":"deleteStart","nativeSrc":"2270:11:25","nodeType":"YulIdentifier","src":"2270:11:25"},"variables":[{"name":"start","nativeSrc":"2261:5:25","nodeType":"YulTypedName","src":"2261:5:25","type":""}]},{"body":{"nativeSrc":"2355:20:25","nodeType":"YulBlock","src":"2355:20:25","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2364:5:25","nodeType":"YulIdentifier","src":"2364:5:25"},{"kind":"number","nativeSrc":"2371:1:25","nodeType":"YulLiteral","src":"2371:1:25","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"2357:6:25","nodeType":"YulIdentifier","src":"2357:6:25"},"nativeSrc":"2357:16:25","nodeType":"YulFunctionCall","src":"2357:16:25"},"nativeSrc":"2357:16:25","nodeType":"YulExpressionStatement","src":"2357:16:25"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2305:5:25","nodeType":"YulIdentifier","src":"2305:5:25"},{"name":"_1","nativeSrc":"2312:2:25","nodeType":"YulIdentifier","src":"2312:2:25"}],"functionName":{"name":"lt","nativeSrc":"2302:2:25","nodeType":"YulIdentifier","src":"2302:2:25"},"nativeSrc":"2302:13:25","nodeType":"YulFunctionCall","src":"2302:13:25"},"nativeSrc":"2294:81:25","nodeType":"YulForLoop","post":{"nativeSrc":"2316:26:25","nodeType":"YulBlock","src":"2316:26:25","statements":[{"nativeSrc":"2318:22:25","nodeType":"YulAssignment","src":"2318:22:25","value":{"arguments":[{"name":"start","nativeSrc":"2331:5:25","nodeType":"YulIdentifier","src":"2331:5:25"},{"kind":"number","nativeSrc":"2338:1:25","nodeType":"YulLiteral","src":"2338:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2327:3:25","nodeType":"YulIdentifier","src":"2327:3:25"},"nativeSrc":"2327:13:25","nodeType":"YulFunctionCall","src":"2327:13:25"},"variableNames":[{"name":"start","nativeSrc":"2318:5:25","nodeType":"YulIdentifier","src":"2318:5:25"}]}]},"pre":{"nativeSrc":"2298:3:25","nodeType":"YulBlock","src":"2298:3:25","statements":[]},"src":"2294:81:25"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1970:3:25","nodeType":"YulIdentifier","src":"1970:3:25"},{"kind":"number","nativeSrc":"1975:2:25","nodeType":"YulLiteral","src":"1975:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1967:2:25","nodeType":"YulIdentifier","src":"1967:2:25"},"nativeSrc":"1967:11:25","nodeType":"YulFunctionCall","src":"1967:11:25"},"nativeSrc":"1964:421:25","nodeType":"YulIf","src":"1964:421:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1873:518:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"1926:5:25","nodeType":"YulTypedName","src":"1926:5:25","type":""},{"name":"len","nativeSrc":"1933:3:25","nodeType":"YulTypedName","src":"1933:3:25","type":""},{"name":"startIndex","nativeSrc":"1938:10:25","nodeType":"YulTypedName","src":"1938:10:25","type":""}],"src":"1873:518:25"},{"body":{"nativeSrc":"2481:81:25","nodeType":"YulBlock","src":"2481:81:25","statements":[{"nativeSrc":"2491:65:25","nodeType":"YulAssignment","src":"2491:65:25","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"2506:4:25","nodeType":"YulIdentifier","src":"2506:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2524:1:25","nodeType":"YulLiteral","src":"2524:1:25","type":"","value":"3"},{"name":"len","nativeSrc":"2527:3:25","nodeType":"YulIdentifier","src":"2527:3:25"}],"functionName":{"name":"shl","nativeSrc":"2520:3:25","nodeType":"YulIdentifier","src":"2520:3:25"},"nativeSrc":"2520:11:25","nodeType":"YulFunctionCall","src":"2520:11:25"},{"arguments":[{"kind":"number","nativeSrc":"2537:1:25","nodeType":"YulLiteral","src":"2537:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2533:3:25","nodeType":"YulIdentifier","src":"2533:3:25"},"nativeSrc":"2533:6:25","nodeType":"YulFunctionCall","src":"2533:6:25"}],"functionName":{"name":"shr","nativeSrc":"2516:3:25","nodeType":"YulIdentifier","src":"2516:3:25"},"nativeSrc":"2516:24:25","nodeType":"YulFunctionCall","src":"2516:24:25"}],"functionName":{"name":"not","nativeSrc":"2512:3:25","nodeType":"YulIdentifier","src":"2512:3:25"},"nativeSrc":"2512:29:25","nodeType":"YulFunctionCall","src":"2512:29:25"}],"functionName":{"name":"and","nativeSrc":"2502:3:25","nodeType":"YulIdentifier","src":"2502:3:25"},"nativeSrc":"2502:40:25","nodeType":"YulFunctionCall","src":"2502:40:25"},{"arguments":[{"kind":"number","nativeSrc":"2548:1:25","nodeType":"YulLiteral","src":"2548:1:25","type":"","value":"1"},{"name":"len","nativeSrc":"2551:3:25","nodeType":"YulIdentifier","src":"2551:3:25"}],"functionName":{"name":"shl","nativeSrc":"2544:3:25","nodeType":"YulIdentifier","src":"2544:3:25"},"nativeSrc":"2544:11:25","nodeType":"YulFunctionCall","src":"2544:11:25"}],"functionName":{"name":"or","nativeSrc":"2499:2:25","nodeType":"YulIdentifier","src":"2499:2:25"},"nativeSrc":"2499:57:25","nodeType":"YulFunctionCall","src":"2499:57:25"},"variableNames":[{"name":"used","nativeSrc":"2491:4:25","nodeType":"YulIdentifier","src":"2491:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2396:166:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2458:4:25","nodeType":"YulTypedName","src":"2458:4:25","type":""},{"name":"len","nativeSrc":"2464:3:25","nodeType":"YulTypedName","src":"2464:3:25","type":""}],"returnVariables":[{"name":"used","nativeSrc":"2472:4:25","nodeType":"YulTypedName","src":"2472:4:25","type":""}],"src":"2396:166:25"},{"body":{"nativeSrc":"2663:1203:25","nodeType":"YulBlock","src":"2663:1203:25","statements":[{"nativeSrc":"2673:24:25","nodeType":"YulVariableDeclaration","src":"2673:24:25","value":{"arguments":[{"name":"src","nativeSrc":"2693:3:25","nodeType":"YulIdentifier","src":"2693:3:25"}],"functionName":{"name":"mload","nativeSrc":"2687:5:25","nodeType":"YulIdentifier","src":"2687:5:25"},"nativeSrc":"2687:10:25","nodeType":"YulFunctionCall","src":"2687:10:25"},"variables":[{"name":"newLen","nativeSrc":"2677:6:25","nodeType":"YulTypedName","src":"2677:6:25","type":""}]},{"body":{"nativeSrc":"2740:22:25","nodeType":"YulBlock","src":"2740:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2742:16:25","nodeType":"YulIdentifier","src":"2742:16:25"},"nativeSrc":"2742:18:25","nodeType":"YulFunctionCall","src":"2742:18:25"},"nativeSrc":"2742:18:25","nodeType":"YulExpressionStatement","src":"2742:18:25"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"2712:6:25","nodeType":"YulIdentifier","src":"2712:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2728:2:25","nodeType":"YulLiteral","src":"2728:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"2732:1:25","nodeType":"YulLiteral","src":"2732:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2724:3:25","nodeType":"YulIdentifier","src":"2724:3:25"},"nativeSrc":"2724:10:25","nodeType":"YulFunctionCall","src":"2724:10:25"},{"kind":"number","nativeSrc":"2736:1:25","nodeType":"YulLiteral","src":"2736:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2720:3:25","nodeType":"YulIdentifier","src":"2720:3:25"},"nativeSrc":"2720:18:25","nodeType":"YulFunctionCall","src":"2720:18:25"}],"functionName":{"name":"gt","nativeSrc":"2709:2:25","nodeType":"YulIdentifier","src":"2709:2:25"},"nativeSrc":"2709:30:25","nodeType":"YulFunctionCall","src":"2709:30:25"},"nativeSrc":"2706:56:25","nodeType":"YulIf","src":"2706:56:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2815:4:25","nodeType":"YulIdentifier","src":"2815:4:25"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2853:4:25","nodeType":"YulIdentifier","src":"2853:4:25"}],"functionName":{"name":"sload","nativeSrc":"2847:5:25","nodeType":"YulIdentifier","src":"2847:5:25"},"nativeSrc":"2847:11:25","nodeType":"YulFunctionCall","src":"2847:11:25"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"2821:25:25","nodeType":"YulIdentifier","src":"2821:25:25"},"nativeSrc":"2821:38:25","nodeType":"YulFunctionCall","src":"2821:38:25"},{"name":"newLen","nativeSrc":"2861:6:25","nodeType":"YulIdentifier","src":"2861:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2771:43:25","nodeType":"YulIdentifier","src":"2771:43:25"},"nativeSrc":"2771:97:25","nodeType":"YulFunctionCall","src":"2771:97:25"},"nativeSrc":"2771:97:25","nodeType":"YulExpressionStatement","src":"2771:97:25"},{"nativeSrc":"2877:18:25","nodeType":"YulVariableDeclaration","src":"2877:18:25","value":{"kind":"number","nativeSrc":"2894:1:25","nodeType":"YulLiteral","src":"2894:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"2881:9:25","nodeType":"YulTypedName","src":"2881:9:25","type":""}]},{"nativeSrc":"2904:17:25","nodeType":"YulAssignment","src":"2904:17:25","value":{"kind":"number","nativeSrc":"2917:4:25","nodeType":"YulLiteral","src":"2917:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"2904:9:25","nodeType":"YulIdentifier","src":"2904:9:25"}]},{"cases":[{"body":{"nativeSrc":"2967:642:25","nodeType":"YulBlock","src":"2967:642:25","statements":[{"nativeSrc":"2981:35:25","nodeType":"YulVariableDeclaration","src":"2981:35:25","value":{"arguments":[{"name":"newLen","nativeSrc":"3000:6:25","nodeType":"YulIdentifier","src":"3000:6:25"},{"arguments":[{"kind":"number","nativeSrc":"3012:2:25","nodeType":"YulLiteral","src":"3012:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3008:3:25","nodeType":"YulIdentifier","src":"3008:3:25"},"nativeSrc":"3008:7:25","nodeType":"YulFunctionCall","src":"3008:7:25"}],"functionName":{"name":"and","nativeSrc":"2996:3:25","nodeType":"YulIdentifier","src":"2996:3:25"},"nativeSrc":"2996:20:25","nodeType":"YulFunctionCall","src":"2996:20:25"},"variables":[{"name":"loopEnd","nativeSrc":"2985:7:25","nodeType":"YulTypedName","src":"2985:7:25","type":""}]},{"nativeSrc":"3029:49:25","nodeType":"YulVariableDeclaration","src":"3029:49:25","value":{"arguments":[{"name":"slot","nativeSrc":"3073:4:25","nodeType":"YulIdentifier","src":"3073:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"3043:29:25","nodeType":"YulIdentifier","src":"3043:29:25"},"nativeSrc":"3043:35:25","nodeType":"YulFunctionCall","src":"3043:35:25"},"variables":[{"name":"dstPtr","nativeSrc":"3033:6:25","nodeType":"YulTypedName","src":"3033:6:25","type":""}]},{"nativeSrc":"3091:10:25","nodeType":"YulVariableDeclaration","src":"3091:10:25","value":{"kind":"number","nativeSrc":"3100:1:25","nodeType":"YulLiteral","src":"3100:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3095:1:25","nodeType":"YulTypedName","src":"3095:1:25","type":""}]},{"body":{"nativeSrc":"3171:165:25","nodeType":"YulBlock","src":"3171:165:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3196:6:25","nodeType":"YulIdentifier","src":"3196:6:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3214:3:25","nodeType":"YulIdentifier","src":"3214:3:25"},{"name":"srcOffset","nativeSrc":"3219:9:25","nodeType":"YulIdentifier","src":"3219:9:25"}],"functionName":{"name":"add","nativeSrc":"3210:3:25","nodeType":"YulIdentifier","src":"3210:3:25"},"nativeSrc":"3210:19:25","nodeType":"YulFunctionCall","src":"3210:19:25"}],"functionName":{"name":"mload","nativeSrc":"3204:5:25","nodeType":"YulIdentifier","src":"3204:5:25"},"nativeSrc":"3204:26:25","nodeType":"YulFunctionCall","src":"3204:26:25"}],"functionName":{"name":"sstore","nativeSrc":"3189:6:25","nodeType":"YulIdentifier","src":"3189:6:25"},"nativeSrc":"3189:42:25","nodeType":"YulFunctionCall","src":"3189:42:25"},"nativeSrc":"3189:42:25","nodeType":"YulExpressionStatement","src":"3189:42:25"},{"nativeSrc":"3248:24:25","nodeType":"YulAssignment","src":"3248:24:25","value":{"arguments":[{"name":"dstPtr","nativeSrc":"3262:6:25","nodeType":"YulIdentifier","src":"3262:6:25"},{"kind":"number","nativeSrc":"3270:1:25","nodeType":"YulLiteral","src":"3270:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3258:3:25","nodeType":"YulIdentifier","src":"3258:3:25"},"nativeSrc":"3258:14:25","nodeType":"YulFunctionCall","src":"3258:14:25"},"variableNames":[{"name":"dstPtr","nativeSrc":"3248:6:25","nodeType":"YulIdentifier","src":"3248:6:25"}]},{"nativeSrc":"3289:33:25","nodeType":"YulAssignment","src":"3289:33:25","value":{"arguments":[{"name":"srcOffset","nativeSrc":"3306:9:25","nodeType":"YulIdentifier","src":"3306:9:25"},{"kind":"number","nativeSrc":"3317:4:25","nodeType":"YulLiteral","src":"3317:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3302:3:25","nodeType":"YulIdentifier","src":"3302:3:25"},"nativeSrc":"3302:20:25","nodeType":"YulFunctionCall","src":"3302:20:25"},"variableNames":[{"name":"srcOffset","nativeSrc":"3289:9:25","nodeType":"YulIdentifier","src":"3289:9:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3125:1:25","nodeType":"YulIdentifier","src":"3125:1:25"},{"name":"loopEnd","nativeSrc":"3128:7:25","nodeType":"YulIdentifier","src":"3128:7:25"}],"functionName":{"name":"lt","nativeSrc":"3122:2:25","nodeType":"YulIdentifier","src":"3122:2:25"},"nativeSrc":"3122:14:25","nodeType":"YulFunctionCall","src":"3122:14:25"},"nativeSrc":"3114:222:25","nodeType":"YulForLoop","post":{"nativeSrc":"3137:21:25","nodeType":"YulBlock","src":"3137:21:25","statements":[{"nativeSrc":"3139:17:25","nodeType":"YulAssignment","src":"3139:17:25","value":{"arguments":[{"name":"i","nativeSrc":"3148:1:25","nodeType":"YulIdentifier","src":"3148:1:25"},{"kind":"number","nativeSrc":"3151:4:25","nodeType":"YulLiteral","src":"3151:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3144:3:25","nodeType":"YulIdentifier","src":"3144:3:25"},"nativeSrc":"3144:12:25","nodeType":"YulFunctionCall","src":"3144:12:25"},"variableNames":[{"name":"i","nativeSrc":"3139:1:25","nodeType":"YulIdentifier","src":"3139:1:25"}]}]},"pre":{"nativeSrc":"3118:3:25","nodeType":"YulBlock","src":"3118:3:25","statements":[]},"src":"3114:222:25"},{"body":{"nativeSrc":"3384:166:25","nodeType":"YulBlock","src":"3384:166:25","statements":[{"nativeSrc":"3402:43:25","nodeType":"YulVariableDeclaration","src":"3402:43:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3429:3:25","nodeType":"YulIdentifier","src":"3429:3:25"},{"name":"srcOffset","nativeSrc":"3434:9:25","nodeType":"YulIdentifier","src":"3434:9:25"}],"functionName":{"name":"add","nativeSrc":"3425:3:25","nodeType":"YulIdentifier","src":"3425:3:25"},"nativeSrc":"3425:19:25","nodeType":"YulFunctionCall","src":"3425:19:25"}],"functionName":{"name":"mload","nativeSrc":"3419:5:25","nodeType":"YulIdentifier","src":"3419:5:25"},"nativeSrc":"3419:26:25","nodeType":"YulFunctionCall","src":"3419:26:25"},"variables":[{"name":"lastValue","nativeSrc":"3406:9:25","nodeType":"YulTypedName","src":"3406:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3469:6:25","nodeType":"YulIdentifier","src":"3469:6:25"},{"arguments":[{"name":"lastValue","nativeSrc":"3481:9:25","nodeType":"YulIdentifier","src":"3481:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3508:1:25","nodeType":"YulLiteral","src":"3508:1:25","type":"","value":"3"},{"name":"newLen","nativeSrc":"3511:6:25","nodeType":"YulIdentifier","src":"3511:6:25"}],"functionName":{"name":"shl","nativeSrc":"3504:3:25","nodeType":"YulIdentifier","src":"3504:3:25"},"nativeSrc":"3504:14:25","nodeType":"YulFunctionCall","src":"3504:14:25"},{"kind":"number","nativeSrc":"3520:3:25","nodeType":"YulLiteral","src":"3520:3:25","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"3500:3:25","nodeType":"YulIdentifier","src":"3500:3:25"},"nativeSrc":"3500:24:25","nodeType":"YulFunctionCall","src":"3500:24:25"},{"arguments":[{"kind":"number","nativeSrc":"3530:1:25","nodeType":"YulLiteral","src":"3530:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3526:3:25","nodeType":"YulIdentifier","src":"3526:3:25"},"nativeSrc":"3526:6:25","nodeType":"YulFunctionCall","src":"3526:6:25"}],"functionName":{"name":"shr","nativeSrc":"3496:3:25","nodeType":"YulIdentifier","src":"3496:3:25"},"nativeSrc":"3496:37:25","nodeType":"YulFunctionCall","src":"3496:37:25"}],"functionName":{"name":"not","nativeSrc":"3492:3:25","nodeType":"YulIdentifier","src":"3492:3:25"},"nativeSrc":"3492:42:25","nodeType":"YulFunctionCall","src":"3492:42:25"}],"functionName":{"name":"and","nativeSrc":"3477:3:25","nodeType":"YulIdentifier","src":"3477:3:25"},"nativeSrc":"3477:58:25","nodeType":"YulFunctionCall","src":"3477:58:25"}],"functionName":{"name":"sstore","nativeSrc":"3462:6:25","nodeType":"YulIdentifier","src":"3462:6:25"},"nativeSrc":"3462:74:25","nodeType":"YulFunctionCall","src":"3462:74:25"},"nativeSrc":"3462:74:25","nodeType":"YulExpressionStatement","src":"3462:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"3355:7:25","nodeType":"YulIdentifier","src":"3355:7:25"},{"name":"newLen","nativeSrc":"3364:6:25","nodeType":"YulIdentifier","src":"3364:6:25"}],"functionName":{"name":"lt","nativeSrc":"3352:2:25","nodeType":"YulIdentifier","src":"3352:2:25"},"nativeSrc":"3352:19:25","nodeType":"YulFunctionCall","src":"3352:19:25"},"nativeSrc":"3349:201:25","nodeType":"YulIf","src":"3349:201:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3570:4:25","nodeType":"YulIdentifier","src":"3570:4:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3584:1:25","nodeType":"YulLiteral","src":"3584:1:25","type":"","value":"1"},{"name":"newLen","nativeSrc":"3587:6:25","nodeType":"YulIdentifier","src":"3587:6:25"}],"functionName":{"name":"shl","nativeSrc":"3580:3:25","nodeType":"YulIdentifier","src":"3580:3:25"},"nativeSrc":"3580:14:25","nodeType":"YulFunctionCall","src":"3580:14:25"},{"kind":"number","nativeSrc":"3596:1:25","nodeType":"YulLiteral","src":"3596:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3576:3:25","nodeType":"YulIdentifier","src":"3576:3:25"},"nativeSrc":"3576:22:25","nodeType":"YulFunctionCall","src":"3576:22:25"}],"functionName":{"name":"sstore","nativeSrc":"3563:6:25","nodeType":"YulIdentifier","src":"3563:6:25"},"nativeSrc":"3563:36:25","nodeType":"YulFunctionCall","src":"3563:36:25"},"nativeSrc":"3563:36:25","nodeType":"YulExpressionStatement","src":"3563:36:25"}]},"nativeSrc":"2960:649:25","nodeType":"YulCase","src":"2960:649:25","value":{"kind":"number","nativeSrc":"2965:1:25","nodeType":"YulLiteral","src":"2965:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"3626:234:25","nodeType":"YulBlock","src":"3626:234:25","statements":[{"nativeSrc":"3640:14:25","nodeType":"YulVariableDeclaration","src":"3640:14:25","value":{"kind":"number","nativeSrc":"3653:1:25","nodeType":"YulLiteral","src":"3653:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3644:5:25","nodeType":"YulTypedName","src":"3644:5:25","type":""}]},{"body":{"nativeSrc":"3689:67:25","nodeType":"YulBlock","src":"3689:67:25","statements":[{"nativeSrc":"3707:35:25","nodeType":"YulAssignment","src":"3707:35:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3726:3:25","nodeType":"YulIdentifier","src":"3726:3:25"},{"name":"srcOffset","nativeSrc":"3731:9:25","nodeType":"YulIdentifier","src":"3731:9:25"}],"functionName":{"name":"add","nativeSrc":"3722:3:25","nodeType":"YulIdentifier","src":"3722:3:25"},"nativeSrc":"3722:19:25","nodeType":"YulFunctionCall","src":"3722:19:25"}],"functionName":{"name":"mload","nativeSrc":"3716:5:25","nodeType":"YulIdentifier","src":"3716:5:25"},"nativeSrc":"3716:26:25","nodeType":"YulFunctionCall","src":"3716:26:25"},"variableNames":[{"name":"value","nativeSrc":"3707:5:25","nodeType":"YulIdentifier","src":"3707:5:25"}]}]},"condition":{"name":"newLen","nativeSrc":"3670:6:25","nodeType":"YulIdentifier","src":"3670:6:25"},"nativeSrc":"3667:89:25","nodeType":"YulIf","src":"3667:89:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3776:4:25","nodeType":"YulIdentifier","src":"3776:4:25"},{"arguments":[{"name":"value","nativeSrc":"3835:5:25","nodeType":"YulIdentifier","src":"3835:5:25"},{"name":"newLen","nativeSrc":"3842:6:25","nodeType":"YulIdentifier","src":"3842:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3782:52:25","nodeType":"YulIdentifier","src":"3782:52:25"},"nativeSrc":"3782:67:25","nodeType":"YulFunctionCall","src":"3782:67:25"}],"functionName":{"name":"sstore","nativeSrc":"3769:6:25","nodeType":"YulIdentifier","src":"3769:6:25"},"nativeSrc":"3769:81:25","nodeType":"YulFunctionCall","src":"3769:81:25"},"nativeSrc":"3769:81:25","nodeType":"YulExpressionStatement","src":"3769:81:25"}]},"nativeSrc":"3618:242:25","nodeType":"YulCase","src":"3618:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"2940:6:25","nodeType":"YulIdentifier","src":"2940:6:25"},{"kind":"number","nativeSrc":"2948:2:25","nodeType":"YulLiteral","src":"2948:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2937:2:25","nodeType":"YulIdentifier","src":"2937:2:25"},"nativeSrc":"2937:14:25","nodeType":"YulFunctionCall","src":"2937:14:25"},"nativeSrc":"2930:930:25","nodeType":"YulSwitch","src":"2930:930:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"2567:1299:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2648:4:25","nodeType":"YulTypedName","src":"2648:4:25","type":""},{"name":"src","nativeSrc":"2654:3:25","nodeType":"YulTypedName","src":"2654:3:25","type":""}],"src":"2567:1299:25"},{"body":{"nativeSrc":"3972:102:25","nodeType":"YulBlock","src":"3972:102:25","statements":[{"nativeSrc":"3982:26:25","nodeType":"YulAssignment","src":"3982:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3994:9:25","nodeType":"YulIdentifier","src":"3994:9:25"},{"kind":"number","nativeSrc":"4005:2:25","nodeType":"YulLiteral","src":"4005:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3990:3:25","nodeType":"YulIdentifier","src":"3990:3:25"},"nativeSrc":"3990:18:25","nodeType":"YulFunctionCall","src":"3990:18:25"},"variableNames":[{"name":"tail","nativeSrc":"3982:4:25","nodeType":"YulIdentifier","src":"3982:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4024:9:25","nodeType":"YulIdentifier","src":"4024:9:25"},{"arguments":[{"name":"value0","nativeSrc":"4039:6:25","nodeType":"YulIdentifier","src":"4039:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4055:3:25","nodeType":"YulLiteral","src":"4055:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"4060:1:25","nodeType":"YulLiteral","src":"4060:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4051:3:25","nodeType":"YulIdentifier","src":"4051:3:25"},"nativeSrc":"4051:11:25","nodeType":"YulFunctionCall","src":"4051:11:25"},{"kind":"number","nativeSrc":"4064:1:25","nodeType":"YulLiteral","src":"4064:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4047:3:25","nodeType":"YulIdentifier","src":"4047:3:25"},"nativeSrc":"4047:19:25","nodeType":"YulFunctionCall","src":"4047:19:25"}],"functionName":{"name":"and","nativeSrc":"4035:3:25","nodeType":"YulIdentifier","src":"4035:3:25"},"nativeSrc":"4035:32:25","nodeType":"YulFunctionCall","src":"4035:32:25"}],"functionName":{"name":"mstore","nativeSrc":"4017:6:25","nodeType":"YulIdentifier","src":"4017:6:25"},"nativeSrc":"4017:51:25","nodeType":"YulFunctionCall","src":"4017:51:25"},"nativeSrc":"4017:51:25","nodeType":"YulExpressionStatement","src":"4017:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3871:203:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3941:9:25","nodeType":"YulTypedName","src":"3941:9:25","type":""},{"name":"value0","nativeSrc":"3952:6:25","nodeType":"YulTypedName","src":"3952:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3963:4:25","nodeType":"YulTypedName","src":"3963:4:25","type":""}],"src":"3871:203:25"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(memPtr, i), 32), mload(add(add(_1, i), 32)))\n        }\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051611da4380380611da483398101604081905261002f91610155565b816040518060400160405280601281526020017129b2b49027232a1021b7b63632b1ba34b7b760711b8152506040518060400160405280600681526020016514d15253919560d21b815250816000908161008991906102ca565b50600161009682826102ca565b5050506001600160a01b0381166100c757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100d0816100e5565b50600d6100dd82826102ca565b505050610388565b600b80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561016857600080fd5b82516001600160a01b038116811461017f57600080fd5b60208401519092506001600160401b0381111561019b57600080fd5b8301601f810185136101ac57600080fd5b80516001600160401b038111156101c5576101c561013f565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101f3576101f361013f565b60405281815282820160200187101561020b57600080fd5b60005b8281101561022a5760208185018101518383018201520161020e565b506000602083830101528093505050509250929050565b600181811c9082168061025557607f821691505b60208210810361027557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102c557806000526020600020601f840160051c810160208510156102a25750805b601f840160051c820191505b818110156102c257600081556001016102ae565b50505b505050565b81516001600160401b038111156102e3576102e361013f565b6102f7816102f18454610241565b8461027b565b6020601f82116001811461032b57600083156103135750848201515b600019600385901b1c1916600184901b1784556102c2565b600084815260208120601f198516915b8281101561035b578785015182556020948501946001909201910161033b565b50848210156103795786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b611a0d806103976000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80635c975abb116100de57806395d89b4111610097578063c87b56dd11610071578063c87b56dd14610306578063d204c45e14610319578063e985e9c51461032c578063f2fde38b1461033f57600080fd5b806395d89b41146102d8578063a22cb465146102e0578063b88d4fde146102f357600080fd5b80635c975abb146102815780636352211e1461028c57806370a082311461029f578063715018a6146102b25780638456cb59146102ba5780638da5cb5b146102c257600080fd5b80632f745c59116101305780632f745c591461021a5780633f4ba83a1461022d57806342842e0e1461023557806342966c68146102485780634f6ccce71461025b57806355f804b31461026e57600080fd5b806301ffc9a71461017857806306fdde03146101a0578063081812fc146101b5578063095ea7b3146101e057806318160ddd146101f557806323b872dd14610207575b600080fd5b61018b61018636600461144b565b610352565b60405190151581526020015b60405180910390f35b6101a8610363565b60405161019791906114b8565b6101c86101c33660046114cb565b6103f5565b6040516001600160a01b039091168152602001610197565b6101f36101ee366004611500565b61041e565b005b6008545b604051908152602001610197565b6101f361021536600461152a565b61042d565b6101f9610228366004611500565b6104bd565b6101f3610522565b6101f361024336600461152a565b610534565b6101f36102563660046114cb565b610554565b6101f96102693660046114cb565b610560565b6101f361027c366004611617565b6105b9565b600b5460ff1661018b565b6101c861029a3660046114cb565b6105cd565b6101f96102ad36600461164c565b6105d8565b6101f3610620565b6101f3610632565b600b5461010090046001600160a01b03166101c8565b6101a8610642565b6101f36102ee366004611667565b610651565b6101f36103013660046116a3565b61065c565b6101a86103143660046114cb565b610674565b6101f961032736600461171f565b61067f565b61018b61033a36600461176d565b6106bb565b6101f361034d36600461164c565b6106e9565b600061035d82610727565b92915050565b606060008054610372906117a0565b80601f016020809104026020016040519081016040528092919081815260200182805461039e906117a0565b80156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b5050505050905090565b60006104008261074c565b506000828152600460205260409020546001600160a01b031661035d565b610429828233610785565b5050565b6001600160a01b03821661045c57604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610469838333610792565b9050836001600160a01b0316816001600160a01b0316146104b7576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610453565b50505050565b60006104c8836105d8565b82106104f95760405163295f44f760e21b81526001600160a01b038416600482015260248101839052604401610453565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61052a6107a7565b6105326107da565b565b61054f8383836040518060200160405280600081525061065c565b505050565b61042960008233610792565b600061056b60085490565b82106105945760405163295f44f760e21b81526000600482015260248101839052604401610453565b600882815481106105a7576105a76117da565b90600052602060002001549050919050565b6105c16107a7565b600d6104298282611837565b600061035d8261074c565b60006001600160a01b038216610604576040516322718ad960e21b815260006004820152602401610453565b506001600160a01b031660009081526003602052604090205490565b6106286107a7565b610532600061082c565b61063a6107a7565b610532610886565b606060018054610372906117a0565b6104293383836108c3565b61066784848461042d565b6104b73385858585610962565b606061035d82610a8d565b60006106896107a7565b600c80546000918261069a8361190c565b9190505590506106aa8482610b89565b6106b48184610ba3565b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6106f16107a7565b6001600160a01b03811661071b57604051631e4fbdf760e01b815260006004820152602401610453565b6107248161082c565b50565b60006001600160e01b03198216632483248360e11b148061035d575061035d82610bf3565b6000818152600260205260408120546001600160a01b03168061035d57604051637e27328960e01b815260048101849052602401610453565b61054f8383836001610c18565b600061079f848484610d1e565b949350505050565b600b546001600160a01b036101009091041633146105325760405163118cdaa760e01b8152336004820152602401610453565b6107e2610d33565b600b805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600b80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61088e610d56565b600b805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861080f3390565b6001600160a01b0382166108f557604051630b61174360e31b81526001600160a01b0383166004820152602401610453565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610a8657604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906109a4908890889087908790600401611925565b6020604051808303816000875af19250505080156109df575060408051601f3d908101601f191682019092526109dc91810190611962565b60015b610a48573d808015610a0d576040519150601f19603f3d011682016040523d82523d6000602084013e610a12565b606091505b508051600003610a4057604051633250574960e11b81526001600160a01b0385166004820152602401610453565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610a8457604051633250574960e11b81526001600160a01b0385166004820152602401610453565b505b5050505050565b6060610a988261074c565b506000828152600a602052604081208054610ab2906117a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ade906117a0565b8015610b2b5780601f10610b0057610100808354040283529160200191610b2b565b820191906000526020600020905b815481529060010190602001808311610b0e57829003601f168201915b505050505090506000610b3c610d7a565b90508051600003610b4e575092915050565b815115610b80578082604051602001610b6892919061197f565b60405160208183030381529060405292505050919050565b61079f84610d89565b610429828260405180602001604052806000815250610df0565b6000828152600a60205260409020610bbb8282611837565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b0319821663780e9d6360e01b148061035d575061035d82610e08565b8080610c2c57506001600160a01b03821615155b15610cee576000610c3c8461074c565b90506001600160a01b03831615801590610c685750826001600160a01b0316816001600160a01b031614155b8015610c7b5750610c7981846106bb565b155b15610ca45760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610453565b8115610cec5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610d28610d56565b61079f848484610e58565b600b5460ff1661053257604051638dfc202b60e01b815260040160405180910390fd5b600b5460ff16156105325760405163d93c066560e01b815260040160405180910390fd5b6060600d8054610372906117a0565b6060610d948261074c565b506000610d9f610d7a565b90506000815111610dbf57604051806020016040528060008152506106b4565b80610dc984610f25565b604051602001610dda92919061197f565b6040516020818303038152906040529392505050565b610dfa8383610fb8565b61054f336000858585610962565b60006001600160e01b031982166380ac58cd60e01b1480610e3957506001600160e01b03198216635b5e139f60e01b145b8061035d57506301ffc9a760e01b6001600160e01b031983161461035d565b600080610e6685858561101d565b90506001600160a01b038116610ec357610ebe84600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610ee6565b846001600160a01b0316816001600160a01b031614610ee657610ee68185611116565b6001600160a01b038516610f0257610efd84611197565b61079f565b846001600160a01b0316816001600160a01b03161461079f5761079f8585611246565b60606000610f3283611296565b600101905060008167ffffffffffffffff811115610f5257610f52611567565b6040519080825280601f01601f191660200182016040528015610f7c576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610f8657509392505050565b6001600160a01b038216610fe257604051633250574960e11b815260006004820152602401610453565b6000610ff083836000610792565b90506001600160a01b0381161561054f576040516339e3563760e11b815260006004820152602401610453565b6000828152600260205260408120546001600160a01b039081169083161561104a5761104a81848661136e565b6001600160a01b0381161561108857611067600085600080610c18565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156110b7576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000611121836105d8565b6000838152600760209081526040808320546001600160a01b038816845260069092529091209192509081831461117857600083815260208281526040808320548584528184208190558352600790915290208290555b6000938452600760209081526040808620869055938552525081205550565b6008546000906111a9906001906119ae565b600083815260096020526040812054600880549394509092849081106111d1576111d16117da565b9060005260206000200154905080600883815481106111f2576111f26117da565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061122a5761122a6119c1565b6001900381819060005260206000200160009055905550505050565b60006001611253846105d8565b61125d91906119ae565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112d55772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611301576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061131f57662386f26fc10000830492506010015b6305f5e1008310611337576305f5e100830492506008015b612710831061134b57612710830492506004015b6064831061135d576064830492506002015b600a831061035d5760010192915050565b6113798383836113d2565b61054f576001600160a01b0383166113a757604051637e27328960e01b815260048101829052602401610453565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610453565b60006001600160a01b0383161580159061079f5750826001600160a01b0316846001600160a01b0316148061140c575061140c84846106bb565b8061079f5750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b03198116811461072457600080fd5b60006020828403121561145d57600080fd5b81356106b481611435565b60005b8381101561148357818101518382015260200161146b565b50506000910152565b600081518084526114a4816020860160208601611468565b601f01601f19169290920160200192915050565b6020815260006106b4602083018461148c565b6000602082840312156114dd57600080fd5b5035919050565b80356001600160a01b03811681146114fb57600080fd5b919050565b6000806040838503121561151357600080fd5b61151c836114e4565b946020939093013593505050565b60008060006060848603121561153f57600080fd5b611548846114e4565b9250611556602085016114e4565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561159857611598611567565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff821117156115c7576115c7611567565b6040528381529050808284018510156115df57600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261160857600080fd5b6106b48383356020850161157d565b60006020828403121561162957600080fd5b813567ffffffffffffffff81111561164057600080fd5b61079f848285016115f7565b60006020828403121561165e57600080fd5b6106b4826114e4565b6000806040838503121561167a57600080fd5b611683836114e4565b91506020830135801515811461169857600080fd5b809150509250929050565b600080600080608085870312156116b957600080fd5b6116c2856114e4565b93506116d0602086016114e4565b925060408501359150606085013567ffffffffffffffff8111156116f357600080fd5b8501601f8101871361170457600080fd5b6117138782356020840161157d565b91505092959194509250565b6000806040838503121561173257600080fd5b61173b836114e4565b9150602083013567ffffffffffffffff81111561175757600080fd5b611763858286016115f7565b9150509250929050565b6000806040838503121561178057600080fd5b611789836114e4565b9150611797602084016114e4565b90509250929050565b600181811c908216806117b457607f821691505b6020821081036117d457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b601f82111561054f57806000526020600020601f840160051c810160208510156118175750805b601f840160051c820191505b81811015610a865760008155600101611823565b815167ffffffffffffffff81111561185157611851611567565b6118658161185f84546117a0565b846117f0565b6020601f82116001811461189957600083156118815750848201515b600019600385901b1c1916600184901b178455610a86565b600084815260208120601f198516915b828110156118c957878501518255602094850194600190920191016118a9565b50848210156118e75786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60006001820161191e5761191e6118f6565b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119589083018461148c565b9695505050505050565b60006020828403121561197457600080fd5b81516106b481611435565b60008351611991818460208801611468565b8351908301906119a5818360208801611468565b01949350505050565b8181038181111561035d5761035d6118f6565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220389d4afe2ba2d1d90ee40801f9a675d8b9f2ba1ca4f0c8f006ac7e6ed9d2110364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1DA4 CODESIZE SUB DUP1 PUSH2 0x1DA4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x155 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x29B2B49027232A1021B7B63632B1BA34B7B7 PUSH1 0x71 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x14D152539195 PUSH1 0xD2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x2CA JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x96 DUP3 DUP3 PUSH2 0x2CA JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD0 DUP2 PUSH2 0xE5 JUMP JUMPDEST POP PUSH1 0xD PUSH2 0xDD DUP3 DUP3 PUSH2 0x2CA JUMP JUMPDEST POP POP POP PUSH2 0x388 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C5 JUMPI PUSH2 0x1C5 PUSH2 0x13F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F3 JUMPI PUSH2 0x1F3 PUSH2 0x13F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x20E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x255 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x275 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2C5 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2A2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2AE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E3 JUMPI PUSH2 0x2E3 PUSH2 0x13F JUMP JUMPDEST PUSH2 0x2F7 DUP2 PUSH2 0x2F1 DUP5 SLOAD PUSH2 0x241 JUMP JUMPDEST DUP5 PUSH2 0x27B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x32B JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x313 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35B JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x33B JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x379 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1A0D DUP1 PUSH2 0x397 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F745C59 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x207 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x144B JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x152A JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x152A JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x18B JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x632 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x642 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x301 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x171F JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH2 0x18B PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x176D JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP3 PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x17A0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP3 PUSH2 0x74C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35D JUMP JUMPDEST PUSH2 0x429 DUP3 DUP3 CALLER PUSH2 0x785 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x469 DUP4 DUP4 CALLER PUSH2 0x792 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C8 DUP4 PUSH2 0x5D8 JUMP JUMPDEST DUP3 LT PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x453 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52A PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x7DA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x54F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x65C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x429 PUSH1 0x0 DUP3 CALLER PUSH2 0x792 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56B PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5A7 JUMPI PUSH2 0x5A7 PUSH2 0x17DA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0xD PUSH2 0x429 DUP3 DUP3 PUSH2 0x1837 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP3 PUSH2 0x74C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x628 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x532 PUSH1 0x0 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x63A PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x429 CALLER DUP4 DUP4 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x667 DUP5 DUP5 DUP5 PUSH2 0x42D JUMP JUMPDEST PUSH2 0x4B7 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35D DUP3 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x689 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x69A DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x6AA DUP5 DUP3 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x6B4 DUP2 DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x724 DUP2 PUSH2 0x82C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x54F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79F DUP5 DUP5 DUP5 PUSH2 0xD1E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x88E PUSH2 0xD56 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x80F CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x9A4 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9DF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9DC SWAP2 DUP2 ADD SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA48 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xA40 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA98 DUP3 PUSH2 0x74C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xAB2 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADE SWAP1 PUSH2 0x17A0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB2B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB00 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB2B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xB3C PUSH2 0xD7A JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB4E JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xB80 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB68 SWAP3 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79F DUP5 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x429 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBBB DUP3 DUP3 PUSH2 0x1837 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xE08 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xC2C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xCEE JUMPI PUSH1 0x0 PUSH2 0xC3C DUP5 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC68 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC7B JUMPI POP PUSH2 0xC79 DUP2 DUP5 PUSH2 0x6BB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xCA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xCEC JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD28 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x79F DUP5 DUP5 DUP5 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD94 DUP3 PUSH2 0x74C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xD9F PUSH2 0xD7A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xDBF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6B4 JUMP JUMPDEST DUP1 PUSH2 0xDC9 DUP5 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDDA SWAP3 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDFA DUP4 DUP4 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x54F CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xE39 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x35D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x35D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE66 DUP6 DUP6 DUP6 PUSH2 0x101D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEC3 JUMPI PUSH2 0xEBE DUP5 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0xEE6 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEE6 JUMPI PUSH2 0xEE6 DUP2 DUP6 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xF02 JUMPI PUSH2 0xEFD DUP5 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x79F JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x79F JUMPI PUSH2 0x79F DUP6 DUP6 PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF32 DUP4 PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF52 JUMPI PUSH2 0xF52 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF7C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xF86 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF0 DUP4 DUP4 PUSH1 0x0 PUSH2 0x792 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x104A JUMPI PUSH2 0x104A DUP2 DUP5 DUP7 PUSH2 0x136E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1088 JUMPI PUSH2 0x1067 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1121 DUP4 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 DUP2 DUP4 EQ PUSH2 0x1178 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP6 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP7 SWAP1 SSTORE SWAP4 DUP6 MSTORE MSTORE POP DUP2 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x11A9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x11D1 JUMPI PUSH2 0x11D1 PUSH2 0x17DA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x11F2 JUMPI PUSH2 0x11F2 PUSH2 0x17DA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x122A JUMPI PUSH2 0x122A PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1253 DUP5 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x125D SWAP2 SWAP1 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x12D5 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1301 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x131F JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1337 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x134B JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x135D JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x35D JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1379 DUP4 DUP4 DUP4 PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x54F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x79F JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x140C JUMPI POP PUSH2 0x140C DUP5 DUP5 PUSH2 0x6BB JUMP JUMPDEST DUP1 PUSH2 0x79F JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6B4 DUP2 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1483 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x146B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x14A4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x151C DUP4 PUSH2 0x14E4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x153F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1548 DUP5 PUSH2 0x14E4 JUMP JUMPDEST SWAP3 POP PUSH2 0x1556 PUSH1 0x20 DUP6 ADD PUSH2 0x14E4 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x1598 JUMPI PUSH2 0x1598 PUSH2 0x1567 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15C7 JUMPI PUSH2 0x15C7 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x15DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B4 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x157D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79F DUP5 DUP3 DUP6 ADD PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x165E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B4 DUP3 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1683 DUP4 PUSH2 0x14E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C2 DUP6 PUSH2 0x14E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x16D0 PUSH1 0x20 DUP7 ADD PUSH2 0x14E4 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1713 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x157D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173B DUP4 PUSH2 0x14E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1763 DUP6 DUP3 DUP7 ADD PUSH2 0x15F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1789 DUP4 PUSH2 0x14E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1797 PUSH1 0x20 DUP5 ADD PUSH2 0x14E4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x54F JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1817 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA86 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1823 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1851 JUMPI PUSH2 0x1851 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x1865 DUP2 PUSH2 0x185F DUP5 SLOAD PUSH2 0x17A0 JUMP JUMPDEST DUP5 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1899 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1881 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x18C9 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x18A9 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x18E7 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x191E JUMPI PUSH2 0x191E PUSH2 0x18F6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1958 SWAP1 DUP4 ADD DUP5 PUSH2 0x148C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6B4 DUP2 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1991 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1468 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x19A5 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1468 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x35D JUMPI PUSH2 0x35D PUSH2 0x18F6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SWAP14 BLOBBASEFEE INVALID 0x2B LOG2 0xD1 0xD9 0xE 0xE4 ADDMOD ADD 0xF9 0xA6 PUSH22 0xD8B9F2BA1CA4F0C8F006AC7E6ED9D2110364736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"605:2022:24:-:0;;;816:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;941:12;1380:113:5;;;;;;;;;;;;;-1:-1:-1;;;1380:113:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1380:113:5;;;1454:5;1446;:13;;;;;;:::i;:::-;-1:-1:-1;1469:7:5;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4017:51:25;3990:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;969:13:24::2;:28;985:12:::0;969:13;:28:::2;:::i;:::-;;816:188:::0;;605:2022;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:25:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1211;235:6;243;296:2;284:9;275:7;271:23;267:32;264:52;;;312:1;309;302:12;264:52;338:16;;-1:-1:-1;;;;;383:31:25;;373:42;;363:70;;429:1;426;419:12;363:70;501:2;486:18;;480:25;452:5;;-1:-1:-1;;;;;;517:30:25;;514:50;;;560:1;557;550:12;514:50;583:22;;636:4;628:13;;624:27;-1:-1:-1;614:55:25;;665:1;662;655:12;614:55;692:9;;-1:-1:-1;;;;;713:30:25;;710:56;;;746:18;;:::i;:::-;795:2;789:9;887:2;849:17;;-1:-1:-1;;845:31:25;;;878:2;841:40;837:54;825:67;;-1:-1:-1;;;;;907:34:25;;943:22;;;904:62;901:88;;;969:18;;:::i;:::-;1005:2;998:22;1029;;;1070:15;;;1087:2;1066:24;1063:37;-1:-1:-1;1060:57:25;;;1113:1;1110;1103:12;1060:57;1135:1;1145:133;1159:6;1156:1;1153:13;1145:133;;;1263:2;1251:10;;;1247:19;;1241:26;1220:14;;;1216:23;;1209:59;1174:10;1145:133;;;1149:3;1324:1;1319:2;1310:6;1302;1298:19;1294:28;1287:39;1345:6;1335:16;;;;;146:1211;;;;;:::o;1362:380::-;1441:1;1437:12;;;;1484;;;1505:61;;1559:4;1551:6;1547:17;1537:27;;1505:61;1612:2;1604:6;1601:14;1581:18;1578:38;1575:161;;1658:10;1653:3;1649:20;1646:1;1639:31;1693:4;1690:1;1683:15;1721:4;1718:1;1711:15;1575:161;;1362:380;;;:::o;1873:518::-;1975:2;1970:3;1967:11;1964:421;;;2011:5;2008:1;2001:16;2055:4;2052:1;2042:18;2125:2;2113:10;2109:19;2106:1;2102:27;2096:4;2092:38;2161:4;2149:10;2146:20;2143:47;;;-1:-1:-1;2184:4:25;2143:47;2239:2;2234:3;2230:12;2227:1;2223:20;2217:4;2213:31;2203:41;;2294:81;2312:2;2305:5;2302:13;2294:81;;;2371:1;2357:16;;2338:1;2327:13;2294:81;;;2298:3;;1964:421;1873:518;;;:::o;2567:1299::-;2687:10;;-1:-1:-1;;;;;2709:30:25;;2706:56;;;2742:18;;:::i;:::-;2771:97;2861:6;2821:38;2853:4;2847:11;2821:38;:::i;:::-;2815:4;2771:97;:::i;:::-;2917:4;2948:2;2937:14;;2965:1;2960:649;;;;3653:1;3670:6;3667:89;;;-1:-1:-1;3722:19:25;;;3716:26;3667:89;-1:-1:-1;;2524:1:25;2520:11;;;2516:24;2512:29;2502:40;2548:1;2544:11;;;2499:57;3769:81;;2930:930;;2960:649;1820:1;1813:14;;;1857:4;1844:18;;-1:-1:-1;;2996:20:25;;;3114:222;3128:7;3125:1;3122:14;3114:222;;;3210:19;;;3204:26;3189:42;;3317:4;3302:20;;;;3270:1;3258:14;;;;3144:12;3114:222;;;3118:3;3364:6;3355:7;3352:19;3349:201;;;3425:19;;;3419:26;-1:-1:-1;;3508:1:25;3504:14;;;3520:3;3500:24;3496:37;3492:42;3477:58;3462:74;;3349:201;-1:-1:-1;;;;3596:1:25;3580:14;;;3576:22;3563:36;;-1:-1:-1;2567:1299:25:o;3871:203::-;605:2022:24;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_addTokenToAllTokensEnumeration_1687":{"entryPoint":null,"id":1687,"parameterSlots":1,"returnSlots":0},"@_addTokenToOwnerEnumeration_1667":{"entryPoint":4678,"id":1667,"parameterSlots":2,"returnSlots":0},"@_approve_1140":{"entryPoint":1925,"id":1140,"parameterSlots":3,"returnSlots":0},"@_approve_1206":{"entryPoint":3096,"id":1206,"parameterSlots":4,"returnSlots":0},"@_baseURI_7351":{"entryPoint":3450,"id":7351,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_780":{"entryPoint":4974,"id":780,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":1959,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_707":{"entryPoint":null,"id":707,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_743":{"entryPoint":5074,"id":743,"parameterSlots":3,"returnSlots":1},"@_mint_936":{"entryPoint":4024,"id":936,"parameterSlots":2,"returnSlots":0},"@_msgSender_2135":{"entryPoint":null,"id":2135,"parameterSlots":0,"returnSlots":1},"@_ownerOf_694":{"entryPoint":null,"id":694,"parameterSlots":1,"returnSlots":1},"@_pause_2296":{"entryPoint":2182,"id":2296,"parameterSlots":0,"returnSlots":0},"@_removeTokenFromAllTokensEnumeration_1797":{"entryPoint":4503,"id":1797,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromOwnerEnumeration_1749":{"entryPoint":4374,"id":1749,"parameterSlots":2,"returnSlots":0},"@_requireNotPaused_2267":{"entryPoint":3414,"id":2267,"parameterSlots":0,"returnSlots":0},"@_requireOwned_1272":{"entryPoint":1868,"id":1272,"parameterSlots":1,"returnSlots":1},"@_requirePaused_2280":{"entryPoint":3379,"id":2280,"parameterSlots":0,"returnSlots":0},"@_safeMint_951":{"entryPoint":2953,"id":951,"parameterSlots":2,"returnSlots":0},"@_safeMint_981":{"entryPoint":3568,"id":981,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1243":{"entryPoint":2243,"id":1243,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1985":{"entryPoint":2979,"id":1985,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2092,"id":146,"parameterSlots":1,"returnSlots":0},"@_unpause_2312":{"entryPoint":2010,"id":2312,"parameterSlots":0,"returnSlots":0},"@_update_1636":{"entryPoint":3672,"id":1636,"parameterSlots":3,"returnSlots":1},"@_update_1857":{"entryPoint":3358,"id":1857,"parameterSlots":3,"returnSlots":1},"@_update_7421":{"entryPoint":1938,"id":7421,"parameterSlots":3,"returnSlots":1},"@_update_886":{"entryPoint":4125,"id":886,"parameterSlots":3,"returnSlots":1},"@approve_537":{"entryPoint":1054,"id":537,"parameterSlots":2,"returnSlots":0},"@balanceOf_445":{"entryPoint":1496,"id":445,"parameterSlots":1,"returnSlots":1},"@burn_1436":{"entryPoint":1364,"id":1436,"parameterSlots":1,"returnSlots":0},"@checkOnERC721Received_2122":{"entryPoint":2402,"id":2122,"parameterSlots":5,"returnSlots":0},"@getApproved_554":{"entryPoint":1013,"id":554,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_587":{"entryPoint":1723,"id":587,"parameterSlots":2,"returnSlots":1},"@log10_5204":{"entryPoint":4758,"id":5204,"parameterSlots":1,"returnSlots":1},"@name_467":{"entryPoint":867,"id":467,"parameterSlots":0,"returnSlots":1},"@ownerOf_458":{"entryPoint":1485,"id":458,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@pause_7360":{"entryPoint":1586,"id":7360,"parameterSlots":0,"returnSlots":0},"@paused_2255":{"entryPoint":null,"id":2255,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1568,"id":98,"parameterSlots":0,"returnSlots":0},"@safeMint_7398":{"entryPoint":1663,"id":7398,"parameterSlots":2,"returnSlots":1},"@safeTransferFrom_651":{"entryPoint":1332,"id":651,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_681":{"entryPoint":1628,"id":681,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_570":{"entryPoint":1617,"id":570,"parameterSlots":2,"returnSlots":0},"@setBaseURI_7342":{"entryPoint":1465,"id":7342,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1501":{"entryPoint":3059,"id":1501,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1909":{"entryPoint":1831,"id":1909,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3738":{"entryPoint":null,"id":3738,"parameterSlots":1,"returnSlots":1},"@supportsInterface_417":{"entryPoint":3592,"id":417,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7472":{"entryPoint":850,"id":7472,"parameterSlots":1,"returnSlots":1},"@symbol_476":{"entryPoint":1602,"id":476,"parameterSlots":0,"returnSlots":1},"@toString_2427":{"entryPoint":3877,"id":2427,"parameterSlots":1,"returnSlots":1},"@tokenByIndex_1567":{"entryPoint":1376,"id":1567,"parameterSlots":1,"returnSlots":1},"@tokenOfOwnerByIndex_1530":{"entryPoint":1213,"id":1530,"parameterSlots":2,"returnSlots":1},"@tokenURI_1966":{"entryPoint":2701,"id":1966,"parameterSlots":1,"returnSlots":1},"@tokenURI_512":{"entryPoint":3465,"id":512,"parameterSlots":1,"returnSlots":1},"@tokenURI_7455":{"entryPoint":1652,"id":7455,"parameterSlots":1,"returnSlots":1},"@totalSupply_1540":{"entryPoint":null,"id":1540,"parameterSlots":0,"returnSlots":1},"@transferFrom_633":{"entryPoint":1069,"id":633,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1769,"id":126,"parameterSlots":1,"returnSlots":0},"@unpause_7369":{"entryPoint":1314,"id":7369,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":5348,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":5501,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":5623,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5708,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5997,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5418,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5795,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5735,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":5919,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5376,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5195,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":5655,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6527,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6437,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6574,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6128,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":6199,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5224,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6048,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":6412,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6390,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":6593,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6106,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5479,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":5173,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:11372:25","nodeType":"YulBlock","src":"0:11372:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"58:87:25","nodeType":"YulBlock","src":"58:87:25","statements":[{"body":{"nativeSrc":"123:16:25","nodeType":"YulBlock","src":"123:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"132:1:25","nodeType":"YulLiteral","src":"132:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"135:1:25","nodeType":"YulLiteral","src":"135:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"125:6:25","nodeType":"YulIdentifier","src":"125:6:25"},"nativeSrc":"125:12:25","nodeType":"YulFunctionCall","src":"125:12:25"},"nativeSrc":"125:12:25","nodeType":"YulExpressionStatement","src":"125:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"81:5:25","nodeType":"YulIdentifier","src":"81:5:25"},{"arguments":[{"name":"value","nativeSrc":"92:5:25","nodeType":"YulIdentifier","src":"92:5:25"},{"arguments":[{"kind":"number","nativeSrc":"103:3:25","nodeType":"YulLiteral","src":"103:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"108:10:25","nodeType":"YulLiteral","src":"108:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"99:3:25","nodeType":"YulIdentifier","src":"99:3:25"},"nativeSrc":"99:20:25","nodeType":"YulFunctionCall","src":"99:20:25"}],"functionName":{"name":"and","nativeSrc":"88:3:25","nodeType":"YulIdentifier","src":"88:3:25"},"nativeSrc":"88:32:25","nodeType":"YulFunctionCall","src":"88:32:25"}],"functionName":{"name":"eq","nativeSrc":"78:2:25","nodeType":"YulIdentifier","src":"78:2:25"},"nativeSrc":"78:43:25","nodeType":"YulFunctionCall","src":"78:43:25"}],"functionName":{"name":"iszero","nativeSrc":"71:6:25","nodeType":"YulIdentifier","src":"71:6:25"},"nativeSrc":"71:51:25","nodeType":"YulFunctionCall","src":"71:51:25"},"nativeSrc":"68:71:25","nodeType":"YulIf","src":"68:71:25"}]},"name":"validator_revert_bytes4","nativeSrc":"14:131:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"47:5:25","nodeType":"YulTypedName","src":"47:5:25","type":""}],"src":"14:131:25"},{"body":{"nativeSrc":"219:176:25","nodeType":"YulBlock","src":"219:176:25","statements":[{"body":{"nativeSrc":"265:16:25","nodeType":"YulBlock","src":"265:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"274:1:25","nodeType":"YulLiteral","src":"274:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"277:1:25","nodeType":"YulLiteral","src":"277:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"267:6:25","nodeType":"YulIdentifier","src":"267:6:25"},"nativeSrc":"267:12:25","nodeType":"YulFunctionCall","src":"267:12:25"},"nativeSrc":"267:12:25","nodeType":"YulExpressionStatement","src":"267:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"240:7:25","nodeType":"YulIdentifier","src":"240:7:25"},{"name":"headStart","nativeSrc":"249:9:25","nodeType":"YulIdentifier","src":"249:9:25"}],"functionName":{"name":"sub","nativeSrc":"236:3:25","nodeType":"YulIdentifier","src":"236:3:25"},"nativeSrc":"236:23:25","nodeType":"YulFunctionCall","src":"236:23:25"},{"kind":"number","nativeSrc":"261:2:25","nodeType":"YulLiteral","src":"261:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"232:3:25","nodeType":"YulIdentifier","src":"232:3:25"},"nativeSrc":"232:32:25","nodeType":"YulFunctionCall","src":"232:32:25"},"nativeSrc":"229:52:25","nodeType":"YulIf","src":"229:52:25"},{"nativeSrc":"290:36:25","nodeType":"YulVariableDeclaration","src":"290:36:25","value":{"arguments":[{"name":"headStart","nativeSrc":"316:9:25","nodeType":"YulIdentifier","src":"316:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"303:12:25","nodeType":"YulIdentifier","src":"303:12:25"},"nativeSrc":"303:23:25","nodeType":"YulFunctionCall","src":"303:23:25"},"variables":[{"name":"value","nativeSrc":"294:5:25","nodeType":"YulTypedName","src":"294:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"359:5:25","nodeType":"YulIdentifier","src":"359:5:25"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"335:23:25","nodeType":"YulIdentifier","src":"335:23:25"},"nativeSrc":"335:30:25","nodeType":"YulFunctionCall","src":"335:30:25"},"nativeSrc":"335:30:25","nodeType":"YulExpressionStatement","src":"335:30:25"},{"nativeSrc":"374:15:25","nodeType":"YulAssignment","src":"374:15:25","value":{"name":"value","nativeSrc":"384:5:25","nodeType":"YulIdentifier","src":"384:5:25"},"variableNames":[{"name":"value0","nativeSrc":"374:6:25","nodeType":"YulIdentifier","src":"374:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"150:245:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"185:9:25","nodeType":"YulTypedName","src":"185:9:25","type":""},{"name":"dataEnd","nativeSrc":"196:7:25","nodeType":"YulTypedName","src":"196:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"208:6:25","nodeType":"YulTypedName","src":"208:6:25","type":""}],"src":"150:245:25"},{"body":{"nativeSrc":"495:92:25","nodeType":"YulBlock","src":"495:92:25","statements":[{"nativeSrc":"505:26:25","nodeType":"YulAssignment","src":"505:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"517:9:25","nodeType":"YulIdentifier","src":"517:9:25"},{"kind":"number","nativeSrc":"528:2:25","nodeType":"YulLiteral","src":"528:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"513:3:25","nodeType":"YulIdentifier","src":"513:3:25"},"nativeSrc":"513:18:25","nodeType":"YulFunctionCall","src":"513:18:25"},"variableNames":[{"name":"tail","nativeSrc":"505:4:25","nodeType":"YulIdentifier","src":"505:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"547:9:25","nodeType":"YulIdentifier","src":"547:9:25"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"572:6:25","nodeType":"YulIdentifier","src":"572:6:25"}],"functionName":{"name":"iszero","nativeSrc":"565:6:25","nodeType":"YulIdentifier","src":"565:6:25"},"nativeSrc":"565:14:25","nodeType":"YulFunctionCall","src":"565:14:25"}],"functionName":{"name":"iszero","nativeSrc":"558:6:25","nodeType":"YulIdentifier","src":"558:6:25"},"nativeSrc":"558:22:25","nodeType":"YulFunctionCall","src":"558:22:25"}],"functionName":{"name":"mstore","nativeSrc":"540:6:25","nodeType":"YulIdentifier","src":"540:6:25"},"nativeSrc":"540:41:25","nodeType":"YulFunctionCall","src":"540:41:25"},"nativeSrc":"540:41:25","nodeType":"YulExpressionStatement","src":"540:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"400:187:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"464:9:25","nodeType":"YulTypedName","src":"464:9:25","type":""},{"name":"value0","nativeSrc":"475:6:25","nodeType":"YulTypedName","src":"475:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"486:4:25","nodeType":"YulTypedName","src":"486:4:25","type":""}],"src":"400:187:25"},{"body":{"nativeSrc":"658:184:25","nodeType":"YulBlock","src":"658:184:25","statements":[{"nativeSrc":"668:10:25","nodeType":"YulVariableDeclaration","src":"668:10:25","value":{"kind":"number","nativeSrc":"677:1:25","nodeType":"YulLiteral","src":"677:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"672:1:25","nodeType":"YulTypedName","src":"672:1:25","type":""}]},{"body":{"nativeSrc":"737:63:25","nodeType":"YulBlock","src":"737:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"762:3:25","nodeType":"YulIdentifier","src":"762:3:25"},{"name":"i","nativeSrc":"767:1:25","nodeType":"YulIdentifier","src":"767:1:25"}],"functionName":{"name":"add","nativeSrc":"758:3:25","nodeType":"YulIdentifier","src":"758:3:25"},"nativeSrc":"758:11:25","nodeType":"YulFunctionCall","src":"758:11:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"781:3:25","nodeType":"YulIdentifier","src":"781:3:25"},{"name":"i","nativeSrc":"786:1:25","nodeType":"YulIdentifier","src":"786:1:25"}],"functionName":{"name":"add","nativeSrc":"777:3:25","nodeType":"YulIdentifier","src":"777:3:25"},"nativeSrc":"777:11:25","nodeType":"YulFunctionCall","src":"777:11:25"}],"functionName":{"name":"mload","nativeSrc":"771:5:25","nodeType":"YulIdentifier","src":"771:5:25"},"nativeSrc":"771:18:25","nodeType":"YulFunctionCall","src":"771:18:25"}],"functionName":{"name":"mstore","nativeSrc":"751:6:25","nodeType":"YulIdentifier","src":"751:6:25"},"nativeSrc":"751:39:25","nodeType":"YulFunctionCall","src":"751:39:25"},"nativeSrc":"751:39:25","nodeType":"YulExpressionStatement","src":"751:39:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"698:1:25","nodeType":"YulIdentifier","src":"698:1:25"},{"name":"length","nativeSrc":"701:6:25","nodeType":"YulIdentifier","src":"701:6:25"}],"functionName":{"name":"lt","nativeSrc":"695:2:25","nodeType":"YulIdentifier","src":"695:2:25"},"nativeSrc":"695:13:25","nodeType":"YulFunctionCall","src":"695:13:25"},"nativeSrc":"687:113:25","nodeType":"YulForLoop","post":{"nativeSrc":"709:19:25","nodeType":"YulBlock","src":"709:19:25","statements":[{"nativeSrc":"711:15:25","nodeType":"YulAssignment","src":"711:15:25","value":{"arguments":[{"name":"i","nativeSrc":"720:1:25","nodeType":"YulIdentifier","src":"720:1:25"},{"kind":"number","nativeSrc":"723:2:25","nodeType":"YulLiteral","src":"723:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"716:3:25","nodeType":"YulIdentifier","src":"716:3:25"},"nativeSrc":"716:10:25","nodeType":"YulFunctionCall","src":"716:10:25"},"variableNames":[{"name":"i","nativeSrc":"711:1:25","nodeType":"YulIdentifier","src":"711:1:25"}]}]},"pre":{"nativeSrc":"691:3:25","nodeType":"YulBlock","src":"691:3:25","statements":[]},"src":"687:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"820:3:25","nodeType":"YulIdentifier","src":"820:3:25"},{"name":"length","nativeSrc":"825:6:25","nodeType":"YulIdentifier","src":"825:6:25"}],"functionName":{"name":"add","nativeSrc":"816:3:25","nodeType":"YulIdentifier","src":"816:3:25"},"nativeSrc":"816:16:25","nodeType":"YulFunctionCall","src":"816:16:25"},{"kind":"number","nativeSrc":"834:1:25","nodeType":"YulLiteral","src":"834:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"809:6:25","nodeType":"YulIdentifier","src":"809:6:25"},"nativeSrc":"809:27:25","nodeType":"YulFunctionCall","src":"809:27:25"},"nativeSrc":"809:27:25","nodeType":"YulExpressionStatement","src":"809:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"592:250:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"636:3:25","nodeType":"YulTypedName","src":"636:3:25","type":""},{"name":"dst","nativeSrc":"641:3:25","nodeType":"YulTypedName","src":"641:3:25","type":""},{"name":"length","nativeSrc":"646:6:25","nodeType":"YulTypedName","src":"646:6:25","type":""}],"src":"592:250:25"},{"body":{"nativeSrc":"897:221:25","nodeType":"YulBlock","src":"897:221:25","statements":[{"nativeSrc":"907:26:25","nodeType":"YulVariableDeclaration","src":"907:26:25","value":{"arguments":[{"name":"value","nativeSrc":"927:5:25","nodeType":"YulIdentifier","src":"927:5:25"}],"functionName":{"name":"mload","nativeSrc":"921:5:25","nodeType":"YulIdentifier","src":"921:5:25"},"nativeSrc":"921:12:25","nodeType":"YulFunctionCall","src":"921:12:25"},"variables":[{"name":"length","nativeSrc":"911:6:25","nodeType":"YulTypedName","src":"911:6:25","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"949:3:25","nodeType":"YulIdentifier","src":"949:3:25"},{"name":"length","nativeSrc":"954:6:25","nodeType":"YulIdentifier","src":"954:6:25"}],"functionName":{"name":"mstore","nativeSrc":"942:6:25","nodeType":"YulIdentifier","src":"942:6:25"},"nativeSrc":"942:19:25","nodeType":"YulFunctionCall","src":"942:19:25"},"nativeSrc":"942:19:25","nodeType":"YulExpressionStatement","src":"942:19:25"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1009:5:25","nodeType":"YulIdentifier","src":"1009:5:25"},{"kind":"number","nativeSrc":"1016:4:25","nodeType":"YulLiteral","src":"1016:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1005:3:25","nodeType":"YulIdentifier","src":"1005:3:25"},"nativeSrc":"1005:16:25","nodeType":"YulFunctionCall","src":"1005:16:25"},{"arguments":[{"name":"pos","nativeSrc":"1027:3:25","nodeType":"YulIdentifier","src":"1027:3:25"},{"kind":"number","nativeSrc":"1032:4:25","nodeType":"YulLiteral","src":"1032:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1023:3:25","nodeType":"YulIdentifier","src":"1023:3:25"},"nativeSrc":"1023:14:25","nodeType":"YulFunctionCall","src":"1023:14:25"},{"name":"length","nativeSrc":"1039:6:25","nodeType":"YulIdentifier","src":"1039:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"970:34:25","nodeType":"YulIdentifier","src":"970:34:25"},"nativeSrc":"970:76:25","nodeType":"YulFunctionCall","src":"970:76:25"},"nativeSrc":"970:76:25","nodeType":"YulExpressionStatement","src":"970:76:25"},{"nativeSrc":"1055:57:25","nodeType":"YulAssignment","src":"1055:57:25","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1070:3:25","nodeType":"YulIdentifier","src":"1070:3:25"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1083:6:25","nodeType":"YulIdentifier","src":"1083:6:25"},{"kind":"number","nativeSrc":"1091:2:25","nodeType":"YulLiteral","src":"1091:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1079:3:25","nodeType":"YulIdentifier","src":"1079:3:25"},"nativeSrc":"1079:15:25","nodeType":"YulFunctionCall","src":"1079:15:25"},{"arguments":[{"kind":"number","nativeSrc":"1100:2:25","nodeType":"YulLiteral","src":"1100:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1096:3:25","nodeType":"YulIdentifier","src":"1096:3:25"},"nativeSrc":"1096:7:25","nodeType":"YulFunctionCall","src":"1096:7:25"}],"functionName":{"name":"and","nativeSrc":"1075:3:25","nodeType":"YulIdentifier","src":"1075:3:25"},"nativeSrc":"1075:29:25","nodeType":"YulFunctionCall","src":"1075:29:25"}],"functionName":{"name":"add","nativeSrc":"1066:3:25","nodeType":"YulIdentifier","src":"1066:3:25"},"nativeSrc":"1066:39:25","nodeType":"YulFunctionCall","src":"1066:39:25"},{"kind":"number","nativeSrc":"1107:4:25","nodeType":"YulLiteral","src":"1107:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1062:3:25","nodeType":"YulIdentifier","src":"1062:3:25"},"nativeSrc":"1062:50:25","nodeType":"YulFunctionCall","src":"1062:50:25"},"variableNames":[{"name":"end","nativeSrc":"1055:3:25","nodeType":"YulIdentifier","src":"1055:3:25"}]}]},"name":"abi_encode_string","nativeSrc":"847:271:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"874:5:25","nodeType":"YulTypedName","src":"874:5:25","type":""},{"name":"pos","nativeSrc":"881:3:25","nodeType":"YulTypedName","src":"881:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"889:3:25","nodeType":"YulTypedName","src":"889:3:25","type":""}],"src":"847:271:25"},{"body":{"nativeSrc":"1244:99:25","nodeType":"YulBlock","src":"1244:99:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1261:9:25","nodeType":"YulIdentifier","src":"1261:9:25"},{"kind":"number","nativeSrc":"1272:2:25","nodeType":"YulLiteral","src":"1272:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1254:6:25","nodeType":"YulIdentifier","src":"1254:6:25"},"nativeSrc":"1254:21:25","nodeType":"YulFunctionCall","src":"1254:21:25"},"nativeSrc":"1254:21:25","nodeType":"YulExpressionStatement","src":"1254:21:25"},{"nativeSrc":"1284:53:25","nodeType":"YulAssignment","src":"1284:53:25","value":{"arguments":[{"name":"value0","nativeSrc":"1310:6:25","nodeType":"YulIdentifier","src":"1310:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"1322:9:25","nodeType":"YulIdentifier","src":"1322:9:25"},{"kind":"number","nativeSrc":"1333:2:25","nodeType":"YulLiteral","src":"1333:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1318:3:25","nodeType":"YulIdentifier","src":"1318:3:25"},"nativeSrc":"1318:18:25","nodeType":"YulFunctionCall","src":"1318:18:25"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1292:17:25","nodeType":"YulIdentifier","src":"1292:17:25"},"nativeSrc":"1292:45:25","nodeType":"YulFunctionCall","src":"1292:45:25"},"variableNames":[{"name":"tail","nativeSrc":"1284:4:25","nodeType":"YulIdentifier","src":"1284:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1123:220:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1213:9:25","nodeType":"YulTypedName","src":"1213:9:25","type":""},{"name":"value0","nativeSrc":"1224:6:25","nodeType":"YulTypedName","src":"1224:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1235:4:25","nodeType":"YulTypedName","src":"1235:4:25","type":""}],"src":"1123:220:25"},{"body":{"nativeSrc":"1418:156:25","nodeType":"YulBlock","src":"1418:156:25","statements":[{"body":{"nativeSrc":"1464:16:25","nodeType":"YulBlock","src":"1464:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1473:1:25","nodeType":"YulLiteral","src":"1473:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1476:1:25","nodeType":"YulLiteral","src":"1476:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1466:6:25","nodeType":"YulIdentifier","src":"1466:6:25"},"nativeSrc":"1466:12:25","nodeType":"YulFunctionCall","src":"1466:12:25"},"nativeSrc":"1466:12:25","nodeType":"YulExpressionStatement","src":"1466:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1439:7:25","nodeType":"YulIdentifier","src":"1439:7:25"},{"name":"headStart","nativeSrc":"1448:9:25","nodeType":"YulIdentifier","src":"1448:9:25"}],"functionName":{"name":"sub","nativeSrc":"1435:3:25","nodeType":"YulIdentifier","src":"1435:3:25"},"nativeSrc":"1435:23:25","nodeType":"YulFunctionCall","src":"1435:23:25"},{"kind":"number","nativeSrc":"1460:2:25","nodeType":"YulLiteral","src":"1460:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1431:3:25","nodeType":"YulIdentifier","src":"1431:3:25"},"nativeSrc":"1431:32:25","nodeType":"YulFunctionCall","src":"1431:32:25"},"nativeSrc":"1428:52:25","nodeType":"YulIf","src":"1428:52:25"},{"nativeSrc":"1489:14:25","nodeType":"YulVariableDeclaration","src":"1489:14:25","value":{"kind":"number","nativeSrc":"1502:1:25","nodeType":"YulLiteral","src":"1502:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1493:5:25","nodeType":"YulTypedName","src":"1493:5:25","type":""}]},{"nativeSrc":"1512:32:25","nodeType":"YulAssignment","src":"1512:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1534:9:25","nodeType":"YulIdentifier","src":"1534:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"1521:12:25","nodeType":"YulIdentifier","src":"1521:12:25"},"nativeSrc":"1521:23:25","nodeType":"YulFunctionCall","src":"1521:23:25"},"variableNames":[{"name":"value","nativeSrc":"1512:5:25","nodeType":"YulIdentifier","src":"1512:5:25"}]},{"nativeSrc":"1553:15:25","nodeType":"YulAssignment","src":"1553:15:25","value":{"name":"value","nativeSrc":"1563:5:25","nodeType":"YulIdentifier","src":"1563:5:25"},"variableNames":[{"name":"value0","nativeSrc":"1553:6:25","nodeType":"YulIdentifier","src":"1553:6:25"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1348:226:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1384:9:25","nodeType":"YulTypedName","src":"1384:9:25","type":""},{"name":"dataEnd","nativeSrc":"1395:7:25","nodeType":"YulTypedName","src":"1395:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1407:6:25","nodeType":"YulTypedName","src":"1407:6:25","type":""}],"src":"1348:226:25"},{"body":{"nativeSrc":"1680:102:25","nodeType":"YulBlock","src":"1680:102:25","statements":[{"nativeSrc":"1690:26:25","nodeType":"YulAssignment","src":"1690:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1702:9:25","nodeType":"YulIdentifier","src":"1702:9:25"},{"kind":"number","nativeSrc":"1713:2:25","nodeType":"YulLiteral","src":"1713:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1698:3:25","nodeType":"YulIdentifier","src":"1698:3:25"},"nativeSrc":"1698:18:25","nodeType":"YulFunctionCall","src":"1698:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1690:4:25","nodeType":"YulIdentifier","src":"1690:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1732:9:25","nodeType":"YulIdentifier","src":"1732:9:25"},{"arguments":[{"name":"value0","nativeSrc":"1747:6:25","nodeType":"YulIdentifier","src":"1747:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1763:3:25","nodeType":"YulLiteral","src":"1763:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"1768:1:25","nodeType":"YulLiteral","src":"1768:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1759:3:25","nodeType":"YulIdentifier","src":"1759:3:25"},"nativeSrc":"1759:11:25","nodeType":"YulFunctionCall","src":"1759:11:25"},{"kind":"number","nativeSrc":"1772:1:25","nodeType":"YulLiteral","src":"1772:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1755:3:25","nodeType":"YulIdentifier","src":"1755:3:25"},"nativeSrc":"1755:19:25","nodeType":"YulFunctionCall","src":"1755:19:25"}],"functionName":{"name":"and","nativeSrc":"1743:3:25","nodeType":"YulIdentifier","src":"1743:3:25"},"nativeSrc":"1743:32:25","nodeType":"YulFunctionCall","src":"1743:32:25"}],"functionName":{"name":"mstore","nativeSrc":"1725:6:25","nodeType":"YulIdentifier","src":"1725:6:25"},"nativeSrc":"1725:51:25","nodeType":"YulFunctionCall","src":"1725:51:25"},"nativeSrc":"1725:51:25","nodeType":"YulExpressionStatement","src":"1725:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1579:203:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1649:9:25","nodeType":"YulTypedName","src":"1649:9:25","type":""},{"name":"value0","nativeSrc":"1660:6:25","nodeType":"YulTypedName","src":"1660:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1671:4:25","nodeType":"YulTypedName","src":"1671:4:25","type":""}],"src":"1579:203:25"},{"body":{"nativeSrc":"1836:124:25","nodeType":"YulBlock","src":"1836:124:25","statements":[{"nativeSrc":"1846:29:25","nodeType":"YulAssignment","src":"1846:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"1868:6:25","nodeType":"YulIdentifier","src":"1868:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"1855:12:25","nodeType":"YulIdentifier","src":"1855:12:25"},"nativeSrc":"1855:20:25","nodeType":"YulFunctionCall","src":"1855:20:25"},"variableNames":[{"name":"value","nativeSrc":"1846:5:25","nodeType":"YulIdentifier","src":"1846:5:25"}]},{"body":{"nativeSrc":"1938:16:25","nodeType":"YulBlock","src":"1938:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1947:1:25","nodeType":"YulLiteral","src":"1947:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1950:1:25","nodeType":"YulLiteral","src":"1950:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1940:6:25","nodeType":"YulIdentifier","src":"1940:6:25"},"nativeSrc":"1940:12:25","nodeType":"YulFunctionCall","src":"1940:12:25"},"nativeSrc":"1940:12:25","nodeType":"YulExpressionStatement","src":"1940:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1897:5:25","nodeType":"YulIdentifier","src":"1897:5:25"},{"arguments":[{"name":"value","nativeSrc":"1908:5:25","nodeType":"YulIdentifier","src":"1908:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1923:3:25","nodeType":"YulLiteral","src":"1923:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"1928:1:25","nodeType":"YulLiteral","src":"1928:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1919:3:25","nodeType":"YulIdentifier","src":"1919:3:25"},"nativeSrc":"1919:11:25","nodeType":"YulFunctionCall","src":"1919:11:25"},{"kind":"number","nativeSrc":"1932:1:25","nodeType":"YulLiteral","src":"1932:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1915:3:25","nodeType":"YulIdentifier","src":"1915:3:25"},"nativeSrc":"1915:19:25","nodeType":"YulFunctionCall","src":"1915:19:25"}],"functionName":{"name":"and","nativeSrc":"1904:3:25","nodeType":"YulIdentifier","src":"1904:3:25"},"nativeSrc":"1904:31:25","nodeType":"YulFunctionCall","src":"1904:31:25"}],"functionName":{"name":"eq","nativeSrc":"1894:2:25","nodeType":"YulIdentifier","src":"1894:2:25"},"nativeSrc":"1894:42:25","nodeType":"YulFunctionCall","src":"1894:42:25"}],"functionName":{"name":"iszero","nativeSrc":"1887:6:25","nodeType":"YulIdentifier","src":"1887:6:25"},"nativeSrc":"1887:50:25","nodeType":"YulFunctionCall","src":"1887:50:25"},"nativeSrc":"1884:70:25","nodeType":"YulIf","src":"1884:70:25"}]},"name":"abi_decode_address","nativeSrc":"1787:173:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1815:6:25","nodeType":"YulTypedName","src":"1815:6:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1826:5:25","nodeType":"YulTypedName","src":"1826:5:25","type":""}],"src":"1787:173:25"},{"body":{"nativeSrc":"2052:213:25","nodeType":"YulBlock","src":"2052:213:25","statements":[{"body":{"nativeSrc":"2098:16:25","nodeType":"YulBlock","src":"2098:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2107:1:25","nodeType":"YulLiteral","src":"2107:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2110:1:25","nodeType":"YulLiteral","src":"2110:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2100:6:25","nodeType":"YulIdentifier","src":"2100:6:25"},"nativeSrc":"2100:12:25","nodeType":"YulFunctionCall","src":"2100:12:25"},"nativeSrc":"2100:12:25","nodeType":"YulExpressionStatement","src":"2100:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2073:7:25","nodeType":"YulIdentifier","src":"2073:7:25"},{"name":"headStart","nativeSrc":"2082:9:25","nodeType":"YulIdentifier","src":"2082:9:25"}],"functionName":{"name":"sub","nativeSrc":"2069:3:25","nodeType":"YulIdentifier","src":"2069:3:25"},"nativeSrc":"2069:23:25","nodeType":"YulFunctionCall","src":"2069:23:25"},{"kind":"number","nativeSrc":"2094:2:25","nodeType":"YulLiteral","src":"2094:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2065:3:25","nodeType":"YulIdentifier","src":"2065:3:25"},"nativeSrc":"2065:32:25","nodeType":"YulFunctionCall","src":"2065:32:25"},"nativeSrc":"2062:52:25","nodeType":"YulIf","src":"2062:52:25"},{"nativeSrc":"2123:39:25","nodeType":"YulAssignment","src":"2123:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2152:9:25","nodeType":"YulIdentifier","src":"2152:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2133:18:25","nodeType":"YulIdentifier","src":"2133:18:25"},"nativeSrc":"2133:29:25","nodeType":"YulFunctionCall","src":"2133:29:25"},"variableNames":[{"name":"value0","nativeSrc":"2123:6:25","nodeType":"YulIdentifier","src":"2123:6:25"}]},{"nativeSrc":"2171:14:25","nodeType":"YulVariableDeclaration","src":"2171:14:25","value":{"kind":"number","nativeSrc":"2184:1:25","nodeType":"YulLiteral","src":"2184:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2175:5:25","nodeType":"YulTypedName","src":"2175:5:25","type":""}]},{"nativeSrc":"2194:41:25","nodeType":"YulAssignment","src":"2194:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2220:9:25","nodeType":"YulIdentifier","src":"2220:9:25"},{"kind":"number","nativeSrc":"2231:2:25","nodeType":"YulLiteral","src":"2231:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2216:3:25","nodeType":"YulIdentifier","src":"2216:3:25"},"nativeSrc":"2216:18:25","nodeType":"YulFunctionCall","src":"2216:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"2203:12:25","nodeType":"YulIdentifier","src":"2203:12:25"},"nativeSrc":"2203:32:25","nodeType":"YulFunctionCall","src":"2203:32:25"},"variableNames":[{"name":"value","nativeSrc":"2194:5:25","nodeType":"YulIdentifier","src":"2194:5:25"}]},{"nativeSrc":"2244:15:25","nodeType":"YulAssignment","src":"2244:15:25","value":{"name":"value","nativeSrc":"2254:5:25","nodeType":"YulIdentifier","src":"2254:5:25"},"variableNames":[{"name":"value1","nativeSrc":"2244:6:25","nodeType":"YulIdentifier","src":"2244:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1965:300:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2010:9:25","nodeType":"YulTypedName","src":"2010:9:25","type":""},{"name":"dataEnd","nativeSrc":"2021:7:25","nodeType":"YulTypedName","src":"2021:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2033:6:25","nodeType":"YulTypedName","src":"2033:6:25","type":""},{"name":"value1","nativeSrc":"2041:6:25","nodeType":"YulTypedName","src":"2041:6:25","type":""}],"src":"1965:300:25"},{"body":{"nativeSrc":"2371:76:25","nodeType":"YulBlock","src":"2371:76:25","statements":[{"nativeSrc":"2381:26:25","nodeType":"YulAssignment","src":"2381:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2393:9:25","nodeType":"YulIdentifier","src":"2393:9:25"},{"kind":"number","nativeSrc":"2404:2:25","nodeType":"YulLiteral","src":"2404:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2389:3:25","nodeType":"YulIdentifier","src":"2389:3:25"},"nativeSrc":"2389:18:25","nodeType":"YulFunctionCall","src":"2389:18:25"},"variableNames":[{"name":"tail","nativeSrc":"2381:4:25","nodeType":"YulIdentifier","src":"2381:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2423:9:25","nodeType":"YulIdentifier","src":"2423:9:25"},{"name":"value0","nativeSrc":"2434:6:25","nodeType":"YulIdentifier","src":"2434:6:25"}],"functionName":{"name":"mstore","nativeSrc":"2416:6:25","nodeType":"YulIdentifier","src":"2416:6:25"},"nativeSrc":"2416:25:25","nodeType":"YulFunctionCall","src":"2416:25:25"},"nativeSrc":"2416:25:25","nodeType":"YulExpressionStatement","src":"2416:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2270:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2340:9:25","nodeType":"YulTypedName","src":"2340:9:25","type":""},{"name":"value0","nativeSrc":"2351:6:25","nodeType":"YulTypedName","src":"2351:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2362:4:25","nodeType":"YulTypedName","src":"2362:4:25","type":""}],"src":"2270:177:25"},{"body":{"nativeSrc":"2556:270:25","nodeType":"YulBlock","src":"2556:270:25","statements":[{"body":{"nativeSrc":"2602:16:25","nodeType":"YulBlock","src":"2602:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2611:1:25","nodeType":"YulLiteral","src":"2611:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2614:1:25","nodeType":"YulLiteral","src":"2614:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2604:6:25","nodeType":"YulIdentifier","src":"2604:6:25"},"nativeSrc":"2604:12:25","nodeType":"YulFunctionCall","src":"2604:12:25"},"nativeSrc":"2604:12:25","nodeType":"YulExpressionStatement","src":"2604:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2577:7:25","nodeType":"YulIdentifier","src":"2577:7:25"},{"name":"headStart","nativeSrc":"2586:9:25","nodeType":"YulIdentifier","src":"2586:9:25"}],"functionName":{"name":"sub","nativeSrc":"2573:3:25","nodeType":"YulIdentifier","src":"2573:3:25"},"nativeSrc":"2573:23:25","nodeType":"YulFunctionCall","src":"2573:23:25"},{"kind":"number","nativeSrc":"2598:2:25","nodeType":"YulLiteral","src":"2598:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2569:3:25","nodeType":"YulIdentifier","src":"2569:3:25"},"nativeSrc":"2569:32:25","nodeType":"YulFunctionCall","src":"2569:32:25"},"nativeSrc":"2566:52:25","nodeType":"YulIf","src":"2566:52:25"},{"nativeSrc":"2627:39:25","nodeType":"YulAssignment","src":"2627:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2656:9:25","nodeType":"YulIdentifier","src":"2656:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2637:18:25","nodeType":"YulIdentifier","src":"2637:18:25"},"nativeSrc":"2637:29:25","nodeType":"YulFunctionCall","src":"2637:29:25"},"variableNames":[{"name":"value0","nativeSrc":"2627:6:25","nodeType":"YulIdentifier","src":"2627:6:25"}]},{"nativeSrc":"2675:48:25","nodeType":"YulAssignment","src":"2675:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2708:9:25","nodeType":"YulIdentifier","src":"2708:9:25"},{"kind":"number","nativeSrc":"2719:2:25","nodeType":"YulLiteral","src":"2719:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2704:3:25","nodeType":"YulIdentifier","src":"2704:3:25"},"nativeSrc":"2704:18:25","nodeType":"YulFunctionCall","src":"2704:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2685:18:25","nodeType":"YulIdentifier","src":"2685:18:25"},"nativeSrc":"2685:38:25","nodeType":"YulFunctionCall","src":"2685:38:25"},"variableNames":[{"name":"value1","nativeSrc":"2675:6:25","nodeType":"YulIdentifier","src":"2675:6:25"}]},{"nativeSrc":"2732:14:25","nodeType":"YulVariableDeclaration","src":"2732:14:25","value":{"kind":"number","nativeSrc":"2745:1:25","nodeType":"YulLiteral","src":"2745:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2736:5:25","nodeType":"YulTypedName","src":"2736:5:25","type":""}]},{"nativeSrc":"2755:41:25","nodeType":"YulAssignment","src":"2755:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2781:9:25","nodeType":"YulIdentifier","src":"2781:9:25"},{"kind":"number","nativeSrc":"2792:2:25","nodeType":"YulLiteral","src":"2792:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2777:3:25","nodeType":"YulIdentifier","src":"2777:3:25"},"nativeSrc":"2777:18:25","nodeType":"YulFunctionCall","src":"2777:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"2764:12:25","nodeType":"YulIdentifier","src":"2764:12:25"},"nativeSrc":"2764:32:25","nodeType":"YulFunctionCall","src":"2764:32:25"},"variableNames":[{"name":"value","nativeSrc":"2755:5:25","nodeType":"YulIdentifier","src":"2755:5:25"}]},{"nativeSrc":"2805:15:25","nodeType":"YulAssignment","src":"2805:15:25","value":{"name":"value","nativeSrc":"2815:5:25","nodeType":"YulIdentifier","src":"2815:5:25"},"variableNames":[{"name":"value2","nativeSrc":"2805:6:25","nodeType":"YulIdentifier","src":"2805:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2452:374:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2506:9:25","nodeType":"YulTypedName","src":"2506:9:25","type":""},{"name":"dataEnd","nativeSrc":"2517:7:25","nodeType":"YulTypedName","src":"2517:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2529:6:25","nodeType":"YulTypedName","src":"2529:6:25","type":""},{"name":"value1","nativeSrc":"2537:6:25","nodeType":"YulTypedName","src":"2537:6:25","type":""},{"name":"value2","nativeSrc":"2545:6:25","nodeType":"YulTypedName","src":"2545:6:25","type":""}],"src":"2452:374:25"},{"body":{"nativeSrc":"2863:95:25","nodeType":"YulBlock","src":"2863:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2880:1:25","nodeType":"YulLiteral","src":"2880:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2887:3:25","nodeType":"YulLiteral","src":"2887:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"2892:10:25","nodeType":"YulLiteral","src":"2892:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2883:3:25","nodeType":"YulIdentifier","src":"2883:3:25"},"nativeSrc":"2883:20:25","nodeType":"YulFunctionCall","src":"2883:20:25"}],"functionName":{"name":"mstore","nativeSrc":"2873:6:25","nodeType":"YulIdentifier","src":"2873:6:25"},"nativeSrc":"2873:31:25","nodeType":"YulFunctionCall","src":"2873:31:25"},"nativeSrc":"2873:31:25","nodeType":"YulExpressionStatement","src":"2873:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2920:1:25","nodeType":"YulLiteral","src":"2920:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"2923:4:25","nodeType":"YulLiteral","src":"2923:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2913:6:25","nodeType":"YulIdentifier","src":"2913:6:25"},"nativeSrc":"2913:15:25","nodeType":"YulFunctionCall","src":"2913:15:25"},"nativeSrc":"2913:15:25","nodeType":"YulExpressionStatement","src":"2913:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2944:1:25","nodeType":"YulLiteral","src":"2944:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2947:4:25","nodeType":"YulLiteral","src":"2947:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2937:6:25","nodeType":"YulIdentifier","src":"2937:6:25"},"nativeSrc":"2937:15:25","nodeType":"YulFunctionCall","src":"2937:15:25"},"nativeSrc":"2937:15:25","nodeType":"YulExpressionStatement","src":"2937:15:25"}]},"name":"panic_error_0x41","nativeSrc":"2831:127:25","nodeType":"YulFunctionDefinition","src":"2831:127:25"},{"body":{"nativeSrc":"3038:641:25","nodeType":"YulBlock","src":"3038:641:25","statements":[{"nativeSrc":"3048:13:25","nodeType":"YulVariableDeclaration","src":"3048:13:25","value":{"kind":"number","nativeSrc":"3060:1:25","nodeType":"YulLiteral","src":"3060:1:25","type":"","value":"0"},"variables":[{"name":"size","nativeSrc":"3052:4:25","nodeType":"YulTypedName","src":"3052:4:25","type":""}]},{"body":{"nativeSrc":"3104:22:25","nodeType":"YulBlock","src":"3104:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3106:16:25","nodeType":"YulIdentifier","src":"3106:16:25"},"nativeSrc":"3106:18:25","nodeType":"YulFunctionCall","src":"3106:18:25"},"nativeSrc":"3106:18:25","nodeType":"YulExpressionStatement","src":"3106:18:25"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3076:6:25","nodeType":"YulIdentifier","src":"3076:6:25"},{"kind":"number","nativeSrc":"3084:18:25","nodeType":"YulLiteral","src":"3084:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3073:2:25","nodeType":"YulIdentifier","src":"3073:2:25"},"nativeSrc":"3073:30:25","nodeType":"YulFunctionCall","src":"3073:30:25"},"nativeSrc":"3070:56:25","nodeType":"YulIf","src":"3070:56:25"},{"nativeSrc":"3135:43:25","nodeType":"YulVariableDeclaration","src":"3135:43:25","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3157:6:25","nodeType":"YulIdentifier","src":"3157:6:25"},{"kind":"number","nativeSrc":"3165:2:25","nodeType":"YulLiteral","src":"3165:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3153:3:25","nodeType":"YulIdentifier","src":"3153:3:25"},"nativeSrc":"3153:15:25","nodeType":"YulFunctionCall","src":"3153:15:25"},{"arguments":[{"kind":"number","nativeSrc":"3174:2:25","nodeType":"YulLiteral","src":"3174:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3170:3:25","nodeType":"YulIdentifier","src":"3170:3:25"},"nativeSrc":"3170:7:25","nodeType":"YulFunctionCall","src":"3170:7:25"}],"functionName":{"name":"and","nativeSrc":"3149:3:25","nodeType":"YulIdentifier","src":"3149:3:25"},"nativeSrc":"3149:29:25","nodeType":"YulFunctionCall","src":"3149:29:25"},"variables":[{"name":"result","nativeSrc":"3139:6:25","nodeType":"YulTypedName","src":"3139:6:25","type":""}]},{"nativeSrc":"3187:25:25","nodeType":"YulAssignment","src":"3187:25:25","value":{"arguments":[{"name":"result","nativeSrc":"3199:6:25","nodeType":"YulIdentifier","src":"3199:6:25"},{"kind":"number","nativeSrc":"3207:4:25","nodeType":"YulLiteral","src":"3207:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3195:3:25","nodeType":"YulIdentifier","src":"3195:3:25"},"nativeSrc":"3195:17:25","nodeType":"YulFunctionCall","src":"3195:17:25"},"variableNames":[{"name":"size","nativeSrc":"3187:4:25","nodeType":"YulIdentifier","src":"3187:4:25"}]},{"nativeSrc":"3221:15:25","nodeType":"YulVariableDeclaration","src":"3221:15:25","value":{"kind":"number","nativeSrc":"3235:1:25","nodeType":"YulLiteral","src":"3235:1:25","type":"","value":"0"},"variables":[{"name":"memPtr","nativeSrc":"3225:6:25","nodeType":"YulTypedName","src":"3225:6:25","type":""}]},{"nativeSrc":"3245:19:25","nodeType":"YulAssignment","src":"3245:19:25","value":{"arguments":[{"kind":"number","nativeSrc":"3261:2:25","nodeType":"YulLiteral","src":"3261:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3255:5:25","nodeType":"YulIdentifier","src":"3255:5:25"},"nativeSrc":"3255:9:25","nodeType":"YulFunctionCall","src":"3255:9:25"},"variableNames":[{"name":"memPtr","nativeSrc":"3245:6:25","nodeType":"YulIdentifier","src":"3245:6:25"}]},{"nativeSrc":"3273:60:25","nodeType":"YulVariableDeclaration","src":"3273:60:25","value":{"arguments":[{"name":"memPtr","nativeSrc":"3295:6:25","nodeType":"YulIdentifier","src":"3295:6:25"},{"arguments":[{"arguments":[{"name":"result","nativeSrc":"3311:6:25","nodeType":"YulIdentifier","src":"3311:6:25"},{"kind":"number","nativeSrc":"3319:2:25","nodeType":"YulLiteral","src":"3319:2:25","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"3307:3:25","nodeType":"YulIdentifier","src":"3307:3:25"},"nativeSrc":"3307:15:25","nodeType":"YulFunctionCall","src":"3307:15:25"},{"arguments":[{"kind":"number","nativeSrc":"3328:2:25","nodeType":"YulLiteral","src":"3328:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3324:3:25","nodeType":"YulIdentifier","src":"3324:3:25"},"nativeSrc":"3324:7:25","nodeType":"YulFunctionCall","src":"3324:7:25"}],"functionName":{"name":"and","nativeSrc":"3303:3:25","nodeType":"YulIdentifier","src":"3303:3:25"},"nativeSrc":"3303:29:25","nodeType":"YulFunctionCall","src":"3303:29:25"}],"functionName":{"name":"add","nativeSrc":"3291:3:25","nodeType":"YulIdentifier","src":"3291:3:25"},"nativeSrc":"3291:42:25","nodeType":"YulFunctionCall","src":"3291:42:25"},"variables":[{"name":"newFreePtr","nativeSrc":"3277:10:25","nodeType":"YulTypedName","src":"3277:10:25","type":""}]},{"body":{"nativeSrc":"3408:22:25","nodeType":"YulBlock","src":"3408:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3410:16:25","nodeType":"YulIdentifier","src":"3410:16:25"},"nativeSrc":"3410:18:25","nodeType":"YulFunctionCall","src":"3410:18:25"},"nativeSrc":"3410:18:25","nodeType":"YulExpressionStatement","src":"3410:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3351:10:25","nodeType":"YulIdentifier","src":"3351:10:25"},{"kind":"number","nativeSrc":"3363:18:25","nodeType":"YulLiteral","src":"3363:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3348:2:25","nodeType":"YulIdentifier","src":"3348:2:25"},"nativeSrc":"3348:34:25","nodeType":"YulFunctionCall","src":"3348:34:25"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3387:10:25","nodeType":"YulIdentifier","src":"3387:10:25"},{"name":"memPtr","nativeSrc":"3399:6:25","nodeType":"YulIdentifier","src":"3399:6:25"}],"functionName":{"name":"lt","nativeSrc":"3384:2:25","nodeType":"YulIdentifier","src":"3384:2:25"},"nativeSrc":"3384:22:25","nodeType":"YulFunctionCall","src":"3384:22:25"}],"functionName":{"name":"or","nativeSrc":"3345:2:25","nodeType":"YulIdentifier","src":"3345:2:25"},"nativeSrc":"3345:62:25","nodeType":"YulFunctionCall","src":"3345:62:25"},"nativeSrc":"3342:88:25","nodeType":"YulIf","src":"3342:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3446:2:25","nodeType":"YulLiteral","src":"3446:2:25","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3450:10:25","nodeType":"YulIdentifier","src":"3450:10:25"}],"functionName":{"name":"mstore","nativeSrc":"3439:6:25","nodeType":"YulIdentifier","src":"3439:6:25"},"nativeSrc":"3439:22:25","nodeType":"YulFunctionCall","src":"3439:22:25"},"nativeSrc":"3439:22:25","nodeType":"YulExpressionStatement","src":"3439:22:25"},{"nativeSrc":"3470:15:25","nodeType":"YulAssignment","src":"3470:15:25","value":{"name":"memPtr","nativeSrc":"3479:6:25","nodeType":"YulIdentifier","src":"3479:6:25"},"variableNames":[{"name":"array","nativeSrc":"3470:5:25","nodeType":"YulIdentifier","src":"3470:5:25"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3501:6:25","nodeType":"YulIdentifier","src":"3501:6:25"},{"name":"length","nativeSrc":"3509:6:25","nodeType":"YulIdentifier","src":"3509:6:25"}],"functionName":{"name":"mstore","nativeSrc":"3494:6:25","nodeType":"YulIdentifier","src":"3494:6:25"},"nativeSrc":"3494:22:25","nodeType":"YulFunctionCall","src":"3494:22:25"},"nativeSrc":"3494:22:25","nodeType":"YulExpressionStatement","src":"3494:22:25"},{"body":{"nativeSrc":"3554:16:25","nodeType":"YulBlock","src":"3554:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3563:1:25","nodeType":"YulLiteral","src":"3563:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3566:1:25","nodeType":"YulLiteral","src":"3566:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3556:6:25","nodeType":"YulIdentifier","src":"3556:6:25"},"nativeSrc":"3556:12:25","nodeType":"YulFunctionCall","src":"3556:12:25"},"nativeSrc":"3556:12:25","nodeType":"YulExpressionStatement","src":"3556:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3535:3:25","nodeType":"YulIdentifier","src":"3535:3:25"},{"name":"length","nativeSrc":"3540:6:25","nodeType":"YulIdentifier","src":"3540:6:25"}],"functionName":{"name":"add","nativeSrc":"3531:3:25","nodeType":"YulIdentifier","src":"3531:3:25"},"nativeSrc":"3531:16:25","nodeType":"YulFunctionCall","src":"3531:16:25"},{"name":"end","nativeSrc":"3549:3:25","nodeType":"YulIdentifier","src":"3549:3:25"}],"functionName":{"name":"gt","nativeSrc":"3528:2:25","nodeType":"YulIdentifier","src":"3528:2:25"},"nativeSrc":"3528:25:25","nodeType":"YulFunctionCall","src":"3528:25:25"},"nativeSrc":"3525:45:25","nodeType":"YulIf","src":"3525:45:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3596:6:25","nodeType":"YulIdentifier","src":"3596:6:25"},{"kind":"number","nativeSrc":"3604:4:25","nodeType":"YulLiteral","src":"3604:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3592:3:25","nodeType":"YulIdentifier","src":"3592:3:25"},"nativeSrc":"3592:17:25","nodeType":"YulFunctionCall","src":"3592:17:25"},{"name":"src","nativeSrc":"3611:3:25","nodeType":"YulIdentifier","src":"3611:3:25"},{"name":"length","nativeSrc":"3616:6:25","nodeType":"YulIdentifier","src":"3616:6:25"}],"functionName":{"name":"calldatacopy","nativeSrc":"3579:12:25","nodeType":"YulIdentifier","src":"3579:12:25"},"nativeSrc":"3579:44:25","nodeType":"YulFunctionCall","src":"3579:44:25"},"nativeSrc":"3579:44:25","nodeType":"YulExpressionStatement","src":"3579:44:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3647:6:25","nodeType":"YulIdentifier","src":"3647:6:25"},{"name":"length","nativeSrc":"3655:6:25","nodeType":"YulIdentifier","src":"3655:6:25"}],"functionName":{"name":"add","nativeSrc":"3643:3:25","nodeType":"YulIdentifier","src":"3643:3:25"},"nativeSrc":"3643:19:25","nodeType":"YulFunctionCall","src":"3643:19:25"},{"kind":"number","nativeSrc":"3664:4:25","nodeType":"YulLiteral","src":"3664:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3639:3:25","nodeType":"YulIdentifier","src":"3639:3:25"},"nativeSrc":"3639:30:25","nodeType":"YulFunctionCall","src":"3639:30:25"},{"kind":"number","nativeSrc":"3671:1:25","nodeType":"YulLiteral","src":"3671:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3632:6:25","nodeType":"YulIdentifier","src":"3632:6:25"},"nativeSrc":"3632:41:25","nodeType":"YulFunctionCall","src":"3632:41:25"},"nativeSrc":"3632:41:25","nodeType":"YulExpressionStatement","src":"3632:41:25"}]},"name":"abi_decode_available_length_string","nativeSrc":"2963:716:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3007:3:25","nodeType":"YulTypedName","src":"3007:3:25","type":""},{"name":"length","nativeSrc":"3012:6:25","nodeType":"YulTypedName","src":"3012:6:25","type":""},{"name":"end","nativeSrc":"3020:3:25","nodeType":"YulTypedName","src":"3020:3:25","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3028:5:25","nodeType":"YulTypedName","src":"3028:5:25","type":""}],"src":"2963:716:25"},{"body":{"nativeSrc":"3737:169:25","nodeType":"YulBlock","src":"3737:169:25","statements":[{"body":{"nativeSrc":"3786:16:25","nodeType":"YulBlock","src":"3786:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3795:1:25","nodeType":"YulLiteral","src":"3795:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3798:1:25","nodeType":"YulLiteral","src":"3798:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3788:6:25","nodeType":"YulIdentifier","src":"3788:6:25"},"nativeSrc":"3788:12:25","nodeType":"YulFunctionCall","src":"3788:12:25"},"nativeSrc":"3788:12:25","nodeType":"YulExpressionStatement","src":"3788:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3765:6:25","nodeType":"YulIdentifier","src":"3765:6:25"},{"kind":"number","nativeSrc":"3773:4:25","nodeType":"YulLiteral","src":"3773:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3761:3:25","nodeType":"YulIdentifier","src":"3761:3:25"},"nativeSrc":"3761:17:25","nodeType":"YulFunctionCall","src":"3761:17:25"},{"name":"end","nativeSrc":"3780:3:25","nodeType":"YulIdentifier","src":"3780:3:25"}],"functionName":{"name":"slt","nativeSrc":"3757:3:25","nodeType":"YulIdentifier","src":"3757:3:25"},"nativeSrc":"3757:27:25","nodeType":"YulFunctionCall","src":"3757:27:25"}],"functionName":{"name":"iszero","nativeSrc":"3750:6:25","nodeType":"YulIdentifier","src":"3750:6:25"},"nativeSrc":"3750:35:25","nodeType":"YulFunctionCall","src":"3750:35:25"},"nativeSrc":"3747:55:25","nodeType":"YulIf","src":"3747:55:25"},{"nativeSrc":"3811:89:25","nodeType":"YulAssignment","src":"3811:89:25","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3859:6:25","nodeType":"YulIdentifier","src":"3859:6:25"},{"kind":"number","nativeSrc":"3867:4:25","nodeType":"YulLiteral","src":"3867:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3855:3:25","nodeType":"YulIdentifier","src":"3855:3:25"},"nativeSrc":"3855:17:25","nodeType":"YulFunctionCall","src":"3855:17:25"},{"arguments":[{"name":"offset","nativeSrc":"3887:6:25","nodeType":"YulIdentifier","src":"3887:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"3874:12:25","nodeType":"YulIdentifier","src":"3874:12:25"},"nativeSrc":"3874:20:25","nodeType":"YulFunctionCall","src":"3874:20:25"},{"name":"end","nativeSrc":"3896:3:25","nodeType":"YulIdentifier","src":"3896:3:25"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"3820:34:25","nodeType":"YulIdentifier","src":"3820:34:25"},"nativeSrc":"3820:80:25","nodeType":"YulFunctionCall","src":"3820:80:25"},"variableNames":[{"name":"array","nativeSrc":"3811:5:25","nodeType":"YulIdentifier","src":"3811:5:25"}]}]},"name":"abi_decode_string","nativeSrc":"3684:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3711:6:25","nodeType":"YulTypedName","src":"3711:6:25","type":""},{"name":"end","nativeSrc":"3719:3:25","nodeType":"YulTypedName","src":"3719:3:25","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3727:5:25","nodeType":"YulTypedName","src":"3727:5:25","type":""}],"src":"3684:222:25"},{"body":{"nativeSrc":"3991:242:25","nodeType":"YulBlock","src":"3991:242:25","statements":[{"body":{"nativeSrc":"4037:16:25","nodeType":"YulBlock","src":"4037:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4046:1:25","nodeType":"YulLiteral","src":"4046:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4049:1:25","nodeType":"YulLiteral","src":"4049:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4039:6:25","nodeType":"YulIdentifier","src":"4039:6:25"},"nativeSrc":"4039:12:25","nodeType":"YulFunctionCall","src":"4039:12:25"},"nativeSrc":"4039:12:25","nodeType":"YulExpressionStatement","src":"4039:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4012:7:25","nodeType":"YulIdentifier","src":"4012:7:25"},{"name":"headStart","nativeSrc":"4021:9:25","nodeType":"YulIdentifier","src":"4021:9:25"}],"functionName":{"name":"sub","nativeSrc":"4008:3:25","nodeType":"YulIdentifier","src":"4008:3:25"},"nativeSrc":"4008:23:25","nodeType":"YulFunctionCall","src":"4008:23:25"},{"kind":"number","nativeSrc":"4033:2:25","nodeType":"YulLiteral","src":"4033:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4004:3:25","nodeType":"YulIdentifier","src":"4004:3:25"},"nativeSrc":"4004:32:25","nodeType":"YulFunctionCall","src":"4004:32:25"},"nativeSrc":"4001:52:25","nodeType":"YulIf","src":"4001:52:25"},{"nativeSrc":"4062:37:25","nodeType":"YulVariableDeclaration","src":"4062:37:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4089:9:25","nodeType":"YulIdentifier","src":"4089:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"4076:12:25","nodeType":"YulIdentifier","src":"4076:12:25"},"nativeSrc":"4076:23:25","nodeType":"YulFunctionCall","src":"4076:23:25"},"variables":[{"name":"offset","nativeSrc":"4066:6:25","nodeType":"YulTypedName","src":"4066:6:25","type":""}]},{"body":{"nativeSrc":"4142:16:25","nodeType":"YulBlock","src":"4142:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4151:1:25","nodeType":"YulLiteral","src":"4151:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4154:1:25","nodeType":"YulLiteral","src":"4154:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4144:6:25","nodeType":"YulIdentifier","src":"4144:6:25"},"nativeSrc":"4144:12:25","nodeType":"YulFunctionCall","src":"4144:12:25"},"nativeSrc":"4144:12:25","nodeType":"YulExpressionStatement","src":"4144:12:25"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4114:6:25","nodeType":"YulIdentifier","src":"4114:6:25"},{"kind":"number","nativeSrc":"4122:18:25","nodeType":"YulLiteral","src":"4122:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4111:2:25","nodeType":"YulIdentifier","src":"4111:2:25"},"nativeSrc":"4111:30:25","nodeType":"YulFunctionCall","src":"4111:30:25"},"nativeSrc":"4108:50:25","nodeType":"YulIf","src":"4108:50:25"},{"nativeSrc":"4167:60:25","nodeType":"YulAssignment","src":"4167:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4199:9:25","nodeType":"YulIdentifier","src":"4199:9:25"},{"name":"offset","nativeSrc":"4210:6:25","nodeType":"YulIdentifier","src":"4210:6:25"}],"functionName":{"name":"add","nativeSrc":"4195:3:25","nodeType":"YulIdentifier","src":"4195:3:25"},"nativeSrc":"4195:22:25","nodeType":"YulFunctionCall","src":"4195:22:25"},{"name":"dataEnd","nativeSrc":"4219:7:25","nodeType":"YulIdentifier","src":"4219:7:25"}],"functionName":{"name":"abi_decode_string","nativeSrc":"4177:17:25","nodeType":"YulIdentifier","src":"4177:17:25"},"nativeSrc":"4177:50:25","nodeType":"YulFunctionCall","src":"4177:50:25"},"variableNames":[{"name":"value0","nativeSrc":"4167:6:25","nodeType":"YulIdentifier","src":"4167:6:25"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"3911:322:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3957:9:25","nodeType":"YulTypedName","src":"3957:9:25","type":""},{"name":"dataEnd","nativeSrc":"3968:7:25","nodeType":"YulTypedName","src":"3968:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3980:6:25","nodeType":"YulTypedName","src":"3980:6:25","type":""}],"src":"3911:322:25"},{"body":{"nativeSrc":"4308:116:25","nodeType":"YulBlock","src":"4308:116:25","statements":[{"body":{"nativeSrc":"4354:16:25","nodeType":"YulBlock","src":"4354:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4363:1:25","nodeType":"YulLiteral","src":"4363:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4366:1:25","nodeType":"YulLiteral","src":"4366:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4356:6:25","nodeType":"YulIdentifier","src":"4356:6:25"},"nativeSrc":"4356:12:25","nodeType":"YulFunctionCall","src":"4356:12:25"},"nativeSrc":"4356:12:25","nodeType":"YulExpressionStatement","src":"4356:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4329:7:25","nodeType":"YulIdentifier","src":"4329:7:25"},{"name":"headStart","nativeSrc":"4338:9:25","nodeType":"YulIdentifier","src":"4338:9:25"}],"functionName":{"name":"sub","nativeSrc":"4325:3:25","nodeType":"YulIdentifier","src":"4325:3:25"},"nativeSrc":"4325:23:25","nodeType":"YulFunctionCall","src":"4325:23:25"},{"kind":"number","nativeSrc":"4350:2:25","nodeType":"YulLiteral","src":"4350:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4321:3:25","nodeType":"YulIdentifier","src":"4321:3:25"},"nativeSrc":"4321:32:25","nodeType":"YulFunctionCall","src":"4321:32:25"},"nativeSrc":"4318:52:25","nodeType":"YulIf","src":"4318:52:25"},{"nativeSrc":"4379:39:25","nodeType":"YulAssignment","src":"4379:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4408:9:25","nodeType":"YulIdentifier","src":"4408:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4389:18:25","nodeType":"YulIdentifier","src":"4389:18:25"},"nativeSrc":"4389:29:25","nodeType":"YulFunctionCall","src":"4389:29:25"},"variableNames":[{"name":"value0","nativeSrc":"4379:6:25","nodeType":"YulIdentifier","src":"4379:6:25"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4238:186:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4274:9:25","nodeType":"YulTypedName","src":"4274:9:25","type":""},{"name":"dataEnd","nativeSrc":"4285:7:25","nodeType":"YulTypedName","src":"4285:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4297:6:25","nodeType":"YulTypedName","src":"4297:6:25","type":""}],"src":"4238:186:25"},{"body":{"nativeSrc":"4513:263:25","nodeType":"YulBlock","src":"4513:263:25","statements":[{"body":{"nativeSrc":"4559:16:25","nodeType":"YulBlock","src":"4559:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4568:1:25","nodeType":"YulLiteral","src":"4568:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4571:1:25","nodeType":"YulLiteral","src":"4571:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4561:6:25","nodeType":"YulIdentifier","src":"4561:6:25"},"nativeSrc":"4561:12:25","nodeType":"YulFunctionCall","src":"4561:12:25"},"nativeSrc":"4561:12:25","nodeType":"YulExpressionStatement","src":"4561:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4534:7:25","nodeType":"YulIdentifier","src":"4534:7:25"},{"name":"headStart","nativeSrc":"4543:9:25","nodeType":"YulIdentifier","src":"4543:9:25"}],"functionName":{"name":"sub","nativeSrc":"4530:3:25","nodeType":"YulIdentifier","src":"4530:3:25"},"nativeSrc":"4530:23:25","nodeType":"YulFunctionCall","src":"4530:23:25"},{"kind":"number","nativeSrc":"4555:2:25","nodeType":"YulLiteral","src":"4555:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4526:3:25","nodeType":"YulIdentifier","src":"4526:3:25"},"nativeSrc":"4526:32:25","nodeType":"YulFunctionCall","src":"4526:32:25"},"nativeSrc":"4523:52:25","nodeType":"YulIf","src":"4523:52:25"},{"nativeSrc":"4584:39:25","nodeType":"YulAssignment","src":"4584:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4613:9:25","nodeType":"YulIdentifier","src":"4613:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4594:18:25","nodeType":"YulIdentifier","src":"4594:18:25"},"nativeSrc":"4594:29:25","nodeType":"YulFunctionCall","src":"4594:29:25"},"variableNames":[{"name":"value0","nativeSrc":"4584:6:25","nodeType":"YulIdentifier","src":"4584:6:25"}]},{"nativeSrc":"4632:45:25","nodeType":"YulVariableDeclaration","src":"4632:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4662:9:25","nodeType":"YulIdentifier","src":"4662:9:25"},{"kind":"number","nativeSrc":"4673:2:25","nodeType":"YulLiteral","src":"4673:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4658:3:25","nodeType":"YulIdentifier","src":"4658:3:25"},"nativeSrc":"4658:18:25","nodeType":"YulFunctionCall","src":"4658:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"4645:12:25","nodeType":"YulIdentifier","src":"4645:12:25"},"nativeSrc":"4645:32:25","nodeType":"YulFunctionCall","src":"4645:32:25"},"variables":[{"name":"value","nativeSrc":"4636:5:25","nodeType":"YulTypedName","src":"4636:5:25","type":""}]},{"body":{"nativeSrc":"4730:16:25","nodeType":"YulBlock","src":"4730:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4739:1:25","nodeType":"YulLiteral","src":"4739:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4742:1:25","nodeType":"YulLiteral","src":"4742:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4732:6:25","nodeType":"YulIdentifier","src":"4732:6:25"},"nativeSrc":"4732:12:25","nodeType":"YulFunctionCall","src":"4732:12:25"},"nativeSrc":"4732:12:25","nodeType":"YulExpressionStatement","src":"4732:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4699:5:25","nodeType":"YulIdentifier","src":"4699:5:25"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4720:5:25","nodeType":"YulIdentifier","src":"4720:5:25"}],"functionName":{"name":"iszero","nativeSrc":"4713:6:25","nodeType":"YulIdentifier","src":"4713:6:25"},"nativeSrc":"4713:13:25","nodeType":"YulFunctionCall","src":"4713:13:25"}],"functionName":{"name":"iszero","nativeSrc":"4706:6:25","nodeType":"YulIdentifier","src":"4706:6:25"},"nativeSrc":"4706:21:25","nodeType":"YulFunctionCall","src":"4706:21:25"}],"functionName":{"name":"eq","nativeSrc":"4696:2:25","nodeType":"YulIdentifier","src":"4696:2:25"},"nativeSrc":"4696:32:25","nodeType":"YulFunctionCall","src":"4696:32:25"}],"functionName":{"name":"iszero","nativeSrc":"4689:6:25","nodeType":"YulIdentifier","src":"4689:6:25"},"nativeSrc":"4689:40:25","nodeType":"YulFunctionCall","src":"4689:40:25"},"nativeSrc":"4686:60:25","nodeType":"YulIf","src":"4686:60:25"},{"nativeSrc":"4755:15:25","nodeType":"YulAssignment","src":"4755:15:25","value":{"name":"value","nativeSrc":"4765:5:25","nodeType":"YulIdentifier","src":"4765:5:25"},"variableNames":[{"name":"value1","nativeSrc":"4755:6:25","nodeType":"YulIdentifier","src":"4755:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"4429:347:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4471:9:25","nodeType":"YulTypedName","src":"4471:9:25","type":""},{"name":"dataEnd","nativeSrc":"4482:7:25","nodeType":"YulTypedName","src":"4482:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4494:6:25","nodeType":"YulTypedName","src":"4494:6:25","type":""},{"name":"value1","nativeSrc":"4502:6:25","nodeType":"YulTypedName","src":"4502:6:25","type":""}],"src":"4429:347:25"},{"body":{"nativeSrc":"4911:583:25","nodeType":"YulBlock","src":"4911:583:25","statements":[{"body":{"nativeSrc":"4958:16:25","nodeType":"YulBlock","src":"4958:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4967:1:25","nodeType":"YulLiteral","src":"4967:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4970:1:25","nodeType":"YulLiteral","src":"4970:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4960:6:25","nodeType":"YulIdentifier","src":"4960:6:25"},"nativeSrc":"4960:12:25","nodeType":"YulFunctionCall","src":"4960:12:25"},"nativeSrc":"4960:12:25","nodeType":"YulExpressionStatement","src":"4960:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4932:7:25","nodeType":"YulIdentifier","src":"4932:7:25"},{"name":"headStart","nativeSrc":"4941:9:25","nodeType":"YulIdentifier","src":"4941:9:25"}],"functionName":{"name":"sub","nativeSrc":"4928:3:25","nodeType":"YulIdentifier","src":"4928:3:25"},"nativeSrc":"4928:23:25","nodeType":"YulFunctionCall","src":"4928:23:25"},{"kind":"number","nativeSrc":"4953:3:25","nodeType":"YulLiteral","src":"4953:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"4924:3:25","nodeType":"YulIdentifier","src":"4924:3:25"},"nativeSrc":"4924:33:25","nodeType":"YulFunctionCall","src":"4924:33:25"},"nativeSrc":"4921:53:25","nodeType":"YulIf","src":"4921:53:25"},{"nativeSrc":"4983:39:25","nodeType":"YulAssignment","src":"4983:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5012:9:25","nodeType":"YulIdentifier","src":"5012:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4993:18:25","nodeType":"YulIdentifier","src":"4993:18:25"},"nativeSrc":"4993:29:25","nodeType":"YulFunctionCall","src":"4993:29:25"},"variableNames":[{"name":"value0","nativeSrc":"4983:6:25","nodeType":"YulIdentifier","src":"4983:6:25"}]},{"nativeSrc":"5031:48:25","nodeType":"YulAssignment","src":"5031:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5064:9:25","nodeType":"YulIdentifier","src":"5064:9:25"},{"kind":"number","nativeSrc":"5075:2:25","nodeType":"YulLiteral","src":"5075:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5060:3:25","nodeType":"YulIdentifier","src":"5060:3:25"},"nativeSrc":"5060:18:25","nodeType":"YulFunctionCall","src":"5060:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5041:18:25","nodeType":"YulIdentifier","src":"5041:18:25"},"nativeSrc":"5041:38:25","nodeType":"YulFunctionCall","src":"5041:38:25"},"variableNames":[{"name":"value1","nativeSrc":"5031:6:25","nodeType":"YulIdentifier","src":"5031:6:25"}]},{"nativeSrc":"5088:14:25","nodeType":"YulVariableDeclaration","src":"5088:14:25","value":{"kind":"number","nativeSrc":"5101:1:25","nodeType":"YulLiteral","src":"5101:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5092:5:25","nodeType":"YulTypedName","src":"5092:5:25","type":""}]},{"nativeSrc":"5111:41:25","nodeType":"YulAssignment","src":"5111:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5137:9:25","nodeType":"YulIdentifier","src":"5137:9:25"},{"kind":"number","nativeSrc":"5148:2:25","nodeType":"YulLiteral","src":"5148:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5133:3:25","nodeType":"YulIdentifier","src":"5133:3:25"},"nativeSrc":"5133:18:25","nodeType":"YulFunctionCall","src":"5133:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"5120:12:25","nodeType":"YulIdentifier","src":"5120:12:25"},"nativeSrc":"5120:32:25","nodeType":"YulFunctionCall","src":"5120:32:25"},"variableNames":[{"name":"value","nativeSrc":"5111:5:25","nodeType":"YulIdentifier","src":"5111:5:25"}]},{"nativeSrc":"5161:15:25","nodeType":"YulAssignment","src":"5161:15:25","value":{"name":"value","nativeSrc":"5171:5:25","nodeType":"YulIdentifier","src":"5171:5:25"},"variableNames":[{"name":"value2","nativeSrc":"5161:6:25","nodeType":"YulIdentifier","src":"5161:6:25"}]},{"nativeSrc":"5185:46:25","nodeType":"YulVariableDeclaration","src":"5185:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5216:9:25","nodeType":"YulIdentifier","src":"5216:9:25"},{"kind":"number","nativeSrc":"5227:2:25","nodeType":"YulLiteral","src":"5227:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5212:3:25","nodeType":"YulIdentifier","src":"5212:3:25"},"nativeSrc":"5212:18:25","nodeType":"YulFunctionCall","src":"5212:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"5199:12:25","nodeType":"YulIdentifier","src":"5199:12:25"},"nativeSrc":"5199:32:25","nodeType":"YulFunctionCall","src":"5199:32:25"},"variables":[{"name":"offset","nativeSrc":"5189:6:25","nodeType":"YulTypedName","src":"5189:6:25","type":""}]},{"body":{"nativeSrc":"5274:16:25","nodeType":"YulBlock","src":"5274:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5283:1:25","nodeType":"YulLiteral","src":"5283:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5286:1:25","nodeType":"YulLiteral","src":"5286:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5276:6:25","nodeType":"YulIdentifier","src":"5276:6:25"},"nativeSrc":"5276:12:25","nodeType":"YulFunctionCall","src":"5276:12:25"},"nativeSrc":"5276:12:25","nodeType":"YulExpressionStatement","src":"5276:12:25"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5246:6:25","nodeType":"YulIdentifier","src":"5246:6:25"},{"kind":"number","nativeSrc":"5254:18:25","nodeType":"YulLiteral","src":"5254:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5243:2:25","nodeType":"YulIdentifier","src":"5243:2:25"},"nativeSrc":"5243:30:25","nodeType":"YulFunctionCall","src":"5243:30:25"},"nativeSrc":"5240:50:25","nodeType":"YulIf","src":"5240:50:25"},{"nativeSrc":"5299:32:25","nodeType":"YulVariableDeclaration","src":"5299:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5313:9:25","nodeType":"YulIdentifier","src":"5313:9:25"},{"name":"offset","nativeSrc":"5324:6:25","nodeType":"YulIdentifier","src":"5324:6:25"}],"functionName":{"name":"add","nativeSrc":"5309:3:25","nodeType":"YulIdentifier","src":"5309:3:25"},"nativeSrc":"5309:22:25","nodeType":"YulFunctionCall","src":"5309:22:25"},"variables":[{"name":"_1","nativeSrc":"5303:2:25","nodeType":"YulTypedName","src":"5303:2:25","type":""}]},{"body":{"nativeSrc":"5379:16:25","nodeType":"YulBlock","src":"5379:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5388:1:25","nodeType":"YulLiteral","src":"5388:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5391:1:25","nodeType":"YulLiteral","src":"5391:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5381:6:25","nodeType":"YulIdentifier","src":"5381:6:25"},"nativeSrc":"5381:12:25","nodeType":"YulFunctionCall","src":"5381:12:25"},"nativeSrc":"5381:12:25","nodeType":"YulExpressionStatement","src":"5381:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5358:2:25","nodeType":"YulIdentifier","src":"5358:2:25"},{"kind":"number","nativeSrc":"5362:4:25","nodeType":"YulLiteral","src":"5362:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5354:3:25","nodeType":"YulIdentifier","src":"5354:3:25"},"nativeSrc":"5354:13:25","nodeType":"YulFunctionCall","src":"5354:13:25"},{"name":"dataEnd","nativeSrc":"5369:7:25","nodeType":"YulIdentifier","src":"5369:7:25"}],"functionName":{"name":"slt","nativeSrc":"5350:3:25","nodeType":"YulIdentifier","src":"5350:3:25"},"nativeSrc":"5350:27:25","nodeType":"YulFunctionCall","src":"5350:27:25"}],"functionName":{"name":"iszero","nativeSrc":"5343:6:25","nodeType":"YulIdentifier","src":"5343:6:25"},"nativeSrc":"5343:35:25","nodeType":"YulFunctionCall","src":"5343:35:25"},"nativeSrc":"5340:55:25","nodeType":"YulIf","src":"5340:55:25"},{"nativeSrc":"5404:84:25","nodeType":"YulAssignment","src":"5404:84:25","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5453:2:25","nodeType":"YulIdentifier","src":"5453:2:25"},{"kind":"number","nativeSrc":"5457:2:25","nodeType":"YulLiteral","src":"5457:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5449:3:25","nodeType":"YulIdentifier","src":"5449:3:25"},"nativeSrc":"5449:11:25","nodeType":"YulFunctionCall","src":"5449:11:25"},{"arguments":[{"name":"_1","nativeSrc":"5475:2:25","nodeType":"YulIdentifier","src":"5475:2:25"}],"functionName":{"name":"calldataload","nativeSrc":"5462:12:25","nodeType":"YulIdentifier","src":"5462:12:25"},"nativeSrc":"5462:16:25","nodeType":"YulFunctionCall","src":"5462:16:25"},{"name":"dataEnd","nativeSrc":"5480:7:25","nodeType":"YulIdentifier","src":"5480:7:25"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"5414:34:25","nodeType":"YulIdentifier","src":"5414:34:25"},"nativeSrc":"5414:74:25","nodeType":"YulFunctionCall","src":"5414:74:25"},"variableNames":[{"name":"value3","nativeSrc":"5404:6:25","nodeType":"YulIdentifier","src":"5404:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"4781:713:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4853:9:25","nodeType":"YulTypedName","src":"4853:9:25","type":""},{"name":"dataEnd","nativeSrc":"4864:7:25","nodeType":"YulTypedName","src":"4864:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4876:6:25","nodeType":"YulTypedName","src":"4876:6:25","type":""},{"name":"value1","nativeSrc":"4884:6:25","nodeType":"YulTypedName","src":"4884:6:25","type":""},{"name":"value2","nativeSrc":"4892:6:25","nodeType":"YulTypedName","src":"4892:6:25","type":""},{"name":"value3","nativeSrc":"4900:6:25","nodeType":"YulTypedName","src":"4900:6:25","type":""}],"src":"4781:713:25"},{"body":{"nativeSrc":"5596:299:25","nodeType":"YulBlock","src":"5596:299:25","statements":[{"body":{"nativeSrc":"5642:16:25","nodeType":"YulBlock","src":"5642:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5651:1:25","nodeType":"YulLiteral","src":"5651:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5654:1:25","nodeType":"YulLiteral","src":"5654:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5644:6:25","nodeType":"YulIdentifier","src":"5644:6:25"},"nativeSrc":"5644:12:25","nodeType":"YulFunctionCall","src":"5644:12:25"},"nativeSrc":"5644:12:25","nodeType":"YulExpressionStatement","src":"5644:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5617:7:25","nodeType":"YulIdentifier","src":"5617:7:25"},{"name":"headStart","nativeSrc":"5626:9:25","nodeType":"YulIdentifier","src":"5626:9:25"}],"functionName":{"name":"sub","nativeSrc":"5613:3:25","nodeType":"YulIdentifier","src":"5613:3:25"},"nativeSrc":"5613:23:25","nodeType":"YulFunctionCall","src":"5613:23:25"},{"kind":"number","nativeSrc":"5638:2:25","nodeType":"YulLiteral","src":"5638:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5609:3:25","nodeType":"YulIdentifier","src":"5609:3:25"},"nativeSrc":"5609:32:25","nodeType":"YulFunctionCall","src":"5609:32:25"},"nativeSrc":"5606:52:25","nodeType":"YulIf","src":"5606:52:25"},{"nativeSrc":"5667:39:25","nodeType":"YulAssignment","src":"5667:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5696:9:25","nodeType":"YulIdentifier","src":"5696:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5677:18:25","nodeType":"YulIdentifier","src":"5677:18:25"},"nativeSrc":"5677:29:25","nodeType":"YulFunctionCall","src":"5677:29:25"},"variableNames":[{"name":"value0","nativeSrc":"5667:6:25","nodeType":"YulIdentifier","src":"5667:6:25"}]},{"nativeSrc":"5715:46:25","nodeType":"YulVariableDeclaration","src":"5715:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5746:9:25","nodeType":"YulIdentifier","src":"5746:9:25"},{"kind":"number","nativeSrc":"5757:2:25","nodeType":"YulLiteral","src":"5757:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5742:3:25","nodeType":"YulIdentifier","src":"5742:3:25"},"nativeSrc":"5742:18:25","nodeType":"YulFunctionCall","src":"5742:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"5729:12:25","nodeType":"YulIdentifier","src":"5729:12:25"},"nativeSrc":"5729:32:25","nodeType":"YulFunctionCall","src":"5729:32:25"},"variables":[{"name":"offset","nativeSrc":"5719:6:25","nodeType":"YulTypedName","src":"5719:6:25","type":""}]},{"body":{"nativeSrc":"5804:16:25","nodeType":"YulBlock","src":"5804:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5813:1:25","nodeType":"YulLiteral","src":"5813:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5816:1:25","nodeType":"YulLiteral","src":"5816:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5806:6:25","nodeType":"YulIdentifier","src":"5806:6:25"},"nativeSrc":"5806:12:25","nodeType":"YulFunctionCall","src":"5806:12:25"},"nativeSrc":"5806:12:25","nodeType":"YulExpressionStatement","src":"5806:12:25"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5776:6:25","nodeType":"YulIdentifier","src":"5776:6:25"},{"kind":"number","nativeSrc":"5784:18:25","nodeType":"YulLiteral","src":"5784:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5773:2:25","nodeType":"YulIdentifier","src":"5773:2:25"},"nativeSrc":"5773:30:25","nodeType":"YulFunctionCall","src":"5773:30:25"},"nativeSrc":"5770:50:25","nodeType":"YulIf","src":"5770:50:25"},{"nativeSrc":"5829:60:25","nodeType":"YulAssignment","src":"5829:60:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5861:9:25","nodeType":"YulIdentifier","src":"5861:9:25"},{"name":"offset","nativeSrc":"5872:6:25","nodeType":"YulIdentifier","src":"5872:6:25"}],"functionName":{"name":"add","nativeSrc":"5857:3:25","nodeType":"YulIdentifier","src":"5857:3:25"},"nativeSrc":"5857:22:25","nodeType":"YulFunctionCall","src":"5857:22:25"},{"name":"dataEnd","nativeSrc":"5881:7:25","nodeType":"YulIdentifier","src":"5881:7:25"}],"functionName":{"name":"abi_decode_string","nativeSrc":"5839:17:25","nodeType":"YulIdentifier","src":"5839:17:25"},"nativeSrc":"5839:50:25","nodeType":"YulFunctionCall","src":"5839:50:25"},"variableNames":[{"name":"value1","nativeSrc":"5829:6:25","nodeType":"YulIdentifier","src":"5829:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nativeSrc":"5499:396:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5554:9:25","nodeType":"YulTypedName","src":"5554:9:25","type":""},{"name":"dataEnd","nativeSrc":"5565:7:25","nodeType":"YulTypedName","src":"5565:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5577:6:25","nodeType":"YulTypedName","src":"5577:6:25","type":""},{"name":"value1","nativeSrc":"5585:6:25","nodeType":"YulTypedName","src":"5585:6:25","type":""}],"src":"5499:396:25"},{"body":{"nativeSrc":"5987:173:25","nodeType":"YulBlock","src":"5987:173:25","statements":[{"body":{"nativeSrc":"6033:16:25","nodeType":"YulBlock","src":"6033:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6042:1:25","nodeType":"YulLiteral","src":"6042:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6045:1:25","nodeType":"YulLiteral","src":"6045:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6035:6:25","nodeType":"YulIdentifier","src":"6035:6:25"},"nativeSrc":"6035:12:25","nodeType":"YulFunctionCall","src":"6035:12:25"},"nativeSrc":"6035:12:25","nodeType":"YulExpressionStatement","src":"6035:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6008:7:25","nodeType":"YulIdentifier","src":"6008:7:25"},{"name":"headStart","nativeSrc":"6017:9:25","nodeType":"YulIdentifier","src":"6017:9:25"}],"functionName":{"name":"sub","nativeSrc":"6004:3:25","nodeType":"YulIdentifier","src":"6004:3:25"},"nativeSrc":"6004:23:25","nodeType":"YulFunctionCall","src":"6004:23:25"},{"kind":"number","nativeSrc":"6029:2:25","nodeType":"YulLiteral","src":"6029:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6000:3:25","nodeType":"YulIdentifier","src":"6000:3:25"},"nativeSrc":"6000:32:25","nodeType":"YulFunctionCall","src":"6000:32:25"},"nativeSrc":"5997:52:25","nodeType":"YulIf","src":"5997:52:25"},{"nativeSrc":"6058:39:25","nodeType":"YulAssignment","src":"6058:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6087:9:25","nodeType":"YulIdentifier","src":"6087:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6068:18:25","nodeType":"YulIdentifier","src":"6068:18:25"},"nativeSrc":"6068:29:25","nodeType":"YulFunctionCall","src":"6068:29:25"},"variableNames":[{"name":"value0","nativeSrc":"6058:6:25","nodeType":"YulIdentifier","src":"6058:6:25"}]},{"nativeSrc":"6106:48:25","nodeType":"YulAssignment","src":"6106:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6139:9:25","nodeType":"YulIdentifier","src":"6139:9:25"},{"kind":"number","nativeSrc":"6150:2:25","nodeType":"YulLiteral","src":"6150:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6135:3:25","nodeType":"YulIdentifier","src":"6135:3:25"},"nativeSrc":"6135:18:25","nodeType":"YulFunctionCall","src":"6135:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6116:18:25","nodeType":"YulIdentifier","src":"6116:18:25"},"nativeSrc":"6116:38:25","nodeType":"YulFunctionCall","src":"6116:38:25"},"variableNames":[{"name":"value1","nativeSrc":"6106:6:25","nodeType":"YulIdentifier","src":"6106:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5900:260:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5945:9:25","nodeType":"YulTypedName","src":"5945:9:25","type":""},{"name":"dataEnd","nativeSrc":"5956:7:25","nodeType":"YulTypedName","src":"5956:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5968:6:25","nodeType":"YulTypedName","src":"5968:6:25","type":""},{"name":"value1","nativeSrc":"5976:6:25","nodeType":"YulTypedName","src":"5976:6:25","type":""}],"src":"5900:260:25"},{"body":{"nativeSrc":"6220:325:25","nodeType":"YulBlock","src":"6220:325:25","statements":[{"nativeSrc":"6230:22:25","nodeType":"YulAssignment","src":"6230:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"6244:1:25","nodeType":"YulLiteral","src":"6244:1:25","type":"","value":"1"},{"name":"data","nativeSrc":"6247:4:25","nodeType":"YulIdentifier","src":"6247:4:25"}],"functionName":{"name":"shr","nativeSrc":"6240:3:25","nodeType":"YulIdentifier","src":"6240:3:25"},"nativeSrc":"6240:12:25","nodeType":"YulFunctionCall","src":"6240:12:25"},"variableNames":[{"name":"length","nativeSrc":"6230:6:25","nodeType":"YulIdentifier","src":"6230:6:25"}]},{"nativeSrc":"6261:38:25","nodeType":"YulVariableDeclaration","src":"6261:38:25","value":{"arguments":[{"name":"data","nativeSrc":"6291:4:25","nodeType":"YulIdentifier","src":"6291:4:25"},{"kind":"number","nativeSrc":"6297:1:25","nodeType":"YulLiteral","src":"6297:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6287:3:25","nodeType":"YulIdentifier","src":"6287:3:25"},"nativeSrc":"6287:12:25","nodeType":"YulFunctionCall","src":"6287:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6265:18:25","nodeType":"YulTypedName","src":"6265:18:25","type":""}]},{"body":{"nativeSrc":"6338:31:25","nodeType":"YulBlock","src":"6338:31:25","statements":[{"nativeSrc":"6340:27:25","nodeType":"YulAssignment","src":"6340:27:25","value":{"arguments":[{"name":"length","nativeSrc":"6354:6:25","nodeType":"YulIdentifier","src":"6354:6:25"},{"kind":"number","nativeSrc":"6362:4:25","nodeType":"YulLiteral","src":"6362:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6350:3:25","nodeType":"YulIdentifier","src":"6350:3:25"},"nativeSrc":"6350:17:25","nodeType":"YulFunctionCall","src":"6350:17:25"},"variableNames":[{"name":"length","nativeSrc":"6340:6:25","nodeType":"YulIdentifier","src":"6340:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6318:18:25","nodeType":"YulIdentifier","src":"6318:18:25"}],"functionName":{"name":"iszero","nativeSrc":"6311:6:25","nodeType":"YulIdentifier","src":"6311:6:25"},"nativeSrc":"6311:26:25","nodeType":"YulFunctionCall","src":"6311:26:25"},"nativeSrc":"6308:61:25","nodeType":"YulIf","src":"6308:61:25"},{"body":{"nativeSrc":"6428:111:25","nodeType":"YulBlock","src":"6428:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6449:1:25","nodeType":"YulLiteral","src":"6449:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6456:3:25","nodeType":"YulLiteral","src":"6456:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"6461:10:25","nodeType":"YulLiteral","src":"6461:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6452:3:25","nodeType":"YulIdentifier","src":"6452:3:25"},"nativeSrc":"6452:20:25","nodeType":"YulFunctionCall","src":"6452:20:25"}],"functionName":{"name":"mstore","nativeSrc":"6442:6:25","nodeType":"YulIdentifier","src":"6442:6:25"},"nativeSrc":"6442:31:25","nodeType":"YulFunctionCall","src":"6442:31:25"},"nativeSrc":"6442:31:25","nodeType":"YulExpressionStatement","src":"6442:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6493:1:25","nodeType":"YulLiteral","src":"6493:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"6496:4:25","nodeType":"YulLiteral","src":"6496:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6486:6:25","nodeType":"YulIdentifier","src":"6486:6:25"},"nativeSrc":"6486:15:25","nodeType":"YulFunctionCall","src":"6486:15:25"},"nativeSrc":"6486:15:25","nodeType":"YulExpressionStatement","src":"6486:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6521:1:25","nodeType":"YulLiteral","src":"6521:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6524:4:25","nodeType":"YulLiteral","src":"6524:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6514:6:25","nodeType":"YulIdentifier","src":"6514:6:25"},"nativeSrc":"6514:15:25","nodeType":"YulFunctionCall","src":"6514:15:25"},"nativeSrc":"6514:15:25","nodeType":"YulExpressionStatement","src":"6514:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6384:18:25","nodeType":"YulIdentifier","src":"6384:18:25"},{"arguments":[{"name":"length","nativeSrc":"6407:6:25","nodeType":"YulIdentifier","src":"6407:6:25"},{"kind":"number","nativeSrc":"6415:2:25","nodeType":"YulLiteral","src":"6415:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6404:2:25","nodeType":"YulIdentifier","src":"6404:2:25"},"nativeSrc":"6404:14:25","nodeType":"YulFunctionCall","src":"6404:14:25"}],"functionName":{"name":"eq","nativeSrc":"6381:2:25","nodeType":"YulIdentifier","src":"6381:2:25"},"nativeSrc":"6381:38:25","nodeType":"YulFunctionCall","src":"6381:38:25"},"nativeSrc":"6378:161:25","nodeType":"YulIf","src":"6378:161:25"}]},"name":"extract_byte_array_length","nativeSrc":"6165:380:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6200:4:25","nodeType":"YulTypedName","src":"6200:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6209:6:25","nodeType":"YulTypedName","src":"6209:6:25","type":""}],"src":"6165:380:25"},{"body":{"nativeSrc":"6707:214:25","nodeType":"YulBlock","src":"6707:214:25","statements":[{"nativeSrc":"6717:26:25","nodeType":"YulAssignment","src":"6717:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6729:9:25","nodeType":"YulIdentifier","src":"6729:9:25"},{"kind":"number","nativeSrc":"6740:2:25","nodeType":"YulLiteral","src":"6740:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6725:3:25","nodeType":"YulIdentifier","src":"6725:3:25"},"nativeSrc":"6725:18:25","nodeType":"YulFunctionCall","src":"6725:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6717:4:25","nodeType":"YulIdentifier","src":"6717:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6759:9:25","nodeType":"YulIdentifier","src":"6759:9:25"},{"arguments":[{"name":"value0","nativeSrc":"6774:6:25","nodeType":"YulIdentifier","src":"6774:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6790:3:25","nodeType":"YulLiteral","src":"6790:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"6795:1:25","nodeType":"YulLiteral","src":"6795:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6786:3:25","nodeType":"YulIdentifier","src":"6786:3:25"},"nativeSrc":"6786:11:25","nodeType":"YulFunctionCall","src":"6786:11:25"},{"kind":"number","nativeSrc":"6799:1:25","nodeType":"YulLiteral","src":"6799:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6782:3:25","nodeType":"YulIdentifier","src":"6782:3:25"},"nativeSrc":"6782:19:25","nodeType":"YulFunctionCall","src":"6782:19:25"}],"functionName":{"name":"and","nativeSrc":"6770:3:25","nodeType":"YulIdentifier","src":"6770:3:25"},"nativeSrc":"6770:32:25","nodeType":"YulFunctionCall","src":"6770:32:25"}],"functionName":{"name":"mstore","nativeSrc":"6752:6:25","nodeType":"YulIdentifier","src":"6752:6:25"},"nativeSrc":"6752:51:25","nodeType":"YulFunctionCall","src":"6752:51:25"},"nativeSrc":"6752:51:25","nodeType":"YulExpressionStatement","src":"6752:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6823:9:25","nodeType":"YulIdentifier","src":"6823:9:25"},{"kind":"number","nativeSrc":"6834:2:25","nodeType":"YulLiteral","src":"6834:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6819:3:25","nodeType":"YulIdentifier","src":"6819:3:25"},"nativeSrc":"6819:18:25","nodeType":"YulFunctionCall","src":"6819:18:25"},{"name":"value1","nativeSrc":"6839:6:25","nodeType":"YulIdentifier","src":"6839:6:25"}],"functionName":{"name":"mstore","nativeSrc":"6812:6:25","nodeType":"YulIdentifier","src":"6812:6:25"},"nativeSrc":"6812:34:25","nodeType":"YulFunctionCall","src":"6812:34:25"},"nativeSrc":"6812:34:25","nodeType":"YulExpressionStatement","src":"6812:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6866:9:25","nodeType":"YulIdentifier","src":"6866:9:25"},{"kind":"number","nativeSrc":"6877:2:25","nodeType":"YulLiteral","src":"6877:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6862:3:25","nodeType":"YulIdentifier","src":"6862:3:25"},"nativeSrc":"6862:18:25","nodeType":"YulFunctionCall","src":"6862:18:25"},{"arguments":[{"name":"value2","nativeSrc":"6886:6:25","nodeType":"YulIdentifier","src":"6886:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6902:3:25","nodeType":"YulLiteral","src":"6902:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"6907:1:25","nodeType":"YulLiteral","src":"6907:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6898:3:25","nodeType":"YulIdentifier","src":"6898:3:25"},"nativeSrc":"6898:11:25","nodeType":"YulFunctionCall","src":"6898:11:25"},{"kind":"number","nativeSrc":"6911:1:25","nodeType":"YulLiteral","src":"6911:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6894:3:25","nodeType":"YulIdentifier","src":"6894:3:25"},"nativeSrc":"6894:19:25","nodeType":"YulFunctionCall","src":"6894:19:25"}],"functionName":{"name":"and","nativeSrc":"6882:3:25","nodeType":"YulIdentifier","src":"6882:3:25"},"nativeSrc":"6882:32:25","nodeType":"YulFunctionCall","src":"6882:32:25"}],"functionName":{"name":"mstore","nativeSrc":"6855:6:25","nodeType":"YulIdentifier","src":"6855:6:25"},"nativeSrc":"6855:60:25","nodeType":"YulFunctionCall","src":"6855:60:25"},"nativeSrc":"6855:60:25","nodeType":"YulExpressionStatement","src":"6855:60:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"6550:371:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6660:9:25","nodeType":"YulTypedName","src":"6660:9:25","type":""},{"name":"value2","nativeSrc":"6671:6:25","nodeType":"YulTypedName","src":"6671:6:25","type":""},{"name":"value1","nativeSrc":"6679:6:25","nodeType":"YulTypedName","src":"6679:6:25","type":""},{"name":"value0","nativeSrc":"6687:6:25","nodeType":"YulTypedName","src":"6687:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6698:4:25","nodeType":"YulTypedName","src":"6698:4:25","type":""}],"src":"6550:371:25"},{"body":{"nativeSrc":"7055:145:25","nodeType":"YulBlock","src":"7055:145:25","statements":[{"nativeSrc":"7065:26:25","nodeType":"YulAssignment","src":"7065:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7077:9:25","nodeType":"YulIdentifier","src":"7077:9:25"},{"kind":"number","nativeSrc":"7088:2:25","nodeType":"YulLiteral","src":"7088:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7073:3:25","nodeType":"YulIdentifier","src":"7073:3:25"},"nativeSrc":"7073:18:25","nodeType":"YulFunctionCall","src":"7073:18:25"},"variableNames":[{"name":"tail","nativeSrc":"7065:4:25","nodeType":"YulIdentifier","src":"7065:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7107:9:25","nodeType":"YulIdentifier","src":"7107:9:25"},{"arguments":[{"name":"value0","nativeSrc":"7122:6:25","nodeType":"YulIdentifier","src":"7122:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7138:3:25","nodeType":"YulLiteral","src":"7138:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"7143:1:25","nodeType":"YulLiteral","src":"7143:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7134:3:25","nodeType":"YulIdentifier","src":"7134:3:25"},"nativeSrc":"7134:11:25","nodeType":"YulFunctionCall","src":"7134:11:25"},{"kind":"number","nativeSrc":"7147:1:25","nodeType":"YulLiteral","src":"7147:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7130:3:25","nodeType":"YulIdentifier","src":"7130:3:25"},"nativeSrc":"7130:19:25","nodeType":"YulFunctionCall","src":"7130:19:25"}],"functionName":{"name":"and","nativeSrc":"7118:3:25","nodeType":"YulIdentifier","src":"7118:3:25"},"nativeSrc":"7118:32:25","nodeType":"YulFunctionCall","src":"7118:32:25"}],"functionName":{"name":"mstore","nativeSrc":"7100:6:25","nodeType":"YulIdentifier","src":"7100:6:25"},"nativeSrc":"7100:51:25","nodeType":"YulFunctionCall","src":"7100:51:25"},"nativeSrc":"7100:51:25","nodeType":"YulExpressionStatement","src":"7100:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7171:9:25","nodeType":"YulIdentifier","src":"7171:9:25"},{"kind":"number","nativeSrc":"7182:2:25","nodeType":"YulLiteral","src":"7182:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7167:3:25","nodeType":"YulIdentifier","src":"7167:3:25"},"nativeSrc":"7167:18:25","nodeType":"YulFunctionCall","src":"7167:18:25"},{"name":"value1","nativeSrc":"7187:6:25","nodeType":"YulIdentifier","src":"7187:6:25"}],"functionName":{"name":"mstore","nativeSrc":"7160:6:25","nodeType":"YulIdentifier","src":"7160:6:25"},"nativeSrc":"7160:34:25","nodeType":"YulFunctionCall","src":"7160:34:25"},"nativeSrc":"7160:34:25","nodeType":"YulExpressionStatement","src":"7160:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"6926:274:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7016:9:25","nodeType":"YulTypedName","src":"7016:9:25","type":""},{"name":"value1","nativeSrc":"7027:6:25","nodeType":"YulTypedName","src":"7027:6:25","type":""},{"name":"value0","nativeSrc":"7035:6:25","nodeType":"YulTypedName","src":"7035:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7046:4:25","nodeType":"YulTypedName","src":"7046:4:25","type":""}],"src":"6926:274:25"},{"body":{"nativeSrc":"7237:95:25","nodeType":"YulBlock","src":"7237:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7254:1:25","nodeType":"YulLiteral","src":"7254:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"7261:3:25","nodeType":"YulLiteral","src":"7261:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"7266:10:25","nodeType":"YulLiteral","src":"7266:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"7257:3:25","nodeType":"YulIdentifier","src":"7257:3:25"},"nativeSrc":"7257:20:25","nodeType":"YulFunctionCall","src":"7257:20:25"}],"functionName":{"name":"mstore","nativeSrc":"7247:6:25","nodeType":"YulIdentifier","src":"7247:6:25"},"nativeSrc":"7247:31:25","nodeType":"YulFunctionCall","src":"7247:31:25"},"nativeSrc":"7247:31:25","nodeType":"YulExpressionStatement","src":"7247:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7294:1:25","nodeType":"YulLiteral","src":"7294:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"7297:4:25","nodeType":"YulLiteral","src":"7297:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"7287:6:25","nodeType":"YulIdentifier","src":"7287:6:25"},"nativeSrc":"7287:15:25","nodeType":"YulFunctionCall","src":"7287:15:25"},"nativeSrc":"7287:15:25","nodeType":"YulExpressionStatement","src":"7287:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7318:1:25","nodeType":"YulLiteral","src":"7318:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7321:4:25","nodeType":"YulLiteral","src":"7321:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7311:6:25","nodeType":"YulIdentifier","src":"7311:6:25"},"nativeSrc":"7311:15:25","nodeType":"YulFunctionCall","src":"7311:15:25"},"nativeSrc":"7311:15:25","nodeType":"YulExpressionStatement","src":"7311:15:25"}]},"name":"panic_error_0x32","nativeSrc":"7205:127:25","nodeType":"YulFunctionDefinition","src":"7205:127:25"},{"body":{"nativeSrc":"7393:65:25","nodeType":"YulBlock","src":"7393:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7410:1:25","nodeType":"YulLiteral","src":"7410:1:25","type":"","value":"0"},{"name":"ptr","nativeSrc":"7413:3:25","nodeType":"YulIdentifier","src":"7413:3:25"}],"functionName":{"name":"mstore","nativeSrc":"7403:6:25","nodeType":"YulIdentifier","src":"7403:6:25"},"nativeSrc":"7403:14:25","nodeType":"YulFunctionCall","src":"7403:14:25"},"nativeSrc":"7403:14:25","nodeType":"YulExpressionStatement","src":"7403:14:25"},{"nativeSrc":"7426:26:25","nodeType":"YulAssignment","src":"7426:26:25","value":{"arguments":[{"kind":"number","nativeSrc":"7444:1:25","nodeType":"YulLiteral","src":"7444:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7447:4:25","nodeType":"YulLiteral","src":"7447:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7434:9:25","nodeType":"YulIdentifier","src":"7434:9:25"},"nativeSrc":"7434:18:25","nodeType":"YulFunctionCall","src":"7434:18:25"},"variableNames":[{"name":"data","nativeSrc":"7426:4:25","nodeType":"YulIdentifier","src":"7426:4:25"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"7337:121:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7376:3:25","nodeType":"YulTypedName","src":"7376:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"7384:4:25","nodeType":"YulTypedName","src":"7384:4:25","type":""}],"src":"7337:121:25"},{"body":{"nativeSrc":"7544:437:25","nodeType":"YulBlock","src":"7544:437:25","statements":[{"body":{"nativeSrc":"7577:398:25","nodeType":"YulBlock","src":"7577:398:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7598:1:25","nodeType":"YulLiteral","src":"7598:1:25","type":"","value":"0"},{"name":"array","nativeSrc":"7601:5:25","nodeType":"YulIdentifier","src":"7601:5:25"}],"functionName":{"name":"mstore","nativeSrc":"7591:6:25","nodeType":"YulIdentifier","src":"7591:6:25"},"nativeSrc":"7591:16:25","nodeType":"YulFunctionCall","src":"7591:16:25"},"nativeSrc":"7591:16:25","nodeType":"YulExpressionStatement","src":"7591:16:25"},{"nativeSrc":"7620:30:25","nodeType":"YulVariableDeclaration","src":"7620:30:25","value":{"arguments":[{"kind":"number","nativeSrc":"7642:1:25","nodeType":"YulLiteral","src":"7642:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7645:4:25","nodeType":"YulLiteral","src":"7645:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7632:9:25","nodeType":"YulIdentifier","src":"7632:9:25"},"nativeSrc":"7632:18:25","nodeType":"YulFunctionCall","src":"7632:18:25"},"variables":[{"name":"data","nativeSrc":"7624:4:25","nodeType":"YulTypedName","src":"7624:4:25","type":""}]},{"nativeSrc":"7663:57:25","nodeType":"YulVariableDeclaration","src":"7663:57:25","value":{"arguments":[{"name":"data","nativeSrc":"7686:4:25","nodeType":"YulIdentifier","src":"7686:4:25"},{"arguments":[{"kind":"number","nativeSrc":"7696:1:25","nodeType":"YulLiteral","src":"7696:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"7703:10:25","nodeType":"YulIdentifier","src":"7703:10:25"},{"kind":"number","nativeSrc":"7715:2:25","nodeType":"YulLiteral","src":"7715:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7699:3:25","nodeType":"YulIdentifier","src":"7699:3:25"},"nativeSrc":"7699:19:25","nodeType":"YulFunctionCall","src":"7699:19:25"}],"functionName":{"name":"shr","nativeSrc":"7692:3:25","nodeType":"YulIdentifier","src":"7692:3:25"},"nativeSrc":"7692:27:25","nodeType":"YulFunctionCall","src":"7692:27:25"}],"functionName":{"name":"add","nativeSrc":"7682:3:25","nodeType":"YulIdentifier","src":"7682:3:25"},"nativeSrc":"7682:38:25","nodeType":"YulFunctionCall","src":"7682:38:25"},"variables":[{"name":"deleteStart","nativeSrc":"7667:11:25","nodeType":"YulTypedName","src":"7667:11:25","type":""}]},{"body":{"nativeSrc":"7757:23:25","nodeType":"YulBlock","src":"7757:23:25","statements":[{"nativeSrc":"7759:19:25","nodeType":"YulAssignment","src":"7759:19:25","value":{"name":"data","nativeSrc":"7774:4:25","nodeType":"YulIdentifier","src":"7774:4:25"},"variableNames":[{"name":"deleteStart","nativeSrc":"7759:11:25","nodeType":"YulIdentifier","src":"7759:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"7739:10:25","nodeType":"YulIdentifier","src":"7739:10:25"},{"kind":"number","nativeSrc":"7751:4:25","nodeType":"YulLiteral","src":"7751:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"7736:2:25","nodeType":"YulIdentifier","src":"7736:2:25"},"nativeSrc":"7736:20:25","nodeType":"YulFunctionCall","src":"7736:20:25"},"nativeSrc":"7733:47:25","nodeType":"YulIf","src":"7733:47:25"},{"nativeSrc":"7793:41:25","nodeType":"YulVariableDeclaration","src":"7793:41:25","value":{"arguments":[{"name":"data","nativeSrc":"7807:4:25","nodeType":"YulIdentifier","src":"7807:4:25"},{"arguments":[{"kind":"number","nativeSrc":"7817:1:25","nodeType":"YulLiteral","src":"7817:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"7824:3:25","nodeType":"YulIdentifier","src":"7824:3:25"},{"kind":"number","nativeSrc":"7829:2:25","nodeType":"YulLiteral","src":"7829:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7820:3:25","nodeType":"YulIdentifier","src":"7820:3:25"},"nativeSrc":"7820:12:25","nodeType":"YulFunctionCall","src":"7820:12:25"}],"functionName":{"name":"shr","nativeSrc":"7813:3:25","nodeType":"YulIdentifier","src":"7813:3:25"},"nativeSrc":"7813:20:25","nodeType":"YulFunctionCall","src":"7813:20:25"}],"functionName":{"name":"add","nativeSrc":"7803:3:25","nodeType":"YulIdentifier","src":"7803:3:25"},"nativeSrc":"7803:31:25","nodeType":"YulFunctionCall","src":"7803:31:25"},"variables":[{"name":"_1","nativeSrc":"7797:2:25","nodeType":"YulTypedName","src":"7797:2:25","type":""}]},{"nativeSrc":"7847:24:25","nodeType":"YulVariableDeclaration","src":"7847:24:25","value":{"name":"deleteStart","nativeSrc":"7860:11:25","nodeType":"YulIdentifier","src":"7860:11:25"},"variables":[{"name":"start","nativeSrc":"7851:5:25","nodeType":"YulTypedName","src":"7851:5:25","type":""}]},{"body":{"nativeSrc":"7945:20:25","nodeType":"YulBlock","src":"7945:20:25","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"7954:5:25","nodeType":"YulIdentifier","src":"7954:5:25"},{"kind":"number","nativeSrc":"7961:1:25","nodeType":"YulLiteral","src":"7961:1:25","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"7947:6:25","nodeType":"YulIdentifier","src":"7947:6:25"},"nativeSrc":"7947:16:25","nodeType":"YulFunctionCall","src":"7947:16:25"},"nativeSrc":"7947:16:25","nodeType":"YulExpressionStatement","src":"7947:16:25"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"7895:5:25","nodeType":"YulIdentifier","src":"7895:5:25"},{"name":"_1","nativeSrc":"7902:2:25","nodeType":"YulIdentifier","src":"7902:2:25"}],"functionName":{"name":"lt","nativeSrc":"7892:2:25","nodeType":"YulIdentifier","src":"7892:2:25"},"nativeSrc":"7892:13:25","nodeType":"YulFunctionCall","src":"7892:13:25"},"nativeSrc":"7884:81:25","nodeType":"YulForLoop","post":{"nativeSrc":"7906:26:25","nodeType":"YulBlock","src":"7906:26:25","statements":[{"nativeSrc":"7908:22:25","nodeType":"YulAssignment","src":"7908:22:25","value":{"arguments":[{"name":"start","nativeSrc":"7921:5:25","nodeType":"YulIdentifier","src":"7921:5:25"},{"kind":"number","nativeSrc":"7928:1:25","nodeType":"YulLiteral","src":"7928:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7917:3:25","nodeType":"YulIdentifier","src":"7917:3:25"},"nativeSrc":"7917:13:25","nodeType":"YulFunctionCall","src":"7917:13:25"},"variableNames":[{"name":"start","nativeSrc":"7908:5:25","nodeType":"YulIdentifier","src":"7908:5:25"}]}]},"pre":{"nativeSrc":"7888:3:25","nodeType":"YulBlock","src":"7888:3:25","statements":[]},"src":"7884:81:25"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"7560:3:25","nodeType":"YulIdentifier","src":"7560:3:25"},{"kind":"number","nativeSrc":"7565:2:25","nodeType":"YulLiteral","src":"7565:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7557:2:25","nodeType":"YulIdentifier","src":"7557:2:25"},"nativeSrc":"7557:11:25","nodeType":"YulFunctionCall","src":"7557:11:25"},"nativeSrc":"7554:421:25","nodeType":"YulIf","src":"7554:421:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"7463:518:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7516:5:25","nodeType":"YulTypedName","src":"7516:5:25","type":""},{"name":"len","nativeSrc":"7523:3:25","nodeType":"YulTypedName","src":"7523:3:25","type":""},{"name":"startIndex","nativeSrc":"7528:10:25","nodeType":"YulTypedName","src":"7528:10:25","type":""}],"src":"7463:518:25"},{"body":{"nativeSrc":"8071:81:25","nodeType":"YulBlock","src":"8071:81:25","statements":[{"nativeSrc":"8081:65:25","nodeType":"YulAssignment","src":"8081:65:25","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"8096:4:25","nodeType":"YulIdentifier","src":"8096:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8114:1:25","nodeType":"YulLiteral","src":"8114:1:25","type":"","value":"3"},{"name":"len","nativeSrc":"8117:3:25","nodeType":"YulIdentifier","src":"8117:3:25"}],"functionName":{"name":"shl","nativeSrc":"8110:3:25","nodeType":"YulIdentifier","src":"8110:3:25"},"nativeSrc":"8110:11:25","nodeType":"YulFunctionCall","src":"8110:11:25"},{"arguments":[{"kind":"number","nativeSrc":"8127:1:25","nodeType":"YulLiteral","src":"8127:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"8123:3:25","nodeType":"YulIdentifier","src":"8123:3:25"},"nativeSrc":"8123:6:25","nodeType":"YulFunctionCall","src":"8123:6:25"}],"functionName":{"name":"shr","nativeSrc":"8106:3:25","nodeType":"YulIdentifier","src":"8106:3:25"},"nativeSrc":"8106:24:25","nodeType":"YulFunctionCall","src":"8106:24:25"}],"functionName":{"name":"not","nativeSrc":"8102:3:25","nodeType":"YulIdentifier","src":"8102:3:25"},"nativeSrc":"8102:29:25","nodeType":"YulFunctionCall","src":"8102:29:25"}],"functionName":{"name":"and","nativeSrc":"8092:3:25","nodeType":"YulIdentifier","src":"8092:3:25"},"nativeSrc":"8092:40:25","nodeType":"YulFunctionCall","src":"8092:40:25"},{"arguments":[{"kind":"number","nativeSrc":"8138:1:25","nodeType":"YulLiteral","src":"8138:1:25","type":"","value":"1"},{"name":"len","nativeSrc":"8141:3:25","nodeType":"YulIdentifier","src":"8141:3:25"}],"functionName":{"name":"shl","nativeSrc":"8134:3:25","nodeType":"YulIdentifier","src":"8134:3:25"},"nativeSrc":"8134:11:25","nodeType":"YulFunctionCall","src":"8134:11:25"}],"functionName":{"name":"or","nativeSrc":"8089:2:25","nodeType":"YulIdentifier","src":"8089:2:25"},"nativeSrc":"8089:57:25","nodeType":"YulFunctionCall","src":"8089:57:25"},"variableNames":[{"name":"used","nativeSrc":"8081:4:25","nodeType":"YulIdentifier","src":"8081:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"7986:166:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8048:4:25","nodeType":"YulTypedName","src":"8048:4:25","type":""},{"name":"len","nativeSrc":"8054:3:25","nodeType":"YulTypedName","src":"8054:3:25","type":""}],"returnVariables":[{"name":"used","nativeSrc":"8062:4:25","nodeType":"YulTypedName","src":"8062:4:25","type":""}],"src":"7986:166:25"},{"body":{"nativeSrc":"8253:1203:25","nodeType":"YulBlock","src":"8253:1203:25","statements":[{"nativeSrc":"8263:24:25","nodeType":"YulVariableDeclaration","src":"8263:24:25","value":{"arguments":[{"name":"src","nativeSrc":"8283:3:25","nodeType":"YulIdentifier","src":"8283:3:25"}],"functionName":{"name":"mload","nativeSrc":"8277:5:25","nodeType":"YulIdentifier","src":"8277:5:25"},"nativeSrc":"8277:10:25","nodeType":"YulFunctionCall","src":"8277:10:25"},"variables":[{"name":"newLen","nativeSrc":"8267:6:25","nodeType":"YulTypedName","src":"8267:6:25","type":""}]},{"body":{"nativeSrc":"8330:22:25","nodeType":"YulBlock","src":"8330:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"8332:16:25","nodeType":"YulIdentifier","src":"8332:16:25"},"nativeSrc":"8332:18:25","nodeType":"YulFunctionCall","src":"8332:18:25"},"nativeSrc":"8332:18:25","nodeType":"YulExpressionStatement","src":"8332:18:25"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"8302:6:25","nodeType":"YulIdentifier","src":"8302:6:25"},{"kind":"number","nativeSrc":"8310:18:25","nodeType":"YulLiteral","src":"8310:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8299:2:25","nodeType":"YulIdentifier","src":"8299:2:25"},"nativeSrc":"8299:30:25","nodeType":"YulFunctionCall","src":"8299:30:25"},"nativeSrc":"8296:56:25","nodeType":"YulIf","src":"8296:56:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8405:4:25","nodeType":"YulIdentifier","src":"8405:4:25"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"8443:4:25","nodeType":"YulIdentifier","src":"8443:4:25"}],"functionName":{"name":"sload","nativeSrc":"8437:5:25","nodeType":"YulIdentifier","src":"8437:5:25"},"nativeSrc":"8437:11:25","nodeType":"YulFunctionCall","src":"8437:11:25"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"8411:25:25","nodeType":"YulIdentifier","src":"8411:25:25"},"nativeSrc":"8411:38:25","nodeType":"YulFunctionCall","src":"8411:38:25"},{"name":"newLen","nativeSrc":"8451:6:25","nodeType":"YulIdentifier","src":"8451:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"8361:43:25","nodeType":"YulIdentifier","src":"8361:43:25"},"nativeSrc":"8361:97:25","nodeType":"YulFunctionCall","src":"8361:97:25"},"nativeSrc":"8361:97:25","nodeType":"YulExpressionStatement","src":"8361:97:25"},{"nativeSrc":"8467:18:25","nodeType":"YulVariableDeclaration","src":"8467:18:25","value":{"kind":"number","nativeSrc":"8484:1:25","nodeType":"YulLiteral","src":"8484:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"8471:9:25","nodeType":"YulTypedName","src":"8471:9:25","type":""}]},{"nativeSrc":"8494:17:25","nodeType":"YulAssignment","src":"8494:17:25","value":{"kind":"number","nativeSrc":"8507:4:25","nodeType":"YulLiteral","src":"8507:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"8494:9:25","nodeType":"YulIdentifier","src":"8494:9:25"}]},{"cases":[{"body":{"nativeSrc":"8557:642:25","nodeType":"YulBlock","src":"8557:642:25","statements":[{"nativeSrc":"8571:35:25","nodeType":"YulVariableDeclaration","src":"8571:35:25","value":{"arguments":[{"name":"newLen","nativeSrc":"8590:6:25","nodeType":"YulIdentifier","src":"8590:6:25"},{"arguments":[{"kind":"number","nativeSrc":"8602:2:25","nodeType":"YulLiteral","src":"8602:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"8598:3:25","nodeType":"YulIdentifier","src":"8598:3:25"},"nativeSrc":"8598:7:25","nodeType":"YulFunctionCall","src":"8598:7:25"}],"functionName":{"name":"and","nativeSrc":"8586:3:25","nodeType":"YulIdentifier","src":"8586:3:25"},"nativeSrc":"8586:20:25","nodeType":"YulFunctionCall","src":"8586:20:25"},"variables":[{"name":"loopEnd","nativeSrc":"8575:7:25","nodeType":"YulTypedName","src":"8575:7:25","type":""}]},{"nativeSrc":"8619:49:25","nodeType":"YulVariableDeclaration","src":"8619:49:25","value":{"arguments":[{"name":"slot","nativeSrc":"8663:4:25","nodeType":"YulIdentifier","src":"8663:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"8633:29:25","nodeType":"YulIdentifier","src":"8633:29:25"},"nativeSrc":"8633:35:25","nodeType":"YulFunctionCall","src":"8633:35:25"},"variables":[{"name":"dstPtr","nativeSrc":"8623:6:25","nodeType":"YulTypedName","src":"8623:6:25","type":""}]},{"nativeSrc":"8681:10:25","nodeType":"YulVariableDeclaration","src":"8681:10:25","value":{"kind":"number","nativeSrc":"8690:1:25","nodeType":"YulLiteral","src":"8690:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8685:1:25","nodeType":"YulTypedName","src":"8685:1:25","type":""}]},{"body":{"nativeSrc":"8761:165:25","nodeType":"YulBlock","src":"8761:165:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8786:6:25","nodeType":"YulIdentifier","src":"8786:6:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8804:3:25","nodeType":"YulIdentifier","src":"8804:3:25"},{"name":"srcOffset","nativeSrc":"8809:9:25","nodeType":"YulIdentifier","src":"8809:9:25"}],"functionName":{"name":"add","nativeSrc":"8800:3:25","nodeType":"YulIdentifier","src":"8800:3:25"},"nativeSrc":"8800:19:25","nodeType":"YulFunctionCall","src":"8800:19:25"}],"functionName":{"name":"mload","nativeSrc":"8794:5:25","nodeType":"YulIdentifier","src":"8794:5:25"},"nativeSrc":"8794:26:25","nodeType":"YulFunctionCall","src":"8794:26:25"}],"functionName":{"name":"sstore","nativeSrc":"8779:6:25","nodeType":"YulIdentifier","src":"8779:6:25"},"nativeSrc":"8779:42:25","nodeType":"YulFunctionCall","src":"8779:42:25"},"nativeSrc":"8779:42:25","nodeType":"YulExpressionStatement","src":"8779:42:25"},{"nativeSrc":"8838:24:25","nodeType":"YulAssignment","src":"8838:24:25","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8852:6:25","nodeType":"YulIdentifier","src":"8852:6:25"},{"kind":"number","nativeSrc":"8860:1:25","nodeType":"YulLiteral","src":"8860:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8848:3:25","nodeType":"YulIdentifier","src":"8848:3:25"},"nativeSrc":"8848:14:25","nodeType":"YulFunctionCall","src":"8848:14:25"},"variableNames":[{"name":"dstPtr","nativeSrc":"8838:6:25","nodeType":"YulIdentifier","src":"8838:6:25"}]},{"nativeSrc":"8879:33:25","nodeType":"YulAssignment","src":"8879:33:25","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8896:9:25","nodeType":"YulIdentifier","src":"8896:9:25"},{"kind":"number","nativeSrc":"8907:4:25","nodeType":"YulLiteral","src":"8907:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8892:3:25","nodeType":"YulIdentifier","src":"8892:3:25"},"nativeSrc":"8892:20:25","nodeType":"YulFunctionCall","src":"8892:20:25"},"variableNames":[{"name":"srcOffset","nativeSrc":"8879:9:25","nodeType":"YulIdentifier","src":"8879:9:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8715:1:25","nodeType":"YulIdentifier","src":"8715:1:25"},{"name":"loopEnd","nativeSrc":"8718:7:25","nodeType":"YulIdentifier","src":"8718:7:25"}],"functionName":{"name":"lt","nativeSrc":"8712:2:25","nodeType":"YulIdentifier","src":"8712:2:25"},"nativeSrc":"8712:14:25","nodeType":"YulFunctionCall","src":"8712:14:25"},"nativeSrc":"8704:222:25","nodeType":"YulForLoop","post":{"nativeSrc":"8727:21:25","nodeType":"YulBlock","src":"8727:21:25","statements":[{"nativeSrc":"8729:17:25","nodeType":"YulAssignment","src":"8729:17:25","value":{"arguments":[{"name":"i","nativeSrc":"8738:1:25","nodeType":"YulIdentifier","src":"8738:1:25"},{"kind":"number","nativeSrc":"8741:4:25","nodeType":"YulLiteral","src":"8741:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8734:3:25","nodeType":"YulIdentifier","src":"8734:3:25"},"nativeSrc":"8734:12:25","nodeType":"YulFunctionCall","src":"8734:12:25"},"variableNames":[{"name":"i","nativeSrc":"8729:1:25","nodeType":"YulIdentifier","src":"8729:1:25"}]}]},"pre":{"nativeSrc":"8708:3:25","nodeType":"YulBlock","src":"8708:3:25","statements":[]},"src":"8704:222:25"},{"body":{"nativeSrc":"8974:166:25","nodeType":"YulBlock","src":"8974:166:25","statements":[{"nativeSrc":"8992:43:25","nodeType":"YulVariableDeclaration","src":"8992:43:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9019:3:25","nodeType":"YulIdentifier","src":"9019:3:25"},{"name":"srcOffset","nativeSrc":"9024:9:25","nodeType":"YulIdentifier","src":"9024:9:25"}],"functionName":{"name":"add","nativeSrc":"9015:3:25","nodeType":"YulIdentifier","src":"9015:3:25"},"nativeSrc":"9015:19:25","nodeType":"YulFunctionCall","src":"9015:19:25"}],"functionName":{"name":"mload","nativeSrc":"9009:5:25","nodeType":"YulIdentifier","src":"9009:5:25"},"nativeSrc":"9009:26:25","nodeType":"YulFunctionCall","src":"9009:26:25"},"variables":[{"name":"lastValue","nativeSrc":"8996:9:25","nodeType":"YulTypedName","src":"8996:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"9059:6:25","nodeType":"YulIdentifier","src":"9059:6:25"},{"arguments":[{"name":"lastValue","nativeSrc":"9071:9:25","nodeType":"YulIdentifier","src":"9071:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9098:1:25","nodeType":"YulLiteral","src":"9098:1:25","type":"","value":"3"},{"name":"newLen","nativeSrc":"9101:6:25","nodeType":"YulIdentifier","src":"9101:6:25"}],"functionName":{"name":"shl","nativeSrc":"9094:3:25","nodeType":"YulIdentifier","src":"9094:3:25"},"nativeSrc":"9094:14:25","nodeType":"YulFunctionCall","src":"9094:14:25"},{"kind":"number","nativeSrc":"9110:3:25","nodeType":"YulLiteral","src":"9110:3:25","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"9090:3:25","nodeType":"YulIdentifier","src":"9090:3:25"},"nativeSrc":"9090:24:25","nodeType":"YulFunctionCall","src":"9090:24:25"},{"arguments":[{"kind":"number","nativeSrc":"9120:1:25","nodeType":"YulLiteral","src":"9120:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"9116:3:25","nodeType":"YulIdentifier","src":"9116:3:25"},"nativeSrc":"9116:6:25","nodeType":"YulFunctionCall","src":"9116:6:25"}],"functionName":{"name":"shr","nativeSrc":"9086:3:25","nodeType":"YulIdentifier","src":"9086:3:25"},"nativeSrc":"9086:37:25","nodeType":"YulFunctionCall","src":"9086:37:25"}],"functionName":{"name":"not","nativeSrc":"9082:3:25","nodeType":"YulIdentifier","src":"9082:3:25"},"nativeSrc":"9082:42:25","nodeType":"YulFunctionCall","src":"9082:42:25"}],"functionName":{"name":"and","nativeSrc":"9067:3:25","nodeType":"YulIdentifier","src":"9067:3:25"},"nativeSrc":"9067:58:25","nodeType":"YulFunctionCall","src":"9067:58:25"}],"functionName":{"name":"sstore","nativeSrc":"9052:6:25","nodeType":"YulIdentifier","src":"9052:6:25"},"nativeSrc":"9052:74:25","nodeType":"YulFunctionCall","src":"9052:74:25"},"nativeSrc":"9052:74:25","nodeType":"YulExpressionStatement","src":"9052:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8945:7:25","nodeType":"YulIdentifier","src":"8945:7:25"},{"name":"newLen","nativeSrc":"8954:6:25","nodeType":"YulIdentifier","src":"8954:6:25"}],"functionName":{"name":"lt","nativeSrc":"8942:2:25","nodeType":"YulIdentifier","src":"8942:2:25"},"nativeSrc":"8942:19:25","nodeType":"YulFunctionCall","src":"8942:19:25"},"nativeSrc":"8939:201:25","nodeType":"YulIf","src":"8939:201:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9160:4:25","nodeType":"YulIdentifier","src":"9160:4:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9174:1:25","nodeType":"YulLiteral","src":"9174:1:25","type":"","value":"1"},{"name":"newLen","nativeSrc":"9177:6:25","nodeType":"YulIdentifier","src":"9177:6:25"}],"functionName":{"name":"shl","nativeSrc":"9170:3:25","nodeType":"YulIdentifier","src":"9170:3:25"},"nativeSrc":"9170:14:25","nodeType":"YulFunctionCall","src":"9170:14:25"},{"kind":"number","nativeSrc":"9186:1:25","nodeType":"YulLiteral","src":"9186:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9166:3:25","nodeType":"YulIdentifier","src":"9166:3:25"},"nativeSrc":"9166:22:25","nodeType":"YulFunctionCall","src":"9166:22:25"}],"functionName":{"name":"sstore","nativeSrc":"9153:6:25","nodeType":"YulIdentifier","src":"9153:6:25"},"nativeSrc":"9153:36:25","nodeType":"YulFunctionCall","src":"9153:36:25"},"nativeSrc":"9153:36:25","nodeType":"YulExpressionStatement","src":"9153:36:25"}]},"nativeSrc":"8550:649:25","nodeType":"YulCase","src":"8550:649:25","value":{"kind":"number","nativeSrc":"8555:1:25","nodeType":"YulLiteral","src":"8555:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"9216:234:25","nodeType":"YulBlock","src":"9216:234:25","statements":[{"nativeSrc":"9230:14:25","nodeType":"YulVariableDeclaration","src":"9230:14:25","value":{"kind":"number","nativeSrc":"9243:1:25","nodeType":"YulLiteral","src":"9243:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"9234:5:25","nodeType":"YulTypedName","src":"9234:5:25","type":""}]},{"body":{"nativeSrc":"9279:67:25","nodeType":"YulBlock","src":"9279:67:25","statements":[{"nativeSrc":"9297:35:25","nodeType":"YulAssignment","src":"9297:35:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9316:3:25","nodeType":"YulIdentifier","src":"9316:3:25"},{"name":"srcOffset","nativeSrc":"9321:9:25","nodeType":"YulIdentifier","src":"9321:9:25"}],"functionName":{"name":"add","nativeSrc":"9312:3:25","nodeType":"YulIdentifier","src":"9312:3:25"},"nativeSrc":"9312:19:25","nodeType":"YulFunctionCall","src":"9312:19:25"}],"functionName":{"name":"mload","nativeSrc":"9306:5:25","nodeType":"YulIdentifier","src":"9306:5:25"},"nativeSrc":"9306:26:25","nodeType":"YulFunctionCall","src":"9306:26:25"},"variableNames":[{"name":"value","nativeSrc":"9297:5:25","nodeType":"YulIdentifier","src":"9297:5:25"}]}]},"condition":{"name":"newLen","nativeSrc":"9260:6:25","nodeType":"YulIdentifier","src":"9260:6:25"},"nativeSrc":"9257:89:25","nodeType":"YulIf","src":"9257:89:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9366:4:25","nodeType":"YulIdentifier","src":"9366:4:25"},{"arguments":[{"name":"value","nativeSrc":"9425:5:25","nodeType":"YulIdentifier","src":"9425:5:25"},{"name":"newLen","nativeSrc":"9432:6:25","nodeType":"YulIdentifier","src":"9432:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"9372:52:25","nodeType":"YulIdentifier","src":"9372:52:25"},"nativeSrc":"9372:67:25","nodeType":"YulFunctionCall","src":"9372:67:25"}],"functionName":{"name":"sstore","nativeSrc":"9359:6:25","nodeType":"YulIdentifier","src":"9359:6:25"},"nativeSrc":"9359:81:25","nodeType":"YulFunctionCall","src":"9359:81:25"},"nativeSrc":"9359:81:25","nodeType":"YulExpressionStatement","src":"9359:81:25"}]},"nativeSrc":"9208:242:25","nodeType":"YulCase","src":"9208:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"8530:6:25","nodeType":"YulIdentifier","src":"8530:6:25"},{"kind":"number","nativeSrc":"8538:2:25","nodeType":"YulLiteral","src":"8538:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"8527:2:25","nodeType":"YulIdentifier","src":"8527:2:25"},"nativeSrc":"8527:14:25","nodeType":"YulFunctionCall","src":"8527:14:25"},"nativeSrc":"8520:930:25","nodeType":"YulSwitch","src":"8520:930:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"8157:1299:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"8238:4:25","nodeType":"YulTypedName","src":"8238:4:25","type":""},{"name":"src","nativeSrc":"8244:3:25","nodeType":"YulTypedName","src":"8244:3:25","type":""}],"src":"8157:1299:25"},{"body":{"nativeSrc":"9493:95:25","nodeType":"YulBlock","src":"9493:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9510:1:25","nodeType":"YulLiteral","src":"9510:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9517:3:25","nodeType":"YulLiteral","src":"9517:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"9522:10:25","nodeType":"YulLiteral","src":"9522:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9513:3:25","nodeType":"YulIdentifier","src":"9513:3:25"},"nativeSrc":"9513:20:25","nodeType":"YulFunctionCall","src":"9513:20:25"}],"functionName":{"name":"mstore","nativeSrc":"9503:6:25","nodeType":"YulIdentifier","src":"9503:6:25"},"nativeSrc":"9503:31:25","nodeType":"YulFunctionCall","src":"9503:31:25"},"nativeSrc":"9503:31:25","nodeType":"YulExpressionStatement","src":"9503:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9550:1:25","nodeType":"YulLiteral","src":"9550:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"9553:4:25","nodeType":"YulLiteral","src":"9553:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9543:6:25","nodeType":"YulIdentifier","src":"9543:6:25"},"nativeSrc":"9543:15:25","nodeType":"YulFunctionCall","src":"9543:15:25"},"nativeSrc":"9543:15:25","nodeType":"YulExpressionStatement","src":"9543:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9574:1:25","nodeType":"YulLiteral","src":"9574:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"9577:4:25","nodeType":"YulLiteral","src":"9577:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9567:6:25","nodeType":"YulIdentifier","src":"9567:6:25"},"nativeSrc":"9567:15:25","nodeType":"YulFunctionCall","src":"9567:15:25"},"nativeSrc":"9567:15:25","nodeType":"YulExpressionStatement","src":"9567:15:25"}]},"name":"panic_error_0x11","nativeSrc":"9461:127:25","nodeType":"YulFunctionDefinition","src":"9461:127:25"},{"body":{"nativeSrc":"9640:88:25","nodeType":"YulBlock","src":"9640:88:25","statements":[{"body":{"nativeSrc":"9671:22:25","nodeType":"YulBlock","src":"9671:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9673:16:25","nodeType":"YulIdentifier","src":"9673:16:25"},"nativeSrc":"9673:18:25","nodeType":"YulFunctionCall","src":"9673:18:25"},"nativeSrc":"9673:18:25","nodeType":"YulExpressionStatement","src":"9673:18:25"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"9656:5:25","nodeType":"YulIdentifier","src":"9656:5:25"},{"arguments":[{"kind":"number","nativeSrc":"9667:1:25","nodeType":"YulLiteral","src":"9667:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"9663:3:25","nodeType":"YulIdentifier","src":"9663:3:25"},"nativeSrc":"9663:6:25","nodeType":"YulFunctionCall","src":"9663:6:25"}],"functionName":{"name":"eq","nativeSrc":"9653:2:25","nodeType":"YulIdentifier","src":"9653:2:25"},"nativeSrc":"9653:17:25","nodeType":"YulFunctionCall","src":"9653:17:25"},"nativeSrc":"9650:43:25","nodeType":"YulIf","src":"9650:43:25"},{"nativeSrc":"9702:20:25","nodeType":"YulAssignment","src":"9702:20:25","value":{"arguments":[{"name":"value","nativeSrc":"9713:5:25","nodeType":"YulIdentifier","src":"9713:5:25"},{"kind":"number","nativeSrc":"9720:1:25","nodeType":"YulLiteral","src":"9720:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9709:3:25","nodeType":"YulIdentifier","src":"9709:3:25"},"nativeSrc":"9709:13:25","nodeType":"YulFunctionCall","src":"9709:13:25"},"variableNames":[{"name":"ret","nativeSrc":"9702:3:25","nodeType":"YulIdentifier","src":"9702:3:25"}]}]},"name":"increment_t_uint256","nativeSrc":"9593:135:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9622:5:25","nodeType":"YulTypedName","src":"9622:5:25","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"9632:3:25","nodeType":"YulTypedName","src":"9632:3:25","type":""}],"src":"9593:135:25"},{"body":{"nativeSrc":"9936:282:25","nodeType":"YulBlock","src":"9936:282:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9953:9:25","nodeType":"YulIdentifier","src":"9953:9:25"},{"arguments":[{"name":"value0","nativeSrc":"9968:6:25","nodeType":"YulIdentifier","src":"9968:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9984:3:25","nodeType":"YulLiteral","src":"9984:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"9989:1:25","nodeType":"YulLiteral","src":"9989:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9980:3:25","nodeType":"YulIdentifier","src":"9980:3:25"},"nativeSrc":"9980:11:25","nodeType":"YulFunctionCall","src":"9980:11:25"},{"kind":"number","nativeSrc":"9993:1:25","nodeType":"YulLiteral","src":"9993:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9976:3:25","nodeType":"YulIdentifier","src":"9976:3:25"},"nativeSrc":"9976:19:25","nodeType":"YulFunctionCall","src":"9976:19:25"}],"functionName":{"name":"and","nativeSrc":"9964:3:25","nodeType":"YulIdentifier","src":"9964:3:25"},"nativeSrc":"9964:32:25","nodeType":"YulFunctionCall","src":"9964:32:25"}],"functionName":{"name":"mstore","nativeSrc":"9946:6:25","nodeType":"YulIdentifier","src":"9946:6:25"},"nativeSrc":"9946:51:25","nodeType":"YulFunctionCall","src":"9946:51:25"},"nativeSrc":"9946:51:25","nodeType":"YulExpressionStatement","src":"9946:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10017:9:25","nodeType":"YulIdentifier","src":"10017:9:25"},{"kind":"number","nativeSrc":"10028:2:25","nodeType":"YulLiteral","src":"10028:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10013:3:25","nodeType":"YulIdentifier","src":"10013:3:25"},"nativeSrc":"10013:18:25","nodeType":"YulFunctionCall","src":"10013:18:25"},{"arguments":[{"name":"value1","nativeSrc":"10037:6:25","nodeType":"YulIdentifier","src":"10037:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10053:3:25","nodeType":"YulLiteral","src":"10053:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"10058:1:25","nodeType":"YulLiteral","src":"10058:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10049:3:25","nodeType":"YulIdentifier","src":"10049:3:25"},"nativeSrc":"10049:11:25","nodeType":"YulFunctionCall","src":"10049:11:25"},{"kind":"number","nativeSrc":"10062:1:25","nodeType":"YulLiteral","src":"10062:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10045:3:25","nodeType":"YulIdentifier","src":"10045:3:25"},"nativeSrc":"10045:19:25","nodeType":"YulFunctionCall","src":"10045:19:25"}],"functionName":{"name":"and","nativeSrc":"10033:3:25","nodeType":"YulIdentifier","src":"10033:3:25"},"nativeSrc":"10033:32:25","nodeType":"YulFunctionCall","src":"10033:32:25"}],"functionName":{"name":"mstore","nativeSrc":"10006:6:25","nodeType":"YulIdentifier","src":"10006:6:25"},"nativeSrc":"10006:60:25","nodeType":"YulFunctionCall","src":"10006:60:25"},"nativeSrc":"10006:60:25","nodeType":"YulExpressionStatement","src":"10006:60:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10086:9:25","nodeType":"YulIdentifier","src":"10086:9:25"},{"kind":"number","nativeSrc":"10097:2:25","nodeType":"YulLiteral","src":"10097:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10082:3:25","nodeType":"YulIdentifier","src":"10082:3:25"},"nativeSrc":"10082:18:25","nodeType":"YulFunctionCall","src":"10082:18:25"},{"name":"value2","nativeSrc":"10102:6:25","nodeType":"YulIdentifier","src":"10102:6:25"}],"functionName":{"name":"mstore","nativeSrc":"10075:6:25","nodeType":"YulIdentifier","src":"10075:6:25"},"nativeSrc":"10075:34:25","nodeType":"YulFunctionCall","src":"10075:34:25"},"nativeSrc":"10075:34:25","nodeType":"YulExpressionStatement","src":"10075:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10129:9:25","nodeType":"YulIdentifier","src":"10129:9:25"},{"kind":"number","nativeSrc":"10140:2:25","nodeType":"YulLiteral","src":"10140:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10125:3:25","nodeType":"YulIdentifier","src":"10125:3:25"},"nativeSrc":"10125:18:25","nodeType":"YulFunctionCall","src":"10125:18:25"},{"kind":"number","nativeSrc":"10145:3:25","nodeType":"YulLiteral","src":"10145:3:25","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"10118:6:25","nodeType":"YulIdentifier","src":"10118:6:25"},"nativeSrc":"10118:31:25","nodeType":"YulFunctionCall","src":"10118:31:25"},"nativeSrc":"10118:31:25","nodeType":"YulExpressionStatement","src":"10118:31:25"},{"nativeSrc":"10158:54:25","nodeType":"YulAssignment","src":"10158:54:25","value":{"arguments":[{"name":"value3","nativeSrc":"10184:6:25","nodeType":"YulIdentifier","src":"10184:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"10196:9:25","nodeType":"YulIdentifier","src":"10196:9:25"},{"kind":"number","nativeSrc":"10207:3:25","nodeType":"YulLiteral","src":"10207:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10192:3:25","nodeType":"YulIdentifier","src":"10192:3:25"},"nativeSrc":"10192:19:25","nodeType":"YulFunctionCall","src":"10192:19:25"}],"functionName":{"name":"abi_encode_string","nativeSrc":"10166:17:25","nodeType":"YulIdentifier","src":"10166:17:25"},"nativeSrc":"10166:46:25","nodeType":"YulFunctionCall","src":"10166:46:25"},"variableNames":[{"name":"tail","nativeSrc":"10158:4:25","nodeType":"YulIdentifier","src":"10158:4:25"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"9733:485:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9881:9:25","nodeType":"YulTypedName","src":"9881:9:25","type":""},{"name":"value3","nativeSrc":"9892:6:25","nodeType":"YulTypedName","src":"9892:6:25","type":""},{"name":"value2","nativeSrc":"9900:6:25","nodeType":"YulTypedName","src":"9900:6:25","type":""},{"name":"value1","nativeSrc":"9908:6:25","nodeType":"YulTypedName","src":"9908:6:25","type":""},{"name":"value0","nativeSrc":"9916:6:25","nodeType":"YulTypedName","src":"9916:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9927:4:25","nodeType":"YulTypedName","src":"9927:4:25","type":""}],"src":"9733:485:25"},{"body":{"nativeSrc":"10303:169:25","nodeType":"YulBlock","src":"10303:169:25","statements":[{"body":{"nativeSrc":"10349:16:25","nodeType":"YulBlock","src":"10349:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10358:1:25","nodeType":"YulLiteral","src":"10358:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"10361:1:25","nodeType":"YulLiteral","src":"10361:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10351:6:25","nodeType":"YulIdentifier","src":"10351:6:25"},"nativeSrc":"10351:12:25","nodeType":"YulFunctionCall","src":"10351:12:25"},"nativeSrc":"10351:12:25","nodeType":"YulExpressionStatement","src":"10351:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10324:7:25","nodeType":"YulIdentifier","src":"10324:7:25"},{"name":"headStart","nativeSrc":"10333:9:25","nodeType":"YulIdentifier","src":"10333:9:25"}],"functionName":{"name":"sub","nativeSrc":"10320:3:25","nodeType":"YulIdentifier","src":"10320:3:25"},"nativeSrc":"10320:23:25","nodeType":"YulFunctionCall","src":"10320:23:25"},{"kind":"number","nativeSrc":"10345:2:25","nodeType":"YulLiteral","src":"10345:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10316:3:25","nodeType":"YulIdentifier","src":"10316:3:25"},"nativeSrc":"10316:32:25","nodeType":"YulFunctionCall","src":"10316:32:25"},"nativeSrc":"10313:52:25","nodeType":"YulIf","src":"10313:52:25"},{"nativeSrc":"10374:29:25","nodeType":"YulVariableDeclaration","src":"10374:29:25","value":{"arguments":[{"name":"headStart","nativeSrc":"10393:9:25","nodeType":"YulIdentifier","src":"10393:9:25"}],"functionName":{"name":"mload","nativeSrc":"10387:5:25","nodeType":"YulIdentifier","src":"10387:5:25"},"nativeSrc":"10387:16:25","nodeType":"YulFunctionCall","src":"10387:16:25"},"variables":[{"name":"value","nativeSrc":"10378:5:25","nodeType":"YulTypedName","src":"10378:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10436:5:25","nodeType":"YulIdentifier","src":"10436:5:25"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"10412:23:25","nodeType":"YulIdentifier","src":"10412:23:25"},"nativeSrc":"10412:30:25","nodeType":"YulFunctionCall","src":"10412:30:25"},"nativeSrc":"10412:30:25","nodeType":"YulExpressionStatement","src":"10412:30:25"},{"nativeSrc":"10451:15:25","nodeType":"YulAssignment","src":"10451:15:25","value":{"name":"value","nativeSrc":"10461:5:25","nodeType":"YulIdentifier","src":"10461:5:25"},"variableNames":[{"name":"value0","nativeSrc":"10451:6:25","nodeType":"YulIdentifier","src":"10451:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"10223:249:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10269:9:25","nodeType":"YulTypedName","src":"10269:9:25","type":""},{"name":"dataEnd","nativeSrc":"10280:7:25","nodeType":"YulTypedName","src":"10280:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10292:6:25","nodeType":"YulTypedName","src":"10292:6:25","type":""}],"src":"10223:249:25"},{"body":{"nativeSrc":"10664:309:25","nodeType":"YulBlock","src":"10664:309:25","statements":[{"nativeSrc":"10674:27:25","nodeType":"YulVariableDeclaration","src":"10674:27:25","value":{"arguments":[{"name":"value0","nativeSrc":"10694:6:25","nodeType":"YulIdentifier","src":"10694:6:25"}],"functionName":{"name":"mload","nativeSrc":"10688:5:25","nodeType":"YulIdentifier","src":"10688:5:25"},"nativeSrc":"10688:13:25","nodeType":"YulFunctionCall","src":"10688:13:25"},"variables":[{"name":"length","nativeSrc":"10678:6:25","nodeType":"YulTypedName","src":"10678:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"10749:6:25","nodeType":"YulIdentifier","src":"10749:6:25"},{"kind":"number","nativeSrc":"10757:4:25","nodeType":"YulLiteral","src":"10757:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10745:3:25","nodeType":"YulIdentifier","src":"10745:3:25"},"nativeSrc":"10745:17:25","nodeType":"YulFunctionCall","src":"10745:17:25"},{"name":"pos","nativeSrc":"10764:3:25","nodeType":"YulIdentifier","src":"10764:3:25"},{"name":"length","nativeSrc":"10769:6:25","nodeType":"YulIdentifier","src":"10769:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10710:34:25","nodeType":"YulIdentifier","src":"10710:34:25"},"nativeSrc":"10710:66:25","nodeType":"YulFunctionCall","src":"10710:66:25"},"nativeSrc":"10710:66:25","nodeType":"YulExpressionStatement","src":"10710:66:25"},{"nativeSrc":"10785:29:25","nodeType":"YulVariableDeclaration","src":"10785:29:25","value":{"arguments":[{"name":"pos","nativeSrc":"10802:3:25","nodeType":"YulIdentifier","src":"10802:3:25"},{"name":"length","nativeSrc":"10807:6:25","nodeType":"YulIdentifier","src":"10807:6:25"}],"functionName":{"name":"add","nativeSrc":"10798:3:25","nodeType":"YulIdentifier","src":"10798:3:25"},"nativeSrc":"10798:16:25","nodeType":"YulFunctionCall","src":"10798:16:25"},"variables":[{"name":"end_1","nativeSrc":"10789:5:25","nodeType":"YulTypedName","src":"10789:5:25","type":""}]},{"nativeSrc":"10823:29:25","nodeType":"YulVariableDeclaration","src":"10823:29:25","value":{"arguments":[{"name":"value1","nativeSrc":"10845:6:25","nodeType":"YulIdentifier","src":"10845:6:25"}],"functionName":{"name":"mload","nativeSrc":"10839:5:25","nodeType":"YulIdentifier","src":"10839:5:25"},"nativeSrc":"10839:13:25","nodeType":"YulFunctionCall","src":"10839:13:25"},"variables":[{"name":"length_1","nativeSrc":"10827:8:25","nodeType":"YulTypedName","src":"10827:8:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"10900:6:25","nodeType":"YulIdentifier","src":"10900:6:25"},{"kind":"number","nativeSrc":"10908:4:25","nodeType":"YulLiteral","src":"10908:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10896:3:25","nodeType":"YulIdentifier","src":"10896:3:25"},"nativeSrc":"10896:17:25","nodeType":"YulFunctionCall","src":"10896:17:25"},{"name":"end_1","nativeSrc":"10915:5:25","nodeType":"YulIdentifier","src":"10915:5:25"},{"name":"length_1","nativeSrc":"10922:8:25","nodeType":"YulIdentifier","src":"10922:8:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10861:34:25","nodeType":"YulIdentifier","src":"10861:34:25"},"nativeSrc":"10861:70:25","nodeType":"YulFunctionCall","src":"10861:70:25"},"nativeSrc":"10861:70:25","nodeType":"YulExpressionStatement","src":"10861:70:25"},{"nativeSrc":"10940:27:25","nodeType":"YulAssignment","src":"10940:27:25","value":{"arguments":[{"name":"end_1","nativeSrc":"10951:5:25","nodeType":"YulIdentifier","src":"10951:5:25"},{"name":"length_1","nativeSrc":"10958:8:25","nodeType":"YulIdentifier","src":"10958:8:25"}],"functionName":{"name":"add","nativeSrc":"10947:3:25","nodeType":"YulIdentifier","src":"10947:3:25"},"nativeSrc":"10947:20:25","nodeType":"YulFunctionCall","src":"10947:20:25"},"variableNames":[{"name":"end","nativeSrc":"10940:3:25","nodeType":"YulIdentifier","src":"10940:3:25"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"10477:496:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10632:3:25","nodeType":"YulTypedName","src":"10632:3:25","type":""},{"name":"value1","nativeSrc":"10637:6:25","nodeType":"YulTypedName","src":"10637:6:25","type":""},{"name":"value0","nativeSrc":"10645:6:25","nodeType":"YulTypedName","src":"10645:6:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10656:3:25","nodeType":"YulTypedName","src":"10656:3:25","type":""}],"src":"10477:496:25"},{"body":{"nativeSrc":"11010:95:25","nodeType":"YulBlock","src":"11010:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11027:1:25","nodeType":"YulLiteral","src":"11027:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"11034:3:25","nodeType":"YulLiteral","src":"11034:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"11039:10:25","nodeType":"YulLiteral","src":"11039:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"11030:3:25","nodeType":"YulIdentifier","src":"11030:3:25"},"nativeSrc":"11030:20:25","nodeType":"YulFunctionCall","src":"11030:20:25"}],"functionName":{"name":"mstore","nativeSrc":"11020:6:25","nodeType":"YulIdentifier","src":"11020:6:25"},"nativeSrc":"11020:31:25","nodeType":"YulFunctionCall","src":"11020:31:25"},"nativeSrc":"11020:31:25","nodeType":"YulExpressionStatement","src":"11020:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11067:1:25","nodeType":"YulLiteral","src":"11067:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"11070:4:25","nodeType":"YulLiteral","src":"11070:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"11060:6:25","nodeType":"YulIdentifier","src":"11060:6:25"},"nativeSrc":"11060:15:25","nodeType":"YulFunctionCall","src":"11060:15:25"},"nativeSrc":"11060:15:25","nodeType":"YulExpressionStatement","src":"11060:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11091:1:25","nodeType":"YulLiteral","src":"11091:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"11094:4:25","nodeType":"YulLiteral","src":"11094:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11084:6:25","nodeType":"YulIdentifier","src":"11084:6:25"},"nativeSrc":"11084:15:25","nodeType":"YulFunctionCall","src":"11084:15:25"},"nativeSrc":"11084:15:25","nodeType":"YulExpressionStatement","src":"11084:15:25"}]},"name":"panic_error_0x12","nativeSrc":"10978:127:25","nodeType":"YulFunctionDefinition","src":"10978:127:25"},{"body":{"nativeSrc":"11159:79:25","nodeType":"YulBlock","src":"11159:79:25","statements":[{"nativeSrc":"11169:17:25","nodeType":"YulAssignment","src":"11169:17:25","value":{"arguments":[{"name":"x","nativeSrc":"11181:1:25","nodeType":"YulIdentifier","src":"11181:1:25"},{"name":"y","nativeSrc":"11184:1:25","nodeType":"YulIdentifier","src":"11184:1:25"}],"functionName":{"name":"sub","nativeSrc":"11177:3:25","nodeType":"YulIdentifier","src":"11177:3:25"},"nativeSrc":"11177:9:25","nodeType":"YulFunctionCall","src":"11177:9:25"},"variableNames":[{"name":"diff","nativeSrc":"11169:4:25","nodeType":"YulIdentifier","src":"11169:4:25"}]},{"body":{"nativeSrc":"11210:22:25","nodeType":"YulBlock","src":"11210:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11212:16:25","nodeType":"YulIdentifier","src":"11212:16:25"},"nativeSrc":"11212:18:25","nodeType":"YulFunctionCall","src":"11212:18:25"},"nativeSrc":"11212:18:25","nodeType":"YulExpressionStatement","src":"11212:18:25"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"11201:4:25","nodeType":"YulIdentifier","src":"11201:4:25"},{"name":"x","nativeSrc":"11207:1:25","nodeType":"YulIdentifier","src":"11207:1:25"}],"functionName":{"name":"gt","nativeSrc":"11198:2:25","nodeType":"YulIdentifier","src":"11198:2:25"},"nativeSrc":"11198:11:25","nodeType":"YulFunctionCall","src":"11198:11:25"},"nativeSrc":"11195:37:25","nodeType":"YulIf","src":"11195:37:25"}]},"name":"checked_sub_t_uint256","nativeSrc":"11110:128:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11141:1:25","nodeType":"YulTypedName","src":"11141:1:25","type":""},{"name":"y","nativeSrc":"11144:1:25","nodeType":"YulTypedName","src":"11144:1:25","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"11150:4:25","nodeType":"YulTypedName","src":"11150:4:25","type":""}],"src":"11110:128:25"},{"body":{"nativeSrc":"11275:95:25","nodeType":"YulBlock","src":"11275:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11292:1:25","nodeType":"YulLiteral","src":"11292:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"11299:3:25","nodeType":"YulLiteral","src":"11299:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"11304:10:25","nodeType":"YulLiteral","src":"11304:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"11295:3:25","nodeType":"YulIdentifier","src":"11295:3:25"},"nativeSrc":"11295:20:25","nodeType":"YulFunctionCall","src":"11295:20:25"}],"functionName":{"name":"mstore","nativeSrc":"11285:6:25","nodeType":"YulIdentifier","src":"11285:6:25"},"nativeSrc":"11285:31:25","nodeType":"YulFunctionCall","src":"11285:31:25"},"nativeSrc":"11285:31:25","nodeType":"YulExpressionStatement","src":"11285:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11332:1:25","nodeType":"YulLiteral","src":"11332:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"11335:4:25","nodeType":"YulLiteral","src":"11335:4:25","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"11325:6:25","nodeType":"YulIdentifier","src":"11325:6:25"},"nativeSrc":"11325:15:25","nodeType":"YulFunctionCall","src":"11325:15:25"},"nativeSrc":"11325:15:25","nodeType":"YulExpressionStatement","src":"11325:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11356:1:25","nodeType":"YulLiteral","src":"11356:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"11359:4:25","nodeType":"YulLiteral","src":"11359:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11349:6:25","nodeType":"YulIdentifier","src":"11349:6:25"},"nativeSrc":"11349:15:25","nodeType":"YulFunctionCall","src":"11349:15:25"},"nativeSrc":"11349:15:25","nodeType":"YulExpressionStatement","src":"11349:15:25"}]},"name":"panic_error_0x31","nativeSrc":"11243:127:25","nodeType":"YulFunctionDefinition","src":"11243:127:25"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101735760003560e01c80635c975abb116100de57806395d89b4111610097578063c87b56dd11610071578063c87b56dd14610306578063d204c45e14610319578063e985e9c51461032c578063f2fde38b1461033f57600080fd5b806395d89b41146102d8578063a22cb465146102e0578063b88d4fde146102f357600080fd5b80635c975abb146102815780636352211e1461028c57806370a082311461029f578063715018a6146102b25780638456cb59146102ba5780638da5cb5b146102c257600080fd5b80632f745c59116101305780632f745c591461021a5780633f4ba83a1461022d57806342842e0e1461023557806342966c68146102485780634f6ccce71461025b57806355f804b31461026e57600080fd5b806301ffc9a71461017857806306fdde03146101a0578063081812fc146101b5578063095ea7b3146101e057806318160ddd146101f557806323b872dd14610207575b600080fd5b61018b61018636600461144b565b610352565b60405190151581526020015b60405180910390f35b6101a8610363565b60405161019791906114b8565b6101c86101c33660046114cb565b6103f5565b6040516001600160a01b039091168152602001610197565b6101f36101ee366004611500565b61041e565b005b6008545b604051908152602001610197565b6101f361021536600461152a565b61042d565b6101f9610228366004611500565b6104bd565b6101f3610522565b6101f361024336600461152a565b610534565b6101f36102563660046114cb565b610554565b6101f96102693660046114cb565b610560565b6101f361027c366004611617565b6105b9565b600b5460ff1661018b565b6101c861029a3660046114cb565b6105cd565b6101f96102ad36600461164c565b6105d8565b6101f3610620565b6101f3610632565b600b5461010090046001600160a01b03166101c8565b6101a8610642565b6101f36102ee366004611667565b610651565b6101f36103013660046116a3565b61065c565b6101a86103143660046114cb565b610674565b6101f961032736600461171f565b61067f565b61018b61033a36600461176d565b6106bb565b6101f361034d36600461164c565b6106e9565b600061035d82610727565b92915050565b606060008054610372906117a0565b80601f016020809104026020016040519081016040528092919081815260200182805461039e906117a0565b80156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b5050505050905090565b60006104008261074c565b506000828152600460205260409020546001600160a01b031661035d565b610429828233610785565b5050565b6001600160a01b03821661045c57604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610469838333610792565b9050836001600160a01b0316816001600160a01b0316146104b7576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610453565b50505050565b60006104c8836105d8565b82106104f95760405163295f44f760e21b81526001600160a01b038416600482015260248101839052604401610453565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61052a6107a7565b6105326107da565b565b61054f8383836040518060200160405280600081525061065c565b505050565b61042960008233610792565b600061056b60085490565b82106105945760405163295f44f760e21b81526000600482015260248101839052604401610453565b600882815481106105a7576105a76117da565b90600052602060002001549050919050565b6105c16107a7565b600d6104298282611837565b600061035d8261074c565b60006001600160a01b038216610604576040516322718ad960e21b815260006004820152602401610453565b506001600160a01b031660009081526003602052604090205490565b6106286107a7565b610532600061082c565b61063a6107a7565b610532610886565b606060018054610372906117a0565b6104293383836108c3565b61066784848461042d565b6104b73385858585610962565b606061035d82610a8d565b60006106896107a7565b600c80546000918261069a8361190c565b9190505590506106aa8482610b89565b6106b48184610ba3565b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6106f16107a7565b6001600160a01b03811661071b57604051631e4fbdf760e01b815260006004820152602401610453565b6107248161082c565b50565b60006001600160e01b03198216632483248360e11b148061035d575061035d82610bf3565b6000818152600260205260408120546001600160a01b03168061035d57604051637e27328960e01b815260048101849052602401610453565b61054f8383836001610c18565b600061079f848484610d1e565b949350505050565b600b546001600160a01b036101009091041633146105325760405163118cdaa760e01b8152336004820152602401610453565b6107e2610d33565b600b805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600b80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61088e610d56565b600b805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861080f3390565b6001600160a01b0382166108f557604051630b61174360e31b81526001600160a01b0383166004820152602401610453565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610a8657604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906109a4908890889087908790600401611925565b6020604051808303816000875af19250505080156109df575060408051601f3d908101601f191682019092526109dc91810190611962565b60015b610a48573d808015610a0d576040519150601f19603f3d011682016040523d82523d6000602084013e610a12565b606091505b508051600003610a4057604051633250574960e11b81526001600160a01b0385166004820152602401610453565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610a8457604051633250574960e11b81526001600160a01b0385166004820152602401610453565b505b5050505050565b6060610a988261074c565b506000828152600a602052604081208054610ab2906117a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ade906117a0565b8015610b2b5780601f10610b0057610100808354040283529160200191610b2b565b820191906000526020600020905b815481529060010190602001808311610b0e57829003601f168201915b505050505090506000610b3c610d7a565b90508051600003610b4e575092915050565b815115610b80578082604051602001610b6892919061197f565b60405160208183030381529060405292505050919050565b61079f84610d89565b610429828260405180602001604052806000815250610df0565b6000828152600a60205260409020610bbb8282611837565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b0319821663780e9d6360e01b148061035d575061035d82610e08565b8080610c2c57506001600160a01b03821615155b15610cee576000610c3c8461074c565b90506001600160a01b03831615801590610c685750826001600160a01b0316816001600160a01b031614155b8015610c7b5750610c7981846106bb565b155b15610ca45760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610453565b8115610cec5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610d28610d56565b61079f848484610e58565b600b5460ff1661053257604051638dfc202b60e01b815260040160405180910390fd5b600b5460ff16156105325760405163d93c066560e01b815260040160405180910390fd5b6060600d8054610372906117a0565b6060610d948261074c565b506000610d9f610d7a565b90506000815111610dbf57604051806020016040528060008152506106b4565b80610dc984610f25565b604051602001610dda92919061197f565b6040516020818303038152906040529392505050565b610dfa8383610fb8565b61054f336000858585610962565b60006001600160e01b031982166380ac58cd60e01b1480610e3957506001600160e01b03198216635b5e139f60e01b145b8061035d57506301ffc9a760e01b6001600160e01b031983161461035d565b600080610e6685858561101d565b90506001600160a01b038116610ec357610ebe84600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610ee6565b846001600160a01b0316816001600160a01b031614610ee657610ee68185611116565b6001600160a01b038516610f0257610efd84611197565b61079f565b846001600160a01b0316816001600160a01b03161461079f5761079f8585611246565b60606000610f3283611296565b600101905060008167ffffffffffffffff811115610f5257610f52611567565b6040519080825280601f01601f191660200182016040528015610f7c576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610f8657509392505050565b6001600160a01b038216610fe257604051633250574960e11b815260006004820152602401610453565b6000610ff083836000610792565b90506001600160a01b0381161561054f576040516339e3563760e11b815260006004820152602401610453565b6000828152600260205260408120546001600160a01b039081169083161561104a5761104a81848661136e565b6001600160a01b0381161561108857611067600085600080610c18565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156110b7576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000611121836105d8565b6000838152600760209081526040808320546001600160a01b038816845260069092529091209192509081831461117857600083815260208281526040808320548584528184208190558352600790915290208290555b6000938452600760209081526040808620869055938552525081205550565b6008546000906111a9906001906119ae565b600083815260096020526040812054600880549394509092849081106111d1576111d16117da565b9060005260206000200154905080600883815481106111f2576111f26117da565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061122a5761122a6119c1565b6001900381819060005260206000200160009055905550505050565b60006001611253846105d8565b61125d91906119ae565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112d55772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611301576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061131f57662386f26fc10000830492506010015b6305f5e1008310611337576305f5e100830492506008015b612710831061134b57612710830492506004015b6064831061135d576064830492506002015b600a831061035d5760010192915050565b6113798383836113d2565b61054f576001600160a01b0383166113a757604051637e27328960e01b815260048101829052602401610453565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610453565b60006001600160a01b0383161580159061079f5750826001600160a01b0316846001600160a01b0316148061140c575061140c84846106bb565b8061079f5750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b03198116811461072457600080fd5b60006020828403121561145d57600080fd5b81356106b481611435565b60005b8381101561148357818101518382015260200161146b565b50506000910152565b600081518084526114a4816020860160208601611468565b601f01601f19169290920160200192915050565b6020815260006106b4602083018461148c565b6000602082840312156114dd57600080fd5b5035919050565b80356001600160a01b03811681146114fb57600080fd5b919050565b6000806040838503121561151357600080fd5b61151c836114e4565b946020939093013593505050565b60008060006060848603121561153f57600080fd5b611548846114e4565b9250611556602085016114e4565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561159857611598611567565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff821117156115c7576115c7611567565b6040528381529050808284018510156115df57600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261160857600080fd5b6106b48383356020850161157d565b60006020828403121561162957600080fd5b813567ffffffffffffffff81111561164057600080fd5b61079f848285016115f7565b60006020828403121561165e57600080fd5b6106b4826114e4565b6000806040838503121561167a57600080fd5b611683836114e4565b91506020830135801515811461169857600080fd5b809150509250929050565b600080600080608085870312156116b957600080fd5b6116c2856114e4565b93506116d0602086016114e4565b925060408501359150606085013567ffffffffffffffff8111156116f357600080fd5b8501601f8101871361170457600080fd5b6117138782356020840161157d565b91505092959194509250565b6000806040838503121561173257600080fd5b61173b836114e4565b9150602083013567ffffffffffffffff81111561175757600080fd5b611763858286016115f7565b9150509250929050565b6000806040838503121561178057600080fd5b611789836114e4565b9150611797602084016114e4565b90509250929050565b600181811c908216806117b457607f821691505b6020821081036117d457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b601f82111561054f57806000526020600020601f840160051c810160208510156118175750805b601f840160051c820191505b81811015610a865760008155600101611823565b815167ffffffffffffffff81111561185157611851611567565b6118658161185f84546117a0565b846117f0565b6020601f82116001811461189957600083156118815750848201515b600019600385901b1c1916600184901b178455610a86565b600084815260208120601f198516915b828110156118c957878501518255602094850194600190920191016118a9565b50848210156118e75786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60006001820161191e5761191e6118f6565b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119589083018461148c565b9695505050505050565b60006020828403121561197457600080fd5b81516106b481611435565b60008351611991818460208801611468565b8351908301906119a5818360208801611468565b01949350505050565b8181038181111561035d5761035d6118f6565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220389d4afe2ba2d1d90ee40801f9a675d8b9f2ba1ca4f0c8f006ac7e6ed9d2110364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F745C59 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x207 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x144B JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x152A JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x152A JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x18B JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x632 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x642 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x301 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CB JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x171F JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH2 0x18B PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x176D JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP3 PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x17A0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP3 PUSH2 0x74C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35D JUMP JUMPDEST PUSH2 0x429 DUP3 DUP3 CALLER PUSH2 0x785 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x469 DUP4 DUP4 CALLER PUSH2 0x792 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C8 DUP4 PUSH2 0x5D8 JUMP JUMPDEST DUP3 LT PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x453 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52A PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x7DA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x54F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x65C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x429 PUSH1 0x0 DUP3 CALLER PUSH2 0x792 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56B PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5A7 JUMPI PUSH2 0x5A7 PUSH2 0x17DA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0xD PUSH2 0x429 DUP3 DUP3 PUSH2 0x1837 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP3 PUSH2 0x74C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x628 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x532 PUSH1 0x0 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x63A PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH2 0x429 CALLER DUP4 DUP4 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x667 DUP5 DUP5 DUP5 PUSH2 0x42D JUMP JUMPDEST PUSH2 0x4B7 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35D DUP3 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x689 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x69A DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x6AA DUP5 DUP3 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x6B4 DUP2 DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x7A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x724 DUP2 PUSH2 0x82C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x54F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79F DUP5 DUP5 DUP5 PUSH2 0xD1E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x7E2 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x88E PUSH2 0xD56 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x80F CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x9A4 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9DF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9DC SWAP2 DUP2 ADD SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA48 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xA40 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA98 DUP3 PUSH2 0x74C JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xAB2 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xADE SWAP1 PUSH2 0x17A0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB2B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB00 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB2B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB0E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xB3C PUSH2 0xD7A JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xB4E JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xB80 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB68 SWAP3 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79F DUP5 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x429 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBBB DUP3 DUP3 PUSH2 0x1837 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x35D JUMPI POP PUSH2 0x35D DUP3 PUSH2 0xE08 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xC2C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xCEE JUMPI PUSH1 0x0 PUSH2 0xC3C DUP5 PUSH2 0x74C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC68 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC7B JUMPI POP PUSH2 0xC79 DUP2 DUP5 PUSH2 0x6BB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xCA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xCEC JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD28 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x79F DUP5 DUP5 DUP5 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD94 DUP3 PUSH2 0x74C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xD9F PUSH2 0xD7A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xDBF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6B4 JUMP JUMPDEST DUP1 PUSH2 0xDC9 DUP5 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDDA SWAP3 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDFA DUP4 DUP4 PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x54F CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x962 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xE39 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x35D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x35D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE66 DUP6 DUP6 DUP6 PUSH2 0x101D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEC3 JUMPI PUSH2 0xEBE DUP5 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0xEE6 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEE6 JUMPI PUSH2 0xEE6 DUP2 DUP6 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xF02 JUMPI PUSH2 0xEFD DUP5 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x79F JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x79F JUMPI PUSH2 0x79F DUP6 DUP6 PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF32 DUP4 PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF52 JUMPI PUSH2 0xF52 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF7C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xF86 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFE2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF0 DUP4 DUP4 PUSH1 0x0 PUSH2 0x792 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x104A JUMPI PUSH2 0x104A DUP2 DUP5 DUP7 PUSH2 0x136E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1088 JUMPI PUSH2 0x1067 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1121 DUP4 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 DUP2 DUP4 EQ PUSH2 0x1178 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP6 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP7 SWAP1 SSTORE SWAP4 DUP6 MSTORE MSTORE POP DUP2 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x11A9 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x11D1 JUMPI PUSH2 0x11D1 PUSH2 0x17DA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x11F2 JUMPI PUSH2 0x11F2 PUSH2 0x17DA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x122A JUMPI PUSH2 0x122A PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1253 DUP5 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x125D SWAP2 SWAP1 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x12D5 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1301 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x131F JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1337 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x134B JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x135D JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x35D JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1379 DUP4 DUP4 DUP4 PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x54F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x79F JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x140C JUMPI POP PUSH2 0x140C DUP5 DUP5 PUSH2 0x6BB JUMP JUMPDEST DUP1 PUSH2 0x79F JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x145D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6B4 DUP2 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1483 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x146B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x14A4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x151C DUP4 PUSH2 0x14E4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x153F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1548 DUP5 PUSH2 0x14E4 JUMP JUMPDEST SWAP3 POP PUSH2 0x1556 PUSH1 0x20 DUP6 ADD PUSH2 0x14E4 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x1598 JUMPI PUSH2 0x1598 PUSH2 0x1567 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x15C7 JUMPI PUSH2 0x15C7 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x15DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B4 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x157D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79F DUP5 DUP3 DUP6 ADD PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x165E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B4 DUP3 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1683 DUP4 PUSH2 0x14E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C2 DUP6 PUSH2 0x14E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x16D0 PUSH1 0x20 DUP7 ADD PUSH2 0x14E4 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1713 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x157D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173B DUP4 PUSH2 0x14E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1763 DUP6 DUP3 DUP7 ADD PUSH2 0x15F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1789 DUP4 PUSH2 0x14E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1797 PUSH1 0x20 DUP5 ADD PUSH2 0x14E4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x54F JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1817 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA86 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1823 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1851 JUMPI PUSH2 0x1851 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x1865 DUP2 PUSH2 0x185F DUP5 SLOAD PUSH2 0x17A0 JUMP JUMPDEST DUP5 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1899 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1881 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x18C9 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x18A9 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x18E7 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x191E JUMPI PUSH2 0x191E PUSH2 0x18F6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1958 SWAP1 DUP4 ADD DUP5 PUSH2 0x148C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6B4 DUP2 PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1991 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1468 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x19A5 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1468 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x35D JUMPI PUSH2 0x35D PUSH2 0x18F6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SWAP14 BLOBBASEFEE INVALID 0x2B LOG2 0xD1 0xD9 0xE 0xE4 ADDMOD ADD 0xF9 0xA6 PUSH22 0xD8B9F2BA1CA4F0C8F006AC7E6ED9D2110364736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"605:2022:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2402:223;;;;;;:::i;:::-;;:::i;:::-;;;565:14:25;;558:22;540:41;;528:2;513:18;2402:223:24;;;;;;;;2263:89:5;;;:::i;:::-;;;;;;;:::i;3299:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1743:32:25;;;1725:51;;1713:2;1698:18;3299:154:5;1579:203:25;3152:113:5;;;;;;:::i;:::-;;:::i;:::-;;1967:102:9;2045:10;:17;1967:102;;;2416:25:25;;;2404:2;2389:18;1967:102:9;2270:177:25;3852:578:5;;;;;;:::i;:::-;;:::i;1668:255:9:-;;;;;;:::i;:::-;;:::i;1394:63:24:-;;;:::i;4464:132:5:-;;;;;;:::i;:::-;;:::i;563:314:8:-;;;;;;:::i;:::-;;:::i;2113:226:9:-;;;;;;:::i;:::-;;:::i;1063:110:24:-;;;;;;:::i;:::-;;:::i;1726:84:17:-;1796:7;;;;1726:84;;2103:118:5;;;;;;:::i;:::-;;:::i;1861:208::-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1328:59:24:-;;;:::i;1638:85:0:-;1710:6;;;;;-1:-1:-1;;;;;1710:6:0;1638:85;;2394:93:5;;;:::i;3487:144::-;;;;;;:::i;:::-;;:::i;4630:233::-;;;;;;:::i;:::-;;:::i;2206:189:24:-;;;;;;:::i;:::-;;:::i;1464:253::-;;;;;;:::i;:::-;;:::i;3665:153:5:-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2402:223:24:-;2555:4;2582:36;2606:11;2582:23;:36::i;:::-;2575:43;2402:223;-1:-1:-1;;2402:223:24:o;2263:89:5:-;2308:13;2340:5;2333:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:89;:::o;3299:154::-;3366:7;3385:22;3399:7;3385:13;:22::i;:::-;-1:-1:-1;5679:7:5;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5705:24:5;3425:21;5609:127;3152:113;3223:35;3232:2;3236:7;735:10:15;3223:8:5;:35::i;:::-;3152:113;;:::o;3852:578::-;-1:-1:-1;;;;;3946:16:5;;3942:87;;3985:33;;-1:-1:-1;;;3985:33:5;;4015:1;3985:33;;;1725:51:25;1698:18;;3985:33:5;;;;;;;;3942:87;4247:21;4271:34;4279:2;4283:7;735:10:15;4271:7:5;:34::i;:::-;4247:58;;4336:4;-1:-1:-1;;;;;4319:21:5;:13;-1:-1:-1;;;;;4319:21:5;;4315:109;;4363:50;;-1:-1:-1;;;4363:50:5;;-1:-1:-1;;;;;6770:32:25;;;4363:50:5;;;6752:51:25;6819:18;;;6812:34;;;6882:32;;6862:18;;;6855:60;6725:18;;4363:50:5;6550:371:25;4315:109:5;3932:498;3852:578;;;:::o;1668:255:9:-;1756:7;1788:16;1798:5;1788:9;:16::i;:::-;1779:5;:25;1775:99;;1827:36;;-1:-1:-1;;;1827:36:9;;-1:-1:-1;;;;;7118:32:25;;1827:36:9;;;7100:51:25;7167:18;;;7160:34;;;7073:18;;1827:36:9;6926:274:25;1775:99:9;-1:-1:-1;;;;;;1890:19:9;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1668:255::o;1394:63:24:-;1531:13:0;:11;:13::i;:::-;1440:10:24::1;:8;:10::i;:::-;1394:63::o:0;4464:132:5:-;4550:39;4567:4;4573:2;4577:7;4550:39;;;;;;;;;;;;:16;:39::i;:::-;4464:132;;;:::o;563:314:8:-;828:42;844:1;848:7;735:10:15;4271:7:5;:34::i;2113:226:9:-;2179:7;2211:13;2045:10;:17;;1967:102;2211:13;2202:5;:22;2198:101;;2247:41;;-1:-1:-1;;;2247:41:9;;2278:1;2247:41;;;7100:51:25;7167:18;;;7160:34;;;7073:18;;2247:41:9;6926:274:25;2198:101:9;2315:10;2326:5;2315:17;;;;;;;;:::i;:::-;;;;;;;;;2308:24;;2113:226;;;:::o;1063:110:24:-;1531:13:0;:11;:13::i;:::-;1138::24::1;:28;1154:12:::0;1138:13;:28:::1;:::i;2103:118:5:-:0;2166:7;2192:22;2206:7;2192:13;:22::i;1861:208::-;1924:7;-1:-1:-1;;;;;1947:19:5;;1943:87;;1989:30;;-1:-1:-1;;;1989:30:5;;2016:1;1989:30;;;1725:51:25;1698:18;;1989:30:5;1579:203:25;1943:87:5;-1:-1:-1;;;;;;2046:16:5;;;;;:9;:16;;;;;;;1861:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1328:59:24:-:0;1531:13:0;:11;:13::i;:::-;1372:8:24::1;:6;:8::i;2394:93:5:-:0;2441:13;2473:7;2466:14;;;;;:::i;3487:144::-;3572:52;735:10:15;3605:8:5;3615;3572:18;:52::i;4630:233::-;4743:31;4756:4;4762:2;4766:7;4743:12;:31::i;:::-;4784:72;735:10:15;4832:4:5;4838:2;4842:7;4851:4;4784:33;:72::i;2206:189:24:-;2329:13;2365:23;2380:7;2365:14;:23::i;1464:253::-;1563:7;1531:13:0;:11;:13::i;:::-;1604:12:24::1;:14:::0;;1586:15:::1;::::0;;1604:14:::1;::::0;::::1;:::i;:::-;;;;;1586:32;;1628:22;1638:2;1642:7;1628:9;:22::i;:::-;1660:26;1673:7;1682:3;1660:12;:26::i;:::-;1703:7:::0;1464:253;-1:-1:-1;;;1464:253:24:o;3665:153:5:-;-1:-1:-1;;;;;3776:25:5;;;3753:4;3776:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3665:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1725:51:25::0;1698:18;;2672:31:0::1;1579:203:25::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;961:207:11:-;1063:4;-1:-1:-1;;;;;;1086:35:11;;-1:-1:-1;;;1086:35:11;;:75;;;1125:36;1149:11;1125:23;:36::i;15858:241:5:-;15921:7;5470:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5470:16:5;;15983:88;;16029:31;;-1:-1:-1;;;16029:31:5;;;;;2416:25:25;;;2389:18;;16029:31:5;2270:177:25;14138:120:5;14218:33;14227:2;14231:7;14240:4;14246;14218:8;:33::i;1793:222:24:-;1946:7;1976:32;1990:2;1994:7;2003:4;1976:13;:32::i;:::-;1969:39;1793:222;-1:-1:-1;;;;1793:222:24:o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;;;;;735:10:15;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:15;1901:40:0;;;1725:51:25;1698:18;;1901:40:0;1579:203:25;2586:117:17;1597:16;:14;:16::i;:::-;2644:7:::1;:15:::0;;-1:-1:-1;;2644:15:17::1;::::0;;2674:22:::1;735:10:15::0;2683:12:17::1;2674:22;::::0;-1:-1:-1;;;;;1743:32:25;;;1725:51;;1713:2;1698:18;2674:22:17::1;;;;;;;2586:117::o:0;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2339:115:17:-;1350:19;:17;:19::i;:::-;2398:7:::1;:14:::0;;-1:-1:-1;;2398:14:17::1;2408:4;2398:14;::::0;;2427:20:::1;2434:12;735:10:15::0;;656:96;15311:312:5;-1:-1:-1;;;;;15418:22:5;;15414:91;;15463:31;;-1:-1:-1;;;15463:31:5;;-1:-1:-1;;;;;1743:32:25;;15463:31:5;;;1725:51:25;1698:18;;15463:31:5;1579:203:25;15414:91:5;-1:-1:-1;;;;;15514:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15514:46:5;;;;;;;;;;15575:41;;540::25;;;15575::5;;513:18:25;15575:41:5;;;;;;;15311:312;;;:::o;993:926:14:-;-1:-1:-1;;;;;1173:14:14;;;:18;1169:744;;1211:67;;-1:-1:-1;;;1211:67:14;;-1:-1:-1;;;;;1211:36:14;;;;;:67;;1248:8;;1258:4;;1264:7;;1273:4;;1211:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1211:67:14;;;;;;;;-1:-1:-1;;1211:67:14;;;;;;;;;;;;:::i;:::-;;;1207:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:6;:13;1585:1;1568:18;1564:325;;1672:39;;-1:-1:-1;;;1672:39:14;;-1:-1:-1;;;;;1743:32:25;;1672:39:14;;;1725:51:25;1698:18;;1672:39:14;1579:203:25;1564:325:14;1841:6;1835:13;1828:4;1820:6;1816:17;1809:40;1207:696;-1:-1:-1;;;;;;1325:51:14;;-1:-1:-1;;;1325:51:14;1321:182;;1445:39;;-1:-1:-1;;;1445:39:14;;-1:-1:-1;;;;;1743:32:25;;1445:39:14;;;1725:51:25;1698:18;;1445:39:14;1579:203:25;1321:182:14;1279:238;1207:696;993:926;;;;;:::o;1210:593:11:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;-1:-1:-1;1341:23:11;1367:19;;;:10;:19;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1506:4;1500:18;1522:1;1500:23;1496:70;;-1:-1:-1;1546:9:11;1210:593;-1:-1:-1;;1210:593:11:o;1496:70::-;1665:23;;:27;1661:95;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;1210:593;;;:::o;1661:95::-;1773:23;1788:7;1773:14;:23::i;10302:100:5:-;10369:26;10379:2;10383:7;10369:26;;;;;;;;;;;;:9;:26::i;1931:167:11:-;2022:19;;;;:10;:19;;;;;:31;2044:9;2022:19;:31;:::i;:::-;-1:-1:-1;2068:23:11;;2416:25:25;;;2068:23:11;;2404:2:25;2389:18;2068:23:11;;;;;;;1931:167;;:::o;1402:222:9:-;1504:4;-1:-1:-1;;;;;;1527:50:9;;-1:-1:-1;;;1527:50:9;;:90;;;1581:36;1605:11;1581:23;:36::i;14440:662:5:-;14600:9;:31;;;-1:-1:-1;;;;;;14613:18:5;;;;14600:31;14596:460;;;14647:13;14663:22;14677:7;14663:13;:22::i;:::-;14647:38;-1:-1:-1;;;;;;14813:18:5;;;;;;:35;;;14844:4;-1:-1:-1;;;;;14835:13:5;:5;-1:-1:-1;;;;;14835:13:5;;;14813:35;:69;;;;;14853:29;14870:5;14877:4;14853:16;:29::i;:::-;14852:30;14813:69;14809:142;;;14909:27;;-1:-1:-1;;;14909:27:5;;-1:-1:-1;;;;;1743:32:25;;14909:27:5;;;1725:51:25;1698:18;;14909:27:5;1579:203:25;14809:142:5;14969:9;14965:81;;;15023:7;15019:2;-1:-1:-1;;;;;15003:28:5;15012:5;-1:-1:-1;;;;;15003:28:5;;;;;;;;;;;14965:81;14633:423;14596:460;-1:-1:-1;;15066:24:5;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15066:29:5;-1:-1:-1;;;;;15066:29:5;;;;;;;;;;14440:662::o;1121:204:10:-;1260:7;1350:19:17;:17;:19::i;:::-;1286:32:10::1;1300:2;1304:7;1313:4;1286:13;:32::i;2078:126:17:-:0;1796:7;;;;2136:62;;2172:15;;-1:-1:-1;;;2172:15:17;;;;;;;;;;;1878:128;1796:7;;;;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:17;;;;;;;;;;;1217:104:24;1269:13;1301;1294:20;;;;;:::i;2529:255:5:-;2593:13;2618:22;2632:7;2618:13;:22::i;:::-;;2651:21;2675:10;:8;:10::i;:::-;2651:34;;2726:1;2708:7;2702:21;:25;:75;;;;;;;;;;;;;;;;;2744:7;2753:18;:7;:16;:18::i;:::-;2730:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2695:82;2529:255;-1:-1:-1;;;2529:255:5:o;10623:207::-;10717:18;10723:2;10727:7;10717:5;:18::i;:::-;10745:78;735:10:15;10801:1:5;10805:2;10809:7;10818:4;10745:33;:78::i;1527:300::-;1629:4;-1:-1:-1;;;;;;1664:40:5;;-1:-1:-1;;;1664:40:5;;:104;;-1:-1:-1;;;;;;;1720:48:5;;-1:-1:-1;;;1720:48:5;1664:104;:156;;;-1:-1:-1;;;;;;;;;;829:40:19;;;1784:36:5;730:146:19;2372:625:9;2467:7;2486:21;2510:32;2524:2;2528:7;2537:4;2510:13;:32::i;:::-;2486:56;-1:-1:-1;;;;;;2557:27:9;;2553:210;;2600:40;2632:7;3803:10;:17;;3776:24;;;;:15;:24;;;;;:44;;;3830:24;;;;;;;;;;;;3700:161;2600:40;2553:210;;;2678:2;-1:-1:-1;;;;;2661:19:9;:13;-1:-1:-1;;;;;2661:19:9;;2657:106;;2696:56;2729:13;2744:7;2696:32;:56::i;:::-;-1:-1:-1;;;;;2776:16:9;;2772:188;;2808:45;2845:7;2808:36;:45::i;:::-;2772:188;;;2891:2;-1:-1:-1;;;;;2874:19:9;:13;-1:-1:-1;;;;;2874:19:9;;2870:90;;2909:40;2937:2;2941:7;2909:27;:40::i;1308:634:18:-;1364:13;1413:14;1430:17;1441:5;1430:10;:17::i;:::-;1450:1;1430:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:18:18;-1:-1:-1;1465:41:18;-1:-1:-1;1595:30:18;;;1611:4;1595:30;1652:247;-1:-1:-1;;1683:5:18;-1:-1:-1;;;1782:2:18;1771:14;;1766:32;1683:5;1753:46;1843:2;1834:11;;;-1:-1:-1;1863:21:18;1652:247;1863:21;-1:-1:-1;1919:6:18;1308:634;-1:-1:-1;;;1308:634:18:o;9624:327:5:-;-1:-1:-1;;;;;9691:16:5;;9687:87;;9730:33;;-1:-1:-1;;;9730:33:5;;9760:1;9730:33;;;1725:51:25;1698:18;;9730:33:5;1579:203:25;9687:87:5;9783:21;9807:32;9815:2;9819:7;9836:1;9807:7;:32::i;:::-;9783:56;-1:-1:-1;;;;;;9853:27:5;;;9849:96;;9903:31;;-1:-1:-1;;;9903:31:5;;9931:1;9903:31;;;1725:51:25;1698:18;;9903:31:5;1579:203:25;8507:795:5;8593:7;5470:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5470:16:5;;;;8704:18;;;8700:86;;8738:37;8755:4;8761;8767:7;8738:16;:37::i;:::-;-1:-1:-1;;;;;8830:18:5;;;8826:256;;8946:48;8963:1;8967:7;8984:1;8988:5;8946:8;:48::i;:::-;-1:-1:-1;;;;;9037:15:5;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9037:20:5;;;8826:256;-1:-1:-1;;;;;9096:16:5;;;9092:107;;-1:-1:-1;;;;;9156:13:5;;;;;;:9;:13;;;;;:18;;9173:1;9156:18;;;9092:107;9209:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9209:21:5;-1:-1:-1;;;;;9209:21:5;;;;;;;;;9246:27;;9209:16;;9246:27;;;;;;;9291:4;8507:795;-1:-1:-1;;;;8507:795:5:o;4478:1055:9:-;4740:22;4765:15;4775:4;4765:9;:15::i;:::-;4790:18;4811:26;;;:17;:26;;;;;;;;;-1:-1:-1;;;;;4912:18:9;;;;:12;:18;;;;;;4740:40;;-1:-1:-1;4811:26:9;5034:28;;;5030:325;;5078:19;5100:35;;;;;;;;;;;;5150:31;;;;;;:45;;;5267:30;;:17;:30;;;;;:43;;;5030:325;5448:26;;;;:17;:26;;;;;;;;5441:33;;;5491:35;;;;-1:-1:-1;5491:35:9;;5484:42;-1:-1:-1;4478:1055:9:o;5821:1061::-;6095:10;:17;6070:22;;6095:21;;6115:1;;6095:21;:::i;:::-;6126:18;6147:24;;;:15;:24;;;;;;6515:10;:26;;6070:46;;-1:-1:-1;6147:24:9;;6070:46;;6515:26;;;;;;:::i;:::-;;;;;;;;;6493:48;;6577:11;6552:10;6563;6552:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6656:28;;;:15;:28;;;;;;;:41;;;6825:24;;;;;6818:31;6859:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5892:990;;;5821:1061;:::o;3291:214::-;3375:14;3408:1;3392:13;3402:2;3392:9;:13::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;3419:16:9;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3463:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3291:214:9:o;29154:916:21:-;29207:7;;-1:-1:-1;;;29282:17:21;;29278:103;;-1:-1:-1;;;29319:17:21;;;-1:-1:-1;29364:2:21;29354:12;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;-1:-1:-1;29480:2:21;29470:12;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;-1:-1:-1;29596:2:21;29586:12;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;-1:-1:-1;29710:1:21;29700:11;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;-1:-1:-1;29823:1:21;29813:11;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;-1:-1:-1;29936:1:21;29926:11;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;30057:6;29154:916;-1:-1:-1;;29154:916:21:o;6751:368:5:-;6863:38;6877:5;6884:7;6893;6863:13;:38::i;:::-;6858:255;;-1:-1:-1;;;;;6921:19:5;;6917:186;;6967:31;;-1:-1:-1;;;6967:31:5;;;;;2416:25:25;;;2389:18;;6967:31:5;2270:177:25;6917:186:5;7044:44;;-1:-1:-1;;;7044:44:5;;-1:-1:-1;;;;;7118:32:25;;7044:44:5;;;7100:51:25;7167:18;;;7160:34;;;7073:18;;7044:44:5;6926:274:25;6047:272:5;6150:4;-1:-1:-1;;;;;6185:21:5;;;;;;:127;;;6232:7;-1:-1:-1;;;;;6223:16:5;:5;-1:-1:-1;;;;;6223:16:5;;:52;;;;6243:32;6260:5;6267:7;6243:16;:32::i;:::-;6223:88;;;-1:-1:-1;;5679:7:5;5705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;5705:24:5;;;6279:32;;;;;-1:-1:-1;6047:272:5:o;14:131:25:-;-1:-1:-1;;;;;;88:32:25;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:25;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:25;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:25:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:226::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1521:23:25;;1348:226;-1:-1:-1;1348:226:25:o;1787:173::-;1855:20;;-1:-1:-1;;;;;1904:31:25;;1894:42;;1884:70;;1950:1;1947;1940:12;1884:70;1787:173;;;:::o;1965:300::-;2033:6;2041;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;2231:2;2216:18;;;;2203:32;;-1:-1:-1;;;1965:300:25:o;2452:374::-;2529:6;2537;2545;2598:2;2586:9;2577:7;2573:23;2569:32;2566:52;;;2614:1;2611;2604:12;2566:52;2637:29;2656:9;2637:29;:::i;:::-;2627:39;;2685:38;2719:2;2708:9;2704:18;2685:38;:::i;:::-;2452:374;;2675:48;;-1:-1:-1;;;2792:2:25;2777:18;;;;2764:32;;2452:374::o;2831:127::-;2892:10;2887:3;2883:20;2880:1;2873:31;2923:4;2920:1;2913:15;2947:4;2944:1;2937:15;2963:716;3028:5;3060:1;3084:18;3076:6;3073:30;3070:56;;;3106:18;;:::i;:::-;-1:-1:-1;3261:2:25;3255:9;-1:-1:-1;;3174:2:25;3153:15;;3149:29;;3319:2;3307:15;3303:29;3291:42;;3384:22;;;3363:18;3348:34;;3345:62;3342:88;;;3410:18;;:::i;:::-;3446:2;3439:22;3494;;;3479:6;-1:-1:-1;3479:6:25;3531:16;;;3528:25;-1:-1:-1;3525:45:25;;;3566:1;3563;3556:12;3525:45;3616:6;3611:3;3604:4;3596:6;3592:17;3579:44;3671:1;3664:4;3655:6;3647;3643:19;3639:30;3632:41;;2963:716;;;;;:::o;3684:222::-;3727:5;3780:3;3773:4;3765:6;3761:17;3757:27;3747:55;;3798:1;3795;3788:12;3747:55;3820:80;3896:3;3887:6;3874:20;3867:4;3859:6;3855:17;3820:80;:::i;3911:322::-;3980:6;4033:2;4021:9;4012:7;4008:23;4004:32;4001:52;;;4049:1;4046;4039:12;4001:52;4089:9;4076:23;4122:18;4114:6;4111:30;4108:50;;;4154:1;4151;4144:12;4108:50;4177;4219:7;4210:6;4199:9;4195:22;4177:50;:::i;4238:186::-;4297:6;4350:2;4338:9;4329:7;4325:23;4321:32;4318:52;;;4366:1;4363;4356:12;4318:52;4389:29;4408:9;4389:29;:::i;4429:347::-;4494:6;4502;4555:2;4543:9;4534:7;4530:23;4526:32;4523:52;;;4571:1;4568;4561:12;4523:52;4594:29;4613:9;4594:29;:::i;:::-;4584:39;;4673:2;4662:9;4658:18;4645:32;4720:5;4713:13;4706:21;4699:5;4696:32;4686:60;;4742:1;4739;4732:12;4686:60;4765:5;4755:15;;;4429:347;;;;;:::o;4781:713::-;4876:6;4884;4892;4900;4953:3;4941:9;4932:7;4928:23;4924:33;4921:53;;;4970:1;4967;4960:12;4921:53;4993:29;5012:9;4993:29;:::i;:::-;4983:39;;5041:38;5075:2;5064:9;5060:18;5041:38;:::i;:::-;5031:48;-1:-1:-1;5148:2:25;5133:18;;5120:32;;-1:-1:-1;5227:2:25;5212:18;;5199:32;5254:18;5243:30;;5240:50;;;5286:1;5283;5276:12;5240:50;5309:22;;5362:4;5354:13;;5350:27;-1:-1:-1;5340:55:25;;5391:1;5388;5381:12;5340:55;5414:74;5480:7;5475:2;5462:16;5457:2;5453;5449:11;5414:74;:::i;:::-;5404:84;;;4781:713;;;;;;;:::o;5499:396::-;5577:6;5585;5638:2;5626:9;5617:7;5613:23;5609:32;5606:52;;;5654:1;5651;5644:12;5606:52;5677:29;5696:9;5677:29;:::i;:::-;5667:39;;5757:2;5746:9;5742:18;5729:32;5784:18;5776:6;5773:30;5770:50;;;5816:1;5813;5806:12;5770:50;5839;5881:7;5872:6;5861:9;5857:22;5839:50;:::i;:::-;5829:60;;;5499:396;;;;;:::o;5900:260::-;5968:6;5976;6029:2;6017:9;6008:7;6004:23;6000:32;5997:52;;;6045:1;6042;6035:12;5997:52;6068:29;6087:9;6068:29;:::i;:::-;6058:39;;6116:38;6150:2;6139:9;6135:18;6116:38;:::i;:::-;6106:48;;5900:260;;;;;:::o;6165:380::-;6244:1;6240:12;;;;6287;;;6308:61;;6362:4;6354:6;6350:17;6340:27;;6308:61;6415:2;6407:6;6404:14;6384:18;6381:38;6378:161;;6461:10;6456:3;6452:20;6449:1;6442:31;6496:4;6493:1;6486:15;6524:4;6521:1;6514:15;6378:161;;6165:380;;;:::o;7205:127::-;7266:10;7261:3;7257:20;7254:1;7247:31;7297:4;7294:1;7287:15;7321:4;7318:1;7311:15;7463:518;7565:2;7560:3;7557:11;7554:421;;;7601:5;7598:1;7591:16;7645:4;7642:1;7632:18;7715:2;7703:10;7699:19;7696:1;7692:27;7686:4;7682:38;7751:4;7739:10;7736:20;7733:47;;;-1:-1:-1;7774:4:25;7733:47;7829:2;7824:3;7820:12;7817:1;7813:20;7807:4;7803:31;7793:41;;7884:81;7902:2;7895:5;7892:13;7884:81;;;7961:1;7947:16;;7928:1;7917:13;7884:81;;8157:1299;8283:3;8277:10;8310:18;8302:6;8299:30;8296:56;;;8332:18;;:::i;:::-;8361:97;8451:6;8411:38;8443:4;8437:11;8411:38;:::i;:::-;8405:4;8361:97;:::i;:::-;8507:4;8538:2;8527:14;;8555:1;8550:649;;;;9243:1;9260:6;9257:89;;;-1:-1:-1;9312:19:25;;;9306:26;9257:89;-1:-1:-1;;8114:1:25;8110:11;;;8106:24;8102:29;8092:40;8138:1;8134:11;;;8089:57;9359:81;;8520:930;;8550:649;7410:1;7403:14;;;7447:4;7434:18;;-1:-1:-1;;8586:20:25;;;8704:222;8718:7;8715:1;8712:14;8704:222;;;8800:19;;;8794:26;8779:42;;8907:4;8892:20;;;;8860:1;8848:14;;;;8734:12;8704:222;;;8708:3;8954:6;8945:7;8942:19;8939:201;;;9015:19;;;9009:26;-1:-1:-1;;9098:1:25;9094:14;;;9110:3;9090:24;9086:37;9082:42;9067:58;9052:74;;8939:201;-1:-1:-1;;;;9186:1:25;9170:14;;;9166:22;9153:36;;-1:-1:-1;8157:1299:25:o;9461:127::-;9522:10;9517:3;9513:20;9510:1;9503:31;9553:4;9550:1;9543:15;9577:4;9574:1;9567:15;9593:135;9632:3;9653:17;;;9650:43;;9673:18;;:::i;:::-;-1:-1:-1;9720:1:25;9709:13;;9593:135::o;9733:485::-;-1:-1:-1;;;;;9964:32:25;;;9946:51;;10033:32;;10028:2;10013:18;;10006:60;10097:2;10082:18;;10075:34;;;10145:3;10140:2;10125:18;;10118:31;;;-1:-1:-1;;10166:46:25;;10192:19;;10184:6;10166:46;:::i;:::-;10158:54;9733:485;-1:-1:-1;;;;;;9733:485:25:o;10223:249::-;10292:6;10345:2;10333:9;10324:7;10320:23;10316:32;10313:52;;;10361:1;10358;10351:12;10313:52;10393:9;10387:16;10412:30;10436:5;10412:30;:::i;10477:496::-;10656:3;10694:6;10688:13;10710:66;10769:6;10764:3;10757:4;10749:6;10745:17;10710:66;:::i;:::-;10839:13;;10798:16;;;;10861:70;10839:13;10798:16;10908:4;10896:17;;10861:70;:::i;:::-;10947:20;;10477:496;-1:-1:-1;;;;10477:496:25:o;11110:128::-;11177:9;;;11198:11;;;11195:37;;;11212:18;;:::i;11243:127::-;11304:10;11299:3;11295:20;11292:1;11285:31;11335:4;11332:1;11325:15;11359:4;11356:1;11349:15"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","pause()":"8456cb59","paused()":"5c975abb","renounceOwnership()":"715018a6","safeMint(address,string)":"d204c45e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SeiNFT.sol\":\"SeiNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xdee1ff07172e443c6600581fc4f11e7830a6d33e4e551752935b835d52a09404\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c503b5573ecd8d18157903b6760e02e8f86b47238c997d6dd04b99df74ef532d\",\"dweb:/ipfs/QmSGcRgfe18dtR4t3erYBSq3W6tPGXHPZ3JKkD1yFJsNsm\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xe85bdcbce4b8474872045aafb5ed8e3e0a5bd794ded35f76ee9deef25bdc7446\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60872f2d516e70f06d9684386c6b9c0b9d7ff7f4af257be6087efa2c3bb81937\",\"dweb:/ipfs/QmdWgPbs2e8SFNNXPFwTt2xD5N8hniehgGCMHUnY1JDcCw\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xc99d280642a1590b7a9a65220b4a606576ad1f51f2773b997eff3d340501c44b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0aebdcae05832b3253bedd5575458fa4b9abca6a203966d72690e62efe98890\",\"dweb:/ipfs/QmbeFZ6X7VksJmRqncuas8cjsYGXPN8FBYtV9PGmpmup8f\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xaa3852717be1903bf8b8a66c7ce323f70ac93227769c450f2b332fdd16bd9198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09ce2e4a5b1064a392594c0d5efeb3ccd8eacf431e55a85574cafb6bfb72ba69\",\"dweb:/ipfs/QmUbT5UomYpwwMrNMzzuNcGb4sxuMZ4jz8mMPZewX8mEPn\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SeiNFT.sol\":{\"keccak256\":\"0x82340f14ce8797a24000e40db420b0fcdb235dc8f0d5bb500c1fb3e1ccdd0f63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9726e6cf25c9413a07bd1cae7aca8f1188496ad76bc916852303560cc97f5ec7\",\"dweb:/ipfs/QmVoByy54wUU5FMw5KnHN6vspS9nGcRpSsHziww9JccrfF\"]}},\"version\":1}"}}}}}